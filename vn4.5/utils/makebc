# ----------------------------- COPYRIGHT ---------------------------- #
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #
#                                                                      #
# Use, duplication or disclosure of this code is subject to the        #
# restrictions as set forth in the contract. If no contract has been   #
# raised with this copy of the code, use, duplication or disclosure    #
# of it is strictly prohibited. Permission to do so must be obtained   #
# in writing from the Head of Numerical Modelling at The Met. Office.  #
# ----------------------------- COPYRIGHT ---------------------------- #
#---------------------------------------------------------------------
#  Script: makebc
#---------------------------------------------------------------------
#
# Purpose: utility to make a boundary dataset from model dumps
#
#  Current Owner: Ian Edmond
#  Reviewer: Dave Robinson               Date of review: 28/7/97
#
#  Tested under OS version: UNICOS <UNICOS version number>
#  UM   version no: <UM version>  Date of test:  <date of test>
#
#  History:
#   Model
#  version  Date     Modification history:
# vn4.4   2/6/97   Original version Ian Edmond
#  4.5  01/09/98  Removed UMVERSION. K Rogers
#  4.5  01/10/98  Initialise UM_SECTOR_SIZE. D. Robinson.
#
#  Programming standard: UMDP 3, version <UMDP 3 version number>
#
#  Project task: <project task code>
#
#  Logical components covered: <logical component code>
#
#  External documentation:
#    <UMDP number & name of external documentation>
#
#   Interface and arguments:
#
#   makebc -n namelist dump1 [[dump2][dump3]...] output_boundary_dataset
#
#   3 or more arguments as follows:
#
#        $1 -n <namelist>      :pathname of file containing namelist
#                              :specifing details of ancilliary file
#        $2  dump1             :pathname of input dumpfile used in
#                              :the creation of boundary dataset
#        $4 -> $n-1  pp_file   :pathname of input dumpfiles used in
#                              :addition to dump1 to make the
#                                     :boundary dataset
#        $n (last argument in list)   :pathname of boundary dataset
#   -------------------------------------------------------------------
#
#   Calls    : makebc
#
#   Imports:
#     VN - Version number of the program library to be used.
#     TMPDIR - Directory in which output redirected to.
#
#   Local variables:
#     BCFILE - Output boundary dataset filename
#     FILE?? - Input dump filenames
#
# End of header -------------------------------------------------------
#! /bin/ksh

if [ $# -lt 4 ]
  then
    echo "Usage: makebc -n namelist dump1 [[dump2][dump3]...] \
output_boundary_dataset"

    exit 1
fi

# Step 0 - Set up environment variables
#

VN=4.5
# Directory for intermediate files
TMPDIR=${TMPDIR:-/tmp}

# Directory containing executable
EXEC=$UMDIR/vn$VN/exec

# UM Sector Size
UM_SECTOR_SIZE=${UM_SECTOR_SIZE:-2048}
export UM_SECTOR_SIZE

export UNIT22=$UMDIR/vn$VN/ctldata/STASHmaster
assign -f 77 g:sf

# Step 1 -  Read filenames specified in argument list and check syntax.
#
filenum=30
namelist_set=false

while [ $# -gt 0 ]               # Loop over all command line arguments

do
 case "$1" in

 -n)
    if [ ! -f  $2 ]            # Check input files exist.
    then

      echo "namelist $2 does not exist"
      exit 1

    fi

    export bc_namelist=$2
    namelist_set=true
    shift
    ;;
 *)
    if [ $namelist_set = true ]
      then

        if [ $# -gt 1 ]
          then
            filenum=`expr $filenum + 1`

            if [ ! -f  $1 ]            # Check input files exist.
              then

                echo "dumpfile $1 does not exist"
                exit 1

            fi
            export "FILE${filenum}"=$1

        elif [ $# -eq 1 ]
          then
            if [ ! -f  $1 ]
              then

                export BCFILE=$1
            else

                echo "WARNING: file $1 already exists"
                echo "Do you want to overwrite this file (y or n)?"
                read option

                case "$option" in

                y)
                  export BCFILE=$1
                  ;;
                n)
                  exit 0
                  ;;
                *)
                  echo "Invalid answer"
                  exit 1
                  ;;
                esac

            fi
        else
          echo "Usage: makebc -n namelist dump1 [[dump2][dump3]...] \
output_boundary_dataset"
          exit 1
        fi


    else
          echo "Usage: makebc -n namelist dump1 [[dump2][dump3]...] \
output_boundary_dataset"
       exit 1
    fi
    ;;
    esac
    shift
    done

# Step 2 - Execute utility & print out messages.
#
$EXEC/makebc < $bc_namelist 1> $TMPDIR/makebc_out.$$ 2>&1

CC=$?
if [ $CC != 0 ]
then
echo 'Problem with MAKEBC program'
fi

cat $TMPDIR/makebc_out.$$
echo 'MAKEBC output in:' $TMPDIR/makebc_out.$$

# Step 3 - Delete temporary files and exit
#
exit 0

