C ******************************COPYRIGHT******************************
C (c) CROWN COPYRIGHT 1997, METEOROLOGICAL OFFICE, All Rights Reserved.
C
C Use, duplication or disclosure of this code is subject to the
C restrictions as set forth in the contract.
C
C                Meteorological Office
C                London Road
C                BRACKNELL
C                Berkshire UK
C                RG12 2SZ
C
C If no contract has been raised with this copy of the code, the use,
C duplication or disclosure of it is strictly prohibited.  Permission
C to do so must first be obtained in writing from the Head of Numerical
C Modelling at the above address.
C ******************************COPYRIGHT******************************
C
CLL  Routine: PR_F_C1A ------------------------------------------------
CLL
CLL  Purpose: To print messages generated by the I/O routines in C
CLL
CLL  Author:  Bob Carruthers, Cray Research.   Date: 31 June 1997
CLL
CLL Version Date      Modification history
CLL  4.5    09/10/98  Added def UTILHIST to top def line to allow
CLL                   history executables to be built. K Rogers
CLL
CLL  -------------------------------------------------------------------
C*L  Interface and arguments: ------------------------------------------
      subroutine print_from_c(unit, message)
      implicit none
c
      integer unit              ! the nuit number that the message
                                ! applies to, or -1 if there is no
                                ! unit number.
c
      character*(*) message     ! the text of the message
c
      character*256 old_message ! the text of the last message
c
      integer
     2  old_unit                ! the unit number for the last message
     3 ,i                       ! loop index
     4 ,message_count           ! count of the number of times the last
                                ! message appeared, after the first time
     5 ,get_char_len            ! function to find the length of a
                                ! character variable, ignoring trailing
                                ! blanks.
     6 ,l                       ! length of the message from
                                ! get_char_len
     7 ,old_l                   ! length of the old message
c
      save old_unit, old_message, message_count
      data old_unit/-2/, message_count/0/, old_l/1/,
     2 old_message/'?????????'/
c
      l=get_char_len(message)
      if(old_unit.eq.unit .and. old_message(1:l).eq.message(1:l)) then
        message_count=message_count+1
      else
        if(message_count.gt.0) then
          write(6,'(a,'' - Repeated '',i3,
     2     '' Time(s)'')') old_message(1:old_l), message_count
        endif
        if(unit.ne.old_unit) write(6,'('' '')')
        write(6,'(a)') message(1:l)
        message_count=0
        old_message=message
        old_l=l
        old_unit=unit
      endif
      return
      end
