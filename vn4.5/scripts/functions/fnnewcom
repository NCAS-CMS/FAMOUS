#!/bin/ksh
# ----------------------------- COPYRIGHT ---------------------------- #
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #
#                                                                      #
# Use, duplication or disclosure of this code is subject to the        #
# restrictions as set forth in the contract. If no contract has been   #
# raised with this copy of the code, use, duplication or disclosure    #
# of it is strictly prohibited. Permission to do so must be obtained   #
# in writing from the Head of Numerical Modelling at The Met. Office.  #
# ----------------------------- COPYRIGHT ---------------------------- #
#LL  Function:  fnnewcom
#LL---------------------------------------------------------------------
#LL
#LL  Purpose: Shell function to determine what elements (if any) have
#LL           changed in the u(ser)comp(ile)vars file in the current
#LL           run compared with the previous run
#LL
#LL  Inputs:  NEWfile = ucompile_vars file for this run
#LL           OLDfile = ucompile_vars file for the previous run
#LL
#LL  Outputs: Either a string or a list of decks that need to
#LL           be recompiled.  The possible strings are
#LL           "all_fortran" : compile all fortran decks
#LL           "all_ccode"   : compile all C decks
#LL           "all_load"    : re-do linking step.
#LL
#LL  Current Owner: Anette Van der Wal
#LL  Reviewer: ????               Date of review: ????
#LL
#LL  Tested under OS version: UNICOS <UNICOS version number>
#LL  UM version no: 4.5       Date of test:  <date of test>
#LL
#LL  History:
#LL   Model
#LL  version  Date        Modification history:
#LL   4.5     14/07/98    Original version (A Van der Wal).
#LL
#LL  Programming standard: UMDP 3, version <UMDP 3 version number>
#LL
#LL  External documentation:
#LL    <UMDP number & name of external documentation>
#LL
#L   Interface and arguments: none
#L
#L   -------------------------------------------------------------------
#L
#L   Called by: qsmncompile
#L
#L   Calls    : none
#L
#L   Imports  : none
#L
#L   Exports  : none
#L
#L   Local variables: CTMPFILE1 = temporary copy of the ucompile_vars
#L                                file for this run
#L                    CTMPFILE2 = temporary copy of the ucompile_vars
#L                                file for previous run
#L
#L   End of header -----------------------------------------------------

fnnewcom()
{
  NEWfile=$1
  OLDfile=$2

  CTMPFILE1="$TEMP/compvars.new"
  CTMPFILE2="$TEMP/compvars.old"

  # create a temporary sorted version of the two input files
  cat $NEWfile | sort > $CTMPFILE1
  cat $OLDfile | sort > $CTMPFILE2

  # for each line which differs between the files check both the default
  # fortran, loader and C compiler options and deck specific options

  # 1. ignore comment lines and blank lines
  # 2. isolate the difference lines
  # 3. isolate the the tagged part of the difference line
  #    e.g. > @define FCOM_CMD
  # 4. remove the diff symbols [<>] from each line e.g @define FCOM_CMD
  # 5. produce a unique list of tagged lines

  for line in `diff -w $CTMPFILE1 $CTMPFILE2 |\
                 $UM_GREP -E -v '^[<>] #|^[<>] $' |\
                 $UM_GREP -E  '^<|^>' |\
                 $UM_AWK -F= '{print $1}' |\
                 $UM_SED -e 's/\+//g' -e 's/[><] //g' -e 's/  */^/g' |\
                 sort -u`
  do
    if [[ "$line" = *"FCOM_CMD" ]] || [[ "$line" = @fort* ]]
    then
      if [[ "$result" != *"all_fortran"* ]]
      then
        result="$result all_fortran"
      fi
    elif [[ "$line" = *"CCOM_CMD" ]] || [[ "$line" = @ccom* ]]
    then
      if [[ "$result" != *"all_ccode"* ]]
      then
        result="$result all_ccode"
      fi
    elif [[ "$line" = *"LCOM_CMD" ]] || [[ "$line" = @load* ]]
    then
      if [[ "$result" != *"all_load"* ]]
      then
        result="$result all_load"
      fi
    else
      name=${line%^*}
      result="$result $name"
    fi
  done
  echo -e $result
}
