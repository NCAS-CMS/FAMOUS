#!/bin/ksh
# ----------------------------- COPYRIGHT ---------------------------- #
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #
#                                                                      #
# Use, duplication or disclosure of this code is subject to the        #
# restrictions as set forth in the contract. If no contract has been   #
# raised with this copy of the code, use, duplication or disclosure    #
# of it is strictly prohibited. Permission to do so must be obtained   #
# in writing from the Head of Numerical Modelling at The Met. Office.  #
# ----------------------------- COPYRIGHT ---------------------------- #
#LL  Function:  mergecomb
#LL---------------------------------------------------------------------
#LL
#LL  Purpose:  merges a combination of machine specific defs with the
#LL            given partial def combination obtained from the base
#LL            xref file to obtain the final def combination
#LL
#LL  Rules :   machine	science	result
#LL            G0 	G0	-> G0 (base case)	case 1
#LL            G0Gn	G0	-> Gn			case 2
#LL            G0G1Gn  A1G3    -> G1GnA1G3             case 3
#LL            G1Gn    G0      -> G1Gn			case 4
#LL            G0      A1G3	-> A1G3                 case 5
#LL            G1Gn  	A1G3	-> G1GnA1G3 (base case) case 6
#LL
#LL  Current Owner: Anette Van der Wal
#LL  Reviewer: ????               Date of review: ????
#LL
#LL  Tested under OS version: UNICOS <UNICOS version number>
#LL  UM version no: 4.5       Date of test:  <date of test>
#LL
#LL  History:
#LL   Model
#LL  version  Date        Modification history:
#LL   4.5     14/07/98    Original version (A Van der Wal).
#LL
#LL  Programming standard: UMDP 3, version <UMDP 3 version number>
#LL
#LL  External documentation:
#LL    <UMDP number & name of external documentation>
#LL
#L   Interface and arguments: none
#L
#L   -------------------------------------------------------------------
#L
#L   Called by: mkobjxref
#L
#L   Calls    : none
#L
#L   Imports  : none
#L
#L   Exports  : none
#L
#L   Local variables: none
#L
#L   End of header -----------------------------------------------------

mergecomb()
{

  mcomb=$1
  fcomb=$2

  finalcomb=""

  if [[ "$mcomb" = "G0" ]]  && [[ "$fcomb" = "G0" ]]
  then
    # case 1
    finalcomb=G0
  elif [[ "$mcomb" = *"G0"* ]] && [[ "$fcomb" = "G0" ]]
  then
    # case 2
    finalcomb=${mcomb#G0}
  elif [[ "$mcomb" = *"G0"* ]] && [[ "$fcomb" != "G0" ]]
  then
    # case 3
    finalcomb=${mcomb#G0}$fcomb
  elif [[ "$mcomb" != *"G0"* ]] && [[ "$fcomb" = "G0" ]]
  then
    # case 4
    finalcomb=$mcomb
  elif [[ "$mcomb" = "G0" ]] && [[ "$fcomb" != "G0" ]]
  then
    # case 5
    finalcomb=$fcomb
  else
    # case 6
    finalcomb=$mcomb$fcomb
  fi

  # sort the merged def combination into ascending order
  # e.g.  A1G3
  strlength=${#finalcomb}

  # calculate the number of defs which comprise the merged def
  # combinations
  (( elements = $strlength / 2))

  # set length of variable ministr to two characters
  typeset -L2 ministr
  ministr="  "
  set -A holdarray ""

  # initialise counter
  def_count=1

  while (( $def_count <= $elements ))
  do
    # get next two characters (i.e. next def) from merged combination
    ministr=$finalcomb
    # delete the def just read from the merged combination
    finalcomb=${finalcomb#??}
    # store def in an array to allow the combination to be sorted
    holdarray[$def_count]=$ministr
    (( def_count = def_count + 1 ))
  done

  finalcomb=$(sortarray ${holdarray[*]})
  echo -e $finalcomb
}
