# ----------------------------- COPYRIGHT ---------------------------- #
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #
#                                                                      #
# Use, duplication or disclosure of this code is subject to the        #
# restrictions as set forth in the contract. If no contract has been   #
# raised with this copy of the code, use, duplication or disclosure    #
# of it is strictly prohibited. Permission to do so must be obtained   #
# in writing from the Head of Numerical Modelling at The Met. Office.  #
# ----------------------------- COPYRIGHT ---------------------------- #
#LL---------------------------------------------------------------------
#LL  Script:  mkscripts
#LL---------------------------------------------------------------------
#LL
#LL  Purpose: This script will extract the scripts required by the UM
#LL           from the umsl (nupdate script library).  The extracted
#LL           scripts will be in the correct form for the computer
#LL           platform they will be executed on.
#LL
#LL  Current Owner: Tracey Smith
#LL  Reviewer: Karen Rogers             Date of review: 06/09/94
#LL
#LL  Tested under OS version:
#LL  UM version no: 3.4                 Date of test:
#LL
#LL  History:
#LL   Model
#LL  version  Date     Modification history:
#LL    3.3    18/07/94 Original version (Tracey Smith).
#LL    3.3    01/08/94 Pass output from nupdate through sed to
#LL                    remove trailing spaces  (Tracey Smith)
#LL    3.3    03/08/94 Include extra category 'source' and improve
#LL                    error check after nupdate (Tracey Smith)
#LL    3.3    06/09/94 Removed linkdataymp.  Added makeancil,
#LL                    makeancilex and ancilnamel.  (Karen Rogers)
#LL    3.4    15/11/94 Changed CRAY to METOCRAY. Added CRAYPVP CRAYMPP
#LL                    Removed references to old archive scripts. (KMR)
#LL    3.4    08/12/94 Altered machines some scripts built on (K Rogers)
#LL    4.0    23/10/95 Removed hedit,hprint and substartrun scripts.
#LL                    (Myles Turp).
#LL    4.3    27/02/97 Change GENERIC to CRAYMPP
#LL                    Remove unpackmodel from build.(N.Farnon)
#LL    4.2    14/10/96 Changes for T3E                (L Wiles)
#LL    4.3    15/05/97 Added utils directory for small execs (L Wiles)
#LL    4.5    14/07/98 Added functions directory for script functions.
#LL                    Added decks containing functions.
#LL                    Added missing utils for workstations.
#LL                    (A Van der Wal)
#LL    4.5    25/09/98 Add test to mkdir directories if not there.
#LL                    Deletion/deletion of various ancil scripts.
#LL
#LL  Programming standard: UMDP 3, version 7
#LL
#LL  Project task:
#LL
#LL  Logical components covered:
#LL
#LL  External documentation:
#LL
#L   Interface and arguments:  None
#L
#L   -------------------------------------------------------------------
#L
#L   Called by:
#L   Calls    : None
#L
#L   Imports:
#L     SETOPT        -  options for the "set" command
#L     VN            -  version number
#L     TMPDIR        -  temporary directory name
#L     UMDIR         -  Unified Model directory name
#L     UMMACHINE     -  target computer platform type (eg CRAY or HP)
#L     SCRMODS       -  mods for the scripts
#L
#L   Exports:
#L
#L   Local variables:
#L     UMSL          -  the nupdate format library of scripts
#L     RUNTIME       -  directory for runtime scripts to reside in
#L     INSTALL       -  directory for installation scripts to reside in
#L     UTILS            -  directory for free-standing small execs
#L     XREF          -  cross-reference file for script info
#L     FILENAME      -  name of the script to create
#L     DECKNAME      -  name of deck holding FILENAME
#L     DEST          -  destination (RUNTIME or INSTALL) directory
#L     SUPPORTED     -  list of platforms that FILENAME is required on
#L     DUMMY         -  separator between items on line in XREF
#L     NAME          -  each platform in SUPPORTED
#L     MATCH         -  true: file required on this platform
#L                      -  false: file not required on this platform
#L     LOCATION      -  directory and filename for the output of nupdate
#L     ERRFLAG       -  flag indicating if error has occured
#L
#L End of header -------------------------------------------------------
#L Step 0 - Set up environment variables
#L
SETOPT="$SETOPT"a
set -$SETOPT

# Include system-wide variables declared in setglobalvars.
VN=4.5
. $UMDIR/vn$VN/scripts/setglobalvars

RUNTIME=$UMDIR/vn$VN/scripts
if test ! -d $RUNTIME
then
  echo -e "Creating directory $RUNTIME"
  mkdir -p $RUNTIME
fi

UTILS=$UMDIR/vn$VN/utils
if test ! -d $UTILS
then
  echo -e "Creating directory $UTILS"
  mkdir -p $UTILS
fi

INSTALL=$UMDIR/vn$VN/scripts/Install
if test ! -d $INSTALL
then
  echo -e "Creating directory $INSTALL"
  mkdir -p $INSTALL
fi

SOURCE=$UMDIR/vn$VN/source
if test ! -d $SOURCE
then
  echo -e "Creating directory $SOURCE"
  mkdir -p $SOURCE
fi

EXEC=$UMDIR/vn$VN/exec
if test ! -d $EXEC
then
  echo -e "Creating directory $EXEC"
  mkdir -p $EXEC
fi

FUNCTIONS=$UMDIR/vn$VN/scripts/functions
if test ! -d $FUNCTIONS
then
  echo -e "Creating directory $FUNCTIONS"
  mkdir -p $FUNCTIONS
fi

UMSL=$UMDIR/vn$VN/source/umsl
XREF=$TMPDIR/scrxref

echo -e You are using version $VN of the Unified Model

#L ---------------------------------------------------------------------
#L Step 1 - Create the script cross-reference file
#L
cat > $XREF <<\EOF
addcompileopts    :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
addcompileopts    :: f :: LINUX OTHER
allmods           :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
allmods           :: r :: LINUX OTHER
allcompfiles      :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
allcompfiles      :: r :: LINUX OTHER
ancil_mask        :: r :: METOCRAY
ancil_orog        :: r :: METOCRAY
ancil_ozone       :: r :: METOCRAY
ancil_slt         :: r :: METOCRAY
ancil_smow        :: r :: METOCRAY
ancil_sstice      :: r :: METOCRAY
ancil_top         :: r :: METOCRAY
ancil_vegsoil     :: r :: METOCRAY
archfail          :: r :: METOCRAY
autopp_tidyup     :: r :: METOCRAY
bcreconf          :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
bcreconf          :: u :: LINUX OTHER
camelot           :: r :: METOCRAY
camjobinfo        :: r :: METOCRAY
cdecks            :: s :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
cdecks            :: s :: LINUX OTHER
checkhdefs        :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
checkhdefs        :: f :: LINUX OTHER
comp_parse        :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
comp_parse        :: r :: LINUX OTHER
comp_specific     :: s :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
comp_specific     :: s :: LINUX OTHER
configure_all_sects :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
configure_all_sects :: i :: LINUX OTHER
configure_execs   :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
configure_execs   :: i :: LINUX OTHER
convpp            :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
convpp            :: u :: LINUX OTHER
copy2dest         :: r :: METOCRAY
cray2hds          :: r :: METOCRAY
createcomb        :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
createcomb        :: f :: LINUX OTHER
cumf              :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
cumf              :: u :: LINUX OTHER
exec_xref_base    :: s :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
exec_xref_base    :: s :: LINUX OTHER
expandpath        :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
expandpath        :: f :: LINUX OTHER
fieldop           :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fieldop           :: u :: LINUX OTHER
findstr           :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
findstr           :: f :: LINUX OTHER
flower            :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
flower            :: f :: LINUX OTHER
fnlistopt         :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fnlistopt         :: f :: LINUX OTHER
fnmycut           :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fnmycut           :: f :: LINUX OTHER
fnmydiff          :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fnmydiff          :: f :: LINUX OTHER
fnnewcom          :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fnnewcom          :: f :: LINUX OTHER
fnusage           :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fnusage           :: f :: LINUX OTHER
fupper            :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
fupper            :: f :: LINUX OTHER
gen_sed_string    :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
gen_sed_string    :: f :: LINUX OTHER
getarchdate       :: r :: METOCRAY
getfile           :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
getfile           :: r :: LINUX OTHER
hdstransfer       :: r :: METOCRAY
ieee              :: u :: METOCRAY CRAYPVP CRAYMPP
initxport         :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
initxport         :: f :: LINUX OTHER
load_parse        :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
load_parse        :: r :: LINUX OTHER
lower             :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
lower             :: f :: LINUX OTHER
makebc            :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makebc            :: u :: LINUX OTHER
makefile_in       :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefile_in       :: i :: LINUX OTHER
makefile_bot_in   :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefile_bot_in   :: i :: LINUX OTHER
makefile_exec_in  :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefile_exec_in  :: i :: LINUX OTHER
makefile_execmid_in :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefile_execmid_in :: i :: LINUX OTHER
makefile_mid_in   :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefile_mid_in   :: i :: LINUX OTHER
makefile_top_in   :: i :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefile_top_in   :: i :: LINUX OTHER
makefileu_comp_in :: s :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefileu_comp_in :: s :: LINUX OTHER
makefileu_link_in :: s :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
makefileu_link_in :: s :: LINUX OTHER
max               :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
max               :: f :: LINUX OTHER
mergecomb         :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
mergecomb         :: f :: LINUX OTHER
mergeum           :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
mergeum           :: u :: LINUX OTHER
mkcompvars        :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
mkcompvars        :: r :: LINUX OTHER
mkdirhier         :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
mkdirhier         :: f :: LINUX OTHER
mkobjxref         :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
mkobjxref         :: r :: LINUX OTHER
mkexecxref        :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
mkexecxref        :: r :: LINUX OTHER
newpphist         :: r :: METOCRAY
nocombinations    :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
nocombinations    :: f :: LINUX OTHER
obj_xref_base     :: s :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
obj_xref_base     :: s :: LINUX OTHER
ppcray2hds        :: r :: METOCRAY
pptoanc           :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
pptoanc           :: u :: LINUX OTHER
pumf              :: u :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
pumf              :: u :: LINUX OTHER
qscasedisp        :: r :: METOCRAY
qsoasis           :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsoasis           :: r :: LINUX OTHER
qscombine         :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qscombine         :: r :: LINUX OTHER
qsfinal           :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsfinal           :: r :: LINUX OTHER
qshistprint       :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qshistprint       :: r :: LINUX OTHER
qshistreset       :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qshistreset       :: r :: LINUX OTHER
qslistobj         :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qslistobj         :: r :: LINUX OTHER
qsmain            :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsmain            :: r :: LINUX OTHER
qsmaster          :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsmaster          :: r :: LINUX OTHER
qsmncompile       :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsmncompile       :: r :: LINUX OTHER
qsconf            :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsconf            :: r :: LINUX OTHER
qspickup          :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qspickup          :: r :: LINUX OTHER
qsprelim          :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsprelim          :: r :: LINUX OTHER
qsresubmit        :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsresubmit        :: r :: LINUX OTHER
qsserver          :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qsserver          :: r :: LINUX OTHER
qssetup           :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
qssetup           :: r :: LINUX OTHER
sortarray         :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
sortarray         :: f :: LINUX OTHER
restartinfo       :: r :: METOCRAY
stoprun           :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
stoprun           :: r :: LINUX OTHER
startrun          :: r :: METOCRAY
submitchk         :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
submitchk         :: r :: LINUX OTHER
updscripts        :: r :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
updscripts        :: r :: LINUX OTHER
upper             :: f :: METOCRAY CRAYPVP CRAYMPP HP DECALPHA SGI ++
upper             :: f :: LINUX OTHER
EOF

#L ---------------------------------------------------------------------
#L Step 2 - Create the script to process each line of the
#L          cross-reference file
#L
cat > $TMPDIR/readloop <<\EOF
set -$SETOPT
export SETOPT
cd $TMPDIR
ERRFLAG=0
PREVFILE=""
MATCH=false

# read first line of XREF file
read FILENAME DUMMY DEST DUMMY SUPPORTED
RC=$?
until test $RC -ne 0
do

  if test ! \( "$FILENAME" = "$PREVFILE" -a "$MATCH" = "true" \)
  then
  # is the script required on the secified platform
  MATCH=false
  MESSAGE=true
  for NAME in $SUPPORTED
  do
    if test "$NAME" = "$UMMACHINE"
    then
      MATCH=true
    fi
    if test "$NAME" = "++" -a "$MATCH" = "false"
    then
      MESSAGE=false
    fi
  done

  if test "$MESSAGE" = "true"
  then
  # print message to screen
  echo -e
  echo -e "==============================================================="
  echo -e
  echo -e "Job to make script: $FILENAME"
  fi

  # if the scripts is required on this platform
  if test "$MATCH" = "true"
  then

    # extract script from nupdate library
    DECKNAME=$FILENAME

    echo -e "Extracting Deck: $DECKNAME with DEFS: $SCRDEFS"
    if test "$SCRMODS" != ""
    then
      if test -s $SCRMODS
      then
        nupdate -d "$SCRDEFS" -p "$UMSL" -c "$FILENAME" -q "$DECKNAME" \
                -i "$SCRMODS"
      else
        nupdate -d "$SCRDEFS" -p "$UMSL" -c "$FILENAME" -q "$DECKNAME"
      fi
    else
      nupdate -d "$SCRDEFS" -p "$UMSL" -c "$FILENAME" -q "$DECKNAME"
    fi
    if test $? -ne 0
    then
      echo -e
      echo -e ***ERROR:  Problem extracting script $FILENAME from $UMSL
      ERRFLAG=1
    else

      # move file made by nupdate to appropriate directory
      if test "$DEST" = "i"
      then
        LOCATION="$INSTALL/$FILENAME"
      elif test "$DEST" = "u"
      then
        LOCATION="$UTILS/$FILENAME"
      elif test "$DEST" = "f"
      then
        LOCATION="$FUNCTIONS/$FILENAME"
      elif test "$DEST" = "s"
      then
        LOCATION="$SOURCE/$FILENAME"
        if test $FILENAME = 'cdecks'
        then
          # remove the extra #'s in files that are already decks

          $UM_SED "s/^#\*/*/" $FILENAME.f > temp1
           #change leading "#*" to "*"
          $UM_SED "s/^#+/+/" temp1 > temp2
           #change leading "#+" to "+"
          mv temp2 $FILENAME.f
        fi
      else
        LOCATION="$RUNTIME/$FILENAME"
      fi
      # remove trailing spaces left by nupdate
      $UM_SED "s/ *$//" "$FILENAME".f > $LOCATION
      if test $? -eq 0
      then
        echo -e ***INFO: File $LOCATION sucessfully created
      else
        echo -e ***ERROR: File $LOCATION not created
        ERRFLAG=1
      fi
      rm "$FILENAME".f
    fi

  else
    if test "$MESSAGE" = "true"
    then
      echo -e ***NOTE: Script $FILENAME is not required on this platform
    fi
  fi

  fi
  PREVFILE=$FILENAME
  # read next line of XREF file
  read FILENAME DUMMY DEST DUMMY SUPPORTED
  RC=$?

done
echo -e
echo -e "==============================================================="
banner script making complete
if test $ERRFLAG -ne 0
then
  echo -e ***Errors have been encountered
fi
echo -e "==============================================================="
EOF

#L ---------------------------------------------------------------------
#L Step 3 - Execute the readloop to produce the scripts required
#L
chmod u+x $TMPDIR/readloop
cat $XREF|$TMPDIR/readloop

rm $XREF $TMPDIR/readloop
chmod 775 $SOURCE/* $RUNTIME/* $INSTALL/* $UTILS/* $FUNCTIONS/*
