#!/bin/ksh                                                                 fnlistopt.2     
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.345   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.346   
#                                                                      #   COPYRIGHT.347   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.348   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.349   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.350   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.351   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.352   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.353   
#LL  Function:  fnlistopt                                                  fnlistopt.17    
#LL---------------------------------------------------------------------   fnlistopt.18    
#LL                                                                        fnlistopt.19    
#LL  Purpose: ?????????????????????????????                                fnlistopt.20    
#LL                                                                        fnlistopt.21    
#LL  Inputs: file = commp_vars file which contains                         fnlistopt.22    
#LL                 (i)   default fortran compiler options                 fnlistopt.23    
#LL                 (ii)  default loader compiler options                  fnlistopt.24    
#LL                 (iii) default C compiler options                       fnlistopt.25    
#LL                 (iv)  deck specific compiler options                   fnlistopt.26    
#LL          deck = can be either a "DECKNAME" or ""                       fnlistopt.27    
#LL          type = the type of the information which is to be parsed      fnlistopt.28    
#LL                 from the file;                                         fnlistopt.29    
#LL                 (i)   COMP, fortran compiler                           fnlistopt.30    
#LL                 (ii)  CCOM, C compiler                                 fnlistopt.31    
#LL                 (iii) LOAD, loader compiler.                           fnlistopt.32    
#LL                                                                        fnlistopt.33    
#LL  Current Owner: Anette Van der Wal                                     fnlistopt.34    
#LL  Reviewer: ????               Date of review: ????                     fnlistopt.35    
#LL                                                                        fnlistopt.36    
#LL  Tested under OS version: UNICOS <UNICOS version number>               fnlistopt.37    
#LL  UM version no: 4.5       Date of test:  <date of test>                fnlistopt.38    
#LL                                                                        fnlistopt.39    
#LL  History:                                                              fnlistopt.40    
#LL   Model                                                                fnlistopt.41    
#LL  version  Date        Modification history:                            fnlistopt.42    
#LL   4.5     14/07/98    Original version (A Van der Wal).                fnlistopt.43    
#LL                                                                        fnlistopt.44    
#LL  Programming standard: UMDP 3, version <UMDP 3 version number>         fnlistopt.45    
#LL                                                                        fnlistopt.46    
#LL  External documentation:                                               fnlistopt.47    
#LL    <UMDP number & name of external documentation>                      fnlistopt.48    
#LL                                                                        fnlistopt.49    
#L   Interface and arguments: none                                         fnlistopt.50    
#L                                                                         fnlistopt.51    
#L   -------------------------------------------------------------------   fnlistopt.52    
#L                                                                         fnlistopt.53    
#L   Called by: qsmncompile                                                fnlistopt.54    
#L                                                                         fnlistopt.55    
#L   Calls    : none                                                       fnlistopt.56    
#L                                                                         fnlistopt.57    
#L   Imports  : none                                                       fnlistopt.58    
#L                                                                         fnlistopt.59    
#L   Exports  : none                                                       fnlistopt.60    
#L                                                                         fnlistopt.61    
#L   Local variables: none                                                 fnlistopt.62    
#L                                                                         fnlistopt.63    
#L   End of header -----------------------------------------------------   fnlistopt.64    
                                                                           fnlistopt.65    
fnlistopt()                                                                fnlistopt.66    
{                                                                          fnlistopt.67    
  unset error_flag xcomopts                                                fnlistopt.68    
  # copy input args into sensibly named variables                          fnlistopt.69    
  file=$1 # ucompvars file                                                 fnlistopt.70    
  deck=$2 # Any valid deck name                                            fnlistopt.71    
  type=$3 # FCOM|CCOM|LCOM                                                 PXUNPACK.8     
                                                                           fnlistopt.73    
  case $type in                                                            fnlistopt.74    
    'FCOM') istr=@fort ;;                                                  fnlistopt.75    
    'LCOM') istr=@load ;;                                                  PXUNPACK.9     
    'CCOM') istr=@ccom ;;                                                  fnlistopt.77    
         *)                                                                fnlistopt.78    
echo "ERROR: unknown arg \"$type\". Try FCOM, LCOM or CCOM." 1>&2          PXUNPACK.10    
            error_flag=true ;;                                             fnlistopt.80    
  esac                                                                     fnlistopt.81    
                                                                           fnlistopt.82    
  if [ "$error_flag" = true ]                                              fnlistopt.83    
  then                                                                     fnlistopt.84    
    :                                                                      fnlistopt.85    
  else                                                                     fnlistopt.86    
                                                                           fnlistopt.87    
  # Obtain default compiler and options i.e. i(nterim)commmand             fnlistopt.88    
  # and i(nterim)comopts values. These only need to be set once, on        fnlistopt.89    
  # first call of shell function, hence the if test.                       fnlistopt.90    
                                                                           fnlistopt.91    
    if [ -z "$icommand" ]                                                  fnlistopt.92    
    then                                                                   fnlistopt.93    
      icommand=`$UM_GREP "@define.*$type\_CMD"  $file| cut -d= -f2-`       PXUTILTY.106   
      icomopts=`$UM_GREP "$istr.*$type\_OPTS" $file| cut -d= -f2-`         PXUTILTY.107   
    fi                                                                     fnlistopt.96    
                                                                           fnlistopt.97    
#EXAMPLE 1---------------------------------------------------              fnlistopt.98    
# parsefile $UCOMPVAR "" FCOM                                              fnlistopt.99    
# returns the global default for the fortran compiler.  As the             fnlistopt.100   
# deck argument is empty not looking for deck specific info.               fnlistopt.101   
#                                                                          fnlistopt.102   
# $UM_GREP FCOM_CMD $UCOMPVARS -> FCOM_CMD=f90 | cut -d= -f2-              PXUTILTY.108   
# -> f90                                                                   fnlistopt.104   
# $UM_GREP FCOM_OPTS $UCOMPVARS -> FCOM_OPTS= | cut -d= -f2-               PXUTILTY.109   
# -> ""                                                                    fnlistopt.106   
# icommand=f90 icomopts=""                                                 fnlistopt.107   
#------------------------------------------------------------              fnlistopt.108   
                                                                           fnlistopt.109   
    # If a deck name was input check if it exists in the file              fnlistopt.110   
    if [ ! -z "$deck" ]                                                    fnlistopt.111   
    then                                                                   fnlistopt.112   
      test=`$UM_GREP -E -i "^\+$deck|$deck" $file`                         PXUTILTY.110   
    fi                                                                     fnlistopt.114   
                                                                           fnlistopt.115   
    # If no deck has been given as an argument to the func. do not         fnlistopt.116   
    # have to look for deck specific command options (in loop below).      fnlistopt.117   
    # Similarly, where a deck name has been input but is not given as      fnlistopt.118   
    # an entry in the user compile vars file, this is uneccessary.         fnlistopt.119   
                                                                           fnlistopt.120   
    if [ -z "$deck" ] || [ -z "$test" ]                                    fnlistopt.121   
    then                                                                   fnlistopt.122   
      command=$icommand                                                    fnlistopt.123   
      comopts=$icomopts                                                    fnlistopt.124   
      xcomopts=`$UM_GREP -E -v "$type\_CMD|$type\_OPTS" $file|\            PXUTILTY.111   
        $UM_GREP -E "^$istr.*$type\_|^\+$istr.*$type\_" | cut -d= -f2-`    PXUTILTY.112   
                                                                           fnlistopt.127   
#EXAMPLE 1 CONT'D---------------------------------------------             fnlistopt.128   
# command=f90                                                              fnlistopt.129   
# comopts=""                                                               fnlistopt.130   
# xcomopts are additional compiler options for the command type            fnlistopt.131   
# $UM_GREP -E -v "FCOM_CMD|FCOM_OPTS" $file -> ignores lines in the        PXUTILTY.113   
# file which contain these elements | $UM_GREP -E "^@fort.*$FCOM" ->       PXUTILTY.114   
#  @fort  FCOM_DISABLE=                                                    fnlistopt.134   
#  @fort  FCOM_ENABLE=                                                     fnlistopt.135   
#  @fort  FCOM_OPTIM=-Oaggress -Oscalar3                                   fnlistopt.136   
#  @fort  FCOM_OPTS=                                                       fnlistopt.137   
# | cut -d= -f2- -> -Oaggress -Oscalar3                                    fnlistopt.138   
# xcomopts=-Oaggress -Oscalar3                                             fnlistopt.139   
#------------------------------------------------------------              fnlistopt.140   
                                                                           fnlistopt.141   
    else                                                                   fnlistopt.142   
      # Set deck (local) command overides.                                 fnlistopt.143   
      command=`$UM_GREP -i "$deck $type\_CMD" $file|cut -d= -f2-`          PXUTILTY.115   
      comopts=`$UM_GREP -i "$deck $type\_OPTS" $file|cut -d= -f2-`         PXUTILTY.116   
                                                                           fnlistopt.146   
      # If there are no deck command overides, set to defaults.            fnlistopt.147   
      if [ -z "$command" ];then command=$icommand;fi                       fnlistopt.148   
      if [ -z "$comopts" ];then comopts=$icomopts;fi                       fnlistopt.149   
                                                                           fnlistopt.150   
#EXAMPLE 2---------------------------------------------------              fnlistopt.151   
# parsefile $UCOMPVARS "ADJCTL1A" FCOM                                     fnlistopt.152   
# From the if statements above established that there are no deck          fnlistopt.153   
# command and opts overrides so command=f90 and comopts="" Now need to     fnlistopt.154   
# look for possible options (loopopts) for this command type.              fnlistopt.155   
#                                                                          fnlistopt.156   
# loopopts=FCOM_DISABLE                                                    fnlistopt.157   
#	   FCOM_ENABLE                                                           fnlistopt.158   
#          FCOM_OPTIM                                                      fnlistopt.159   
#          FCOM_OPTS                                                       fnlistopt.160   
#------------------------------------------------------------              fnlistopt.161   
                                                                           fnlistopt.162   
      loopopts=`$UM_GREP -E -v "$type\_CMD|$type\_OPTS" $file|\            PXUTILTY.117   
                    $UM_GREP -E "$istr.*$type\_" |\                        PXUTILTY.118   
                    cut -d= -f1 |\                                         fnlistopt.165   
                    $UM_AWK '{print $2}'|sort -u`                          PXUTILTY.119   
                                                                           fnlistopt.167   
      # loop over the options for the command type to determine            fnlistopt.168   
      # if any overrides for it, have been set for the given deck          fnlistopt.169   
                                                                           fnlistopt.170   
      for opt in $loopopts                                                 fnlistopt.171   
      do                                                                   fnlistopt.172   
        unset option     # unset this for every iteration                  fnlistopt.173   
        unset optionfull # ...and this too.                                fnlistopt.174   
       optionfull=`$UM_GREP -E -i "^$deck *$opt=|^\+$deck *$opt=" $file`   PXUTILTY.120   
        option=`echo $optionfull | cut -d= -f2-`                           fnlistopt.176   
        if [ -z "$optionfull" ]                                            fnlistopt.177   
        then # there are no deck specific overrides for the option         fnlistopt.178   
          option=\                                                         fnlistopt.179   
`$UM_GREP -E "^$istr.*$opt=|^\+$istr.*$opt=" $file|cut -d= -f2-`           PXUTILTY.121   
        fi                                                                 fnlistopt.181   
        xcomopts="$xcomopts $option" # add to accumulated options          fnlistopt.182   
      done                                                                 fnlistopt.183   
    fi                                                                     fnlistopt.184   
    echo $command:::$comopts $xcomopts # return command line/opts          fnlistopt.185   
  fi                                                                       fnlistopt.186   
}                                                                          fnlistopt.187   
