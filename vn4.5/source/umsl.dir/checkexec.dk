*IF DEF,HP                                                                 checkexec.2     
#!/bin/ksh                                                                 checkexec.3     
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.182   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.183   
#                                                                      #   COPYRIGHT.184   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.185   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.186   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.187   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.188   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.189   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.190   
#                                                                          checkexec.17    
#  Script: checkexec                                                       checkexec.18    
#                                                                          checkexec.19    
#  Description: Identifies any disparities between DEFS set in the         checkexec.20    
#               exec_xref file and the DEFS that may be set via DECKS      checkexec.21    
#               and COMDECKS                                               checkexec.22    
#                                                                          checkexec.23    
#  Interface and arguments: checkexec <exec_xref>                          checkexec.24    
#                                                                          checkexec.25    
#  Author: Shona Robertson                                                 checkexec.26    
#  Owner:                                                                  GSHBU404.47    
#                                                                          checkexec.28    
#  History:                                                                checkexec.29    
#  4.3	18.12.96	Original Code.  (S Robertson)                              GSHBU404.48    
#  4.4  22.10.97	Removed unecessary pipes.  (S Robertson)                  GSHBU404.49    
#                                                                          checkexec.31    
#  -option1: d                                                             checkexec.32    
#  -option2: s                                                             checkexec.33    
#  argument1: exec_xref file                                               checkexec.34    
#                                                                          checkexec.35    
#  Script called by:                                                       checkexec.36    
#  Script calls: getdefsu|getdefsnu, processcdk, getcdks & checksetup      checkexec.37    
#                                                                          checkexec.38    
#  Variables that must be imported:                                        checkexec.39    
#  Variables that can be imported:                                         checkexec.40    
#	BUILDHOST 	e.g. T3E_f90                                                  checkexec.41    
#  Variables that are exported:                                            checkexec.42    
#	GETDEFS		holds the version of getdefs script to be used                  checkexec.43    
#  Local variables:                                                        checkexec.44    
# 	DEFDIFF		                                                               checkexec.45    
#	SAMESECT                                                                 checkexec.46    
#	DPATH		                                                                  checkexec.47    
#------------------------------------------------                          checkexec.48    
USAGE="USAGE: getopts [-d] [-s]"                                           checkexec.49    
                                                                           checkexec.50    
while getopts sd arguments                                                 checkexec.51    
do                                                                         checkexec.52    
   case $arguments in                                                      checkexec.53    
    d) 	DEFDIFF=on;;                                                       checkexec.54    
    s) 	SAMESECT=on;;                                                      checkexec.55    
   \?) 	print "$OPTARG is not a vaild option"                              checkexec.56    
	print "$USAGE"                                                            checkexec.57    
	exit2;;                                                                   checkexec.58    
   esac                                                                    checkexec.59    
done                                                                       checkexec.60    
                                                                           checkexec.61    
echo $OPTIND                                                               checkexec.62    
if (( $OPTIND > 1 ))                                                       checkexec.63    
then                                                                       checkexec.64    
  (( numswitches = OPTIND - 1))                                            checkexec.65    
  shift numswitches                                                        checkexec.66    
fi                                                                         checkexec.67    
  if test $# -eq 1                                                         checkexec.68    
  then                                                                     checkexec.69    
    EXECXREF=$1                                                            GSHBU404.50    
  else                                                                     checkexec.71    
    NAME=$0                                                                checkexec.72    
    echo "$NAME: Error "                                                   checkexec.73    
    echo "USAGE: $NAME [-d] [-s] <exec_xref>"                              checkexec.74    
    exit 1                                                                 checkexec.75    
  fi                                                                       checkexec.76    
                                                                           checkexec.77    
# set the path for DECKS comprising a given version                        GSHBU404.51    
VN=4.5                                                                     GKR1U405.10    
DPATH=${DPATH:-$UMDIR/vn$VN/source/umpl}                                   GSHBU404.53    
                                                                           checkexec.80    
BUILDHOST=${BUILDHOST:-T3E_f90}                                            checkexec.81    
                                                                           checkexec.82    
# check for the existance of temporary files and remove them               checkexec.83    
# prior to execution                                                       checkexec.84    
checksetup                                                                 checkexec.85    
                                                                           checkexec.86    
if (($? == 1))                                                             checkexec.87    
then                                                                       checkexec.88    
  exit 1                                                                   checkexec.89    
else                                                                       checkexec.90    
# process the options to the script                                        checkexec.91    
                                                                           checkexec.92    
DEFDIFF=${DEFDIFF:-off}                                                    checkexec.93    
SAMESECT=${SAMESECT:-off}                                                  checkexec.94    
                                                                           checkexec.95    
case $DEFDIFF in                                                           checkexec.96    
   on)  # getdefsn(on)u(nique) differentiate between -DEF and DEF          checkexec.97    
	GETDEFS=getdefsnu;;                                                       checkexec.98    
  off)  # getdefsu(nique)                                                  checkexec.99    
	GETDEFS=getdefsu;;                                                        checkexec.100   
esac                                                                       checkexec.101   
                                                                           checkexec.102   
# export the pathname of the version of getdefs for use in processcdk      checkexec.103   
export GETDEFS                                                             checkexec.104   
echo $GETDEFS                                                              checkexec.105   
                                                                           checkexec.106   
for section in `$UM_GREP -E 'TITLE' $EXECXREF | $UM_GREP -E -v '^#' |\     PXUTILTY.75    
		$UM_AWK '{print $1}' | sort -u `                                         PXUTILTY.76    
do                                                                         checkexec.109   
   echo SECTION $section                                                   checkexec.110   
                                                                           checkexec.111   
   # section tidyup                                                        checkexec.112   
   rm -f cdkdefs                                                           checkexec.113   
   touch cdkdefs                                                           checkexec.114   
   rm -f tmp_cdks                                                          checkexec.115   
   rm -f checked                                                           checkexec.116   
   touch checked                                                           checkexec.117   
   rm -f tmp_deckdefs                                                      checkexec.118   
                                                                           checkexec.119   
                                                                           checkexec.120   
   # a list of DEFs in a section is redirected to                          checkexec.121   
   # the file 'sectdefs'                                                   checkexec.122   
   $UM_GREP -E "$section" $EXECXREF |\                                     PXUTILTY.77    
     $UM_GREP -E "DEFS .*ALL|DEFS .*$BUILDHOST" |\                         PXUTILTY.78    
     $UM_AWK '{print $4}' | tr -s "," "\012" | sort -u > sectdefs          PXUTILTY.79    
                                                                           checkexec.126   
   # list DECKS in a given section of exec_xref file                       checkexec.127   
   # note: in an exec_xref file DECKS are denoted by                       checkexec.128   
   # 	   the pattern section_name DECKS ALL	                               checkexec.129   
	                                                                          checkexec.130   
   for deck in `$UM_GREP -E "$section" $EXECXREF |\                        PXUTILTY.80    
	$UM_GREP -E -e 'DECKS ALL' -e 'DECKC ALL' |\                              PXUTILTY.81    
        $UM_AWK '{print$4}' |\                                             PXUTILTY.82    
	tr -s "," "\012"`                                                         checkexec.133   
   do                                                                      checkexec.134   
     getcdks $DPATH/$deck.* >> tmp_cdks                                    checkexec.135   
     $GETDEFS $DPATH/$deck.* >> tmp_deckdefs                               GSHBU404.59    
                                                                           checkexec.137   
   done                                                                    checkexec.138   
                                                                           checkexec.139   
   sort -u tmp_cdks > cdks                                                 GSHBU404.60    
                                                                           checkexec.141   
   # process COMDECKS referenced by the DECKS for the given section        checkexec.142   
   while read element                                                      checkexec.143   
   do                                                                      checkexec.144   
     processcdk $element                                                   checkexec.145   
   done < cdks                                                             checkexec.146   
                                                                           checkexec.147   
   # includes DEFS set via COMDECKS with those set by DECKS                checkexec.148   
   sort -u cdkdefs >> tmp_deckdefs                                         GSHBU404.61    
                                                                           checkexec.150   
   # the file tmp_deckdefs has blank lines that must be                    checkexec.151   
   #   removed to allow sort -u.  the regular expression                   GSHBU404.62    
   #   '^ *$' means any line with zero or more spaces anchored             checkexec.153   
   #   at the start of a line by ^                                         checkexec.154   
                                                                           checkexec.155   
   $UM_GREP -E -v '^ *$' tmp_deckdefs | sort -u > deckdefs                 PXUTILTY.83    
	                                                                          checkexec.157   
   # compare DEFs in decks with DEFs in section                            checkexec.158   
	                                                                          checkexec.159   
   echo >> $$checkexec_out		                                               checkexec.160   
   echo -- SECTION IS $section -- >> $$checkexec_out                       checkexec.161   
   echo deckdefs sectdefs common >> $$checkexec_out                        checkexec.162   
   comm deckdefs sectdefs >> $$checkexec_out                               checkexec.163   
                                                                           checkexec.164   
done                                                                       checkexec.165   
                                                                           checkexec.166   
# clean up after execution                                                 checkexec.167   
rm -f tmp_deckdefs                                                         checkexec.168   
rm -f tmp_sectdefs                                                         checkexec.169   
rm -f sectdefs                                                             checkexec.170   
rm -f deckdefs                                                             checkexec.171   
rm -f checked                                                              checkexec.172   
rm -f cdkdefs                                                              checkexec.173   
rm -f cdks                                                                 checkexec.174   
rm -f tmp_cdks                                                             checkexec.175   
                                                                           checkexec.176   
fi                                                                         checkexec.177   
*ENDIF                                                                     checkexec.178   
