#!/bin/ksh                                                                 qsconf.2     
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.725   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.726   
#                                                                      #   COPYRIGHT.727   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.728   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.729   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.730   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.731   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.732   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.733   
#                                                                          GSH6U404.496   
# Script: qsconf                                                           GSH6U404.497   
#                                                                          GSH6U404.498   
# Description: Unified Model global configuration script for versions      GSH6U404.499   
#              of the UM at or later than 4.2.                             GSH6U404.500   
#                                                                          GSH6U404.501   
# Interface and arguments:                                                 GSH6U404.502   
#                                                                          GSH6U404.503   
# Author: Andy Brady                                                       GSH6U404.504   
# Owner:                                                                   GSH6U404.505   
#                                                                          GSH6U404.506   
# History:                                                                 GSH6U404.507   
# Vn   	Date      Change                                                   GSH6U404.508   
# 4.2 	?.?.96	  Original Code.  (A Brady)   	                              GSH6U404.509   
# 4.4 	22.05.97  Some comments added.  (S Robertson)                       GSH6U404.510   
# 4.4   19.08.97  Ammended qsub time limits in line with changes to        GSH6U404.511   
#                 queue limits.  (S Robertson)                             GSH6U404.512   
# 4.4.  22.08.97  Added code to prevent extra decks extracted due to       GSH6U404.513   
#                 modification of a COMDECK being included in the          GSH6U404.514   
#                 build directory of a small executable. (S Robertson)	    GSH6U404.515   
# 4.4   15.12.97  Remove some unawanted messages.                          GSH6U404.516   
#                 Correct problems with new obj_xref and exec_xref         GSH6U404.517   
#                 machine,section and compile tags. (A. Brady)             GSH6U404.518   
# 4.5   07/09/98  Added include file to Makefile for compiler              PXCLLMOD.119   
#                 variables etc.                     P.Burton              PXCLLMOD.120   
# 4.5   12.11.98  Replaced NUPLIB with PROGLIB to be consistent with       GRO2U405.1     
#                 toplevel SCRIPT. (R Hatcher)                             GRO2U405.2     
# 4.5   14.07.98  Moved functions to a separate file and autoloaded        GAV3U405.35    
#                 them. (A Van der Wal)                                    GAV3U405.36    
# Script called by: qsprelim | qsmncompile                                 GSH6U404.519   
# Script calls: comp_parse                                                 GSH6U404.520   
#                                                                          GSH6U404.521   
# Variables that can be imported:                                          GSH6U404.522   
#       BUILDHOST identifies the system the UM is being built upon         GSH6U404.523   
#                 e.g. CrPVPf77 machine and compiler                       GSH6U404.524   
#       COMPPARSE script which parses compiler options for different       GSH6U404.525   
#                 systems                                                  GSH6U404.526   
#       COMPVARS  compiler information and compiler options (fortran,      GSH6U404.527   
#                 loader, C compiler and deck specific options)            GSH6U404.528   
#       EXECXREF  the exec_xref file to be used by qsconf (information     GSH6U404.529   
#                 relating to the small executables)                       GSH6U404.530   
#       LOADPARSE exist to allow additional fucntionality to be added      GSH6U404.531   
#       MAKEFILE  the resulting Makefile                                   GSH6U404.532   
#       MAKEFILEEXECIN makefile template for the small executables         GSH6U404.533   
#       MAKEFILEEXECINMID mid level makefile template for the small        GSH6U404.534   
#                         executables                                      GSH6U404.535   
#       MAKEFILEIN makefile template for UM sections                       GSH6U404.536   
#       MAKEFILEINBOT low level makefile template                          GSH6U404.537   
#       MAKEFILEINMID mid level makefile template                          GSH6U404.538   
#       MAKEFILEINTOP top level makefile template                          GSH6U404.539   
#       NPROC	  the number of processes to be run in parallel              GSH6U404.540   
#       NUPCOMMD  command to invoke the nupdate utility                    GSH6U404.541   
#       PROGLIB	  the nupdate library                                      GRO2U405.3     
#       OBJXREF	  the obj_xref file to be used by qsconf (information      GSH6U404.543   
#                 relating to the UM sections)                             GSH6U404.544   
#       OUTDIR    directory in which                                       GSH6U404.545   
#       TMPDIR    directory in which temporary files are created           GSH6U404.546   
# 	UMDIR	  pathname for the UM files and directories                       GSH6U404.547   
#       VN 	  current version of the UM                                    GSH6U404.548   
#                                                                          GSH6U404.549   
# Local variables:                                                         GSH6U404.550   
#	BUILDEXEC build directory for small executables                          GSH6U404.551   
#       BUILDTMP  temporary directory into which nupdate extracts decks    GSH6U404.552   
#       INFOLEVEL included to allow for proposed functionality             GSH6U404.553   
#       MAKETMP   file                                                     GSH6U404.554   
#       MYDIR     the directory in which qsconf has been executed          GSH6U404.555   
#       NUPTMP    identifier for fortran mod file used to extract          GSH6U404.556   
#                 fortran decks with nupdate                               GSH6U404.557   
#       NUPTMPC   identifier for C mod file used to extract C decks        GSH6U404.558   
#	OUTEXEC	  destination directory for the small executables                GSH6U404.559   
#	OUTOBJ    the object file directory for the UM sections                  GSH6U404.560   
#	OUTSRC    the source directory for the UM sections                       GSH6U404.561   
#       SEDSCRIPT1 temp file                                               GSH6U404.562   
#       SEDSCRIPT2 temp file                                               GSH6U404.563   
#       TMPFILE1  temp file for output from nupdate source extraction      GSH6U404.564   
#       TMPMAKE1  temp file for fortran makefile directives                GSH6U404.565   
#       TMPMAKE2  temp file for C makefile directives                      GSH6U404.566   
#       TMPXREF  cut down version of obj_xref or exec_xref file for UM     GSH6U404.567   
#                section or small exec being built                         GSH6U404.568   
#       TOP	 top level UM directory path i.e. $UMDIR/vn$VN                 GSH6U404.569   
#       UMVNDIR  top level UM directory path (in this case $TOP) ?         GSH6U404.570   
#                                                                          GSH6U404.571   
#---------------------------------------------                             GSH6U404.572   
# QSUB -r NewBld                                                           qsconf.3     
# QSUB -lT 6000                                                            GLW2U404.51    
# QSUB -lM 14Mw                                                            qsconf.5     
# QSUB -q prime                                                            qsconf.6     
# QSUB -eo                                                                 qsconf.7     
# QSUB -nr                                                                 qsconf.8     
# QSUB -J m                                                                qsconf.9     
# QSUB -ro                                                                 qsconf.10    
                                                                           qsconf.11    
# Number of exec make process to run in parallel                           qsconf.12    
# NOTE: Section makes can only run with NPROC=1                            qsconf.13    
#       Higher level makes should only be run with NPROC=1                 qsconf.14    
#       Both of the above cases are hardwired to 1 in the code.            qsconf.15    
NPROC=${NPROC:-10}                                                         qsconf.16    
                                                                           qsconf.17    
## Default variables                                                       qsconf.18    
UMDIR=${UMDIR:-/u/um1}                                                     qsconf.19    
VN=4.5                                                                     GKR1U405.53    
OUTDIR=${OUTDIR:-$UMDIR/vn$VN}                                             qsconf.21    
                                                                           qsconf.22    
# Output directories/files                                                 qsconf.23    
MAKEFILE=${MAKEFILE:-Makefile}                                             qsconf.24    
                                                                           qsconf.25    
## set environment                                                         qsconf.26    
NUPCOMMD=${NUPCOMMD:-nupdate}                                              qsconf.27    
                                                                           qsconf.28    
## temporary files/directories                                             qsconf.29    
if [ -z "$TMPDIR" ] ; then TMPDIR="/tmp" ; fi                              qsconf.30    
BUILDTMP="$TMPDIR/buildtmp.$$"                                             qsconf.31    
MAKETMP="$TMPDIR/maketmp.$$"                                               qsconf.32    
NUPTMP="$TMPDIR/nupdate.$$"                                                qsconf.33    
NUPTMPC="$TMPDIR/nupdatec.$$"                                              qsconf.34    
TMPXREF="$TMPDIR/tmpxref.$$"                                               qsconf.35    
TMPFILE1="$TMPDIR/tmpfile1.$$"                                             qsconf.36    
TMPMAKE1="$TMPDIR/tmpfile2.$$"                                             qsconf.37    
TMPMAKE2="$TMPDIR/tmpfile3.$$"                                             qsconf.38    
SEDSCRIPT1="$TMPDIR/tmpfile4.$$"                                           qsconf.39    
SEDSCRIPT2="$TMPDIR/tmpfile5.$$"                                           qsconf.40    
MYDIR=`pwd`                                                                qsconf.41    
INFOLEVEL=0                                                                qsconf.42    
                                                                           qsconf.43    
. $UMDIR/vn$VN/scripts/setglobalvars                                       GAV3U405.37    
autoload fupper flower upper lower gen_sed_string fnmycut fnlistopt \      GAV3U405.38    
         fnmydiff fnusage expandpath mkdirhier                             GAV3U405.39    
                                                                           qsconf.292   
cline=$*                                                                   qsconf.293   
                                                                           qsconf.294   
# parse command line options                                               qsconf.295   
for arg in $cline                                                          qsconf.296   
do                                                                         qsconf.297   
  case $arg in                                                             qsconf.298   
       '-quiet1') INFOLEVEL=1 ; shift ;;                                   qsconf.299   
     '-sections') confsects="true" ; shift ;;                              qsconf.300   
        '-execs') confexecs="true" ; shift ;;                              qsconf.301   
        '-cemod') cemod='true' ; cemodfiles=$2 ; shift 2 ;;                qsconf.302   
        '-csmod') csmod='true' ; csmodfiles=$2 ; shift 2 ;;                qsconf.303   
        '-femod') femod='true' ; femodfiles=$2 ; shift 2 ;;                qsconf.304   
        '-fsmod') fsmod='true' ; fsmodfiles=$2 ; shift 2 ;;                qsconf.305   
       '-ignore') ignore_missing='true' ; shift ;;                         qsconf.306   
         '-objx') OBJXREF=$2 ; shift 2 ;;                                  qsconf.307   
         '-xref') echo "Error: -xref is now obsolete. Use -objx."          qsconf.308   
                  exit 1 ;;                                                qsconf.309   
        '-execx') EXECXREF=$2 ; shift 2 ;;                                 qsconf.310   
      '-compvar') COMPVARS=$2 ; shift 2 ;;                                 qsconf.311   
       '-outdir') OUTDIR=$2 ; shift 2 ;;                                   qsconf.312   
        '-umdir') UMDIR=$2 ; shift 2 ;;                                    qsconf.313   
           '-vn') VN=$2 ; shift 2 ;;                                       qsconf.314   
       '-cgopts') CGOPTS=$2 ; shift 2 ;;                                   qsconf.315   
       '-defcom') DEFCOM=$2 ; shift 2 ;;                                   qsconf.316   
    '-h'|'-help') fnusage ; exit ;;                                        qsconf.317   
              -*) echo "Error: bad arg \"$1\". Try -help for more info."   qsconf.318   
                  exit 1 ;;                                                qsconf.319   
  esac                                                                     qsconf.320   
done                                                                       qsconf.321   
                                                                           qsconf.322   
if [ "$INFOLEVEL" -lt 1 ]                                                  qsconf.323   
then                                                                       qsconf.324   
  echo "\nqsconf($SECONDS): ***\tThis is          : \"$0\""                qsconf.325   
  echo "qsconf($SECONDS): ***\tUsing CL options : \"$cline\"\n"            qsconf.326   
fi                                                                         qsconf.327   
                                                                           qsconf.328   
# Input directories                                                        qsconf.329   
UMVNDIR="$UMDIR/vn$VN"                                                     qsconf.330   
PROGLIB=${PROGLIB:-$UMVNDIR/source/umpl}                                   GRO2U405.4     
TOP="$UMVNDIR"                                                             qsconf.332   
                                                                           qsconf.333   
# Output directories                                                       qsconf.334   
if [ -z "$OUTDIR" ] ; then OUTDIR="$TOP" ; fi                              qsconf.335   
                                                                           qsconf.336   
## set environment                                                         qsconf.337   
COMPPARSE=${COMPARSE:-$TOP/scripts/comp_parse}                             qsconf.338   
LOADPARSE=${LOADPARSE:-$TOP/scripts/load_parse}                            qsconf.339   
                                                                           qsconf.340   
# check that the following scripts exist if they are requested             GSH6U404.719   
for umscript in $COMPPARSE $LOADPARSE                                      qsconf.342   
do                                                                         qsconf.343   
  if [ ! -f "$umscript" ]                                                  qsconf.344   
  then                                                                     qsconf.345   
    echo "ERROR: Cannot find UM script \"$umscript\"."                     qsconf.346   
    echo "       Maybe -vn or -umdir are set wrong."                       qsconf.347   
    echo "       Maybe \$VN or \$UMDIR are set wrong."                     qsconf.348   
    echo "       May the script does not exist."                           qsconf.349   
    exit 1                                                                 qsconf.350   
  fi                                                                       qsconf.351   
done                                                                       qsconf.352   
                                                                           qsconf.353   
## Configuration files                                                     qsconf.354   
MAKEFILEEXECIN=${MAKEFILEEXECIN:-$TOP/scripts/Install/makefile_exec_in}    qsconf.355   
MAKEFILEEXECINMID=\                                                        qsconf.356   
${MAKEFILEEXECINMID:-$TOP/scripts/Install/makefile_execmid_in}             qsconf.357   
MAKEFILEINBOT=${MAKEFILEINBOT:-$TOP/scripts/Install/makefile_bot_in}       qsconf.358   
MAKEFILEINMID=${MAKEFILEINMID:-$TOP/scripts/Install/makefile_mid_in}       qsconf.359   
MAKEFILEINTOP=${MAKEFILEINTOP:-$TOP/scripts/Install/makefile_top_in}       qsconf.360   
MAKEFILEIN=${MAKEFILEIN:-$TOP/scripts/Install/makefile_in}                 qsconf.361   
OBJXREF=${OBJXREF:-$TOP/source/obj_xref}                                   qsconf.362   
COMPVARS=${COMPVARS:-$TOP/source/compile_vars}                             qsconf.363   
EXECXREF=${EXECXREF:-$TOP/source/exec_xref}                                qsconf.364   
                                                                           qsconf.365   
for uminput in \                                                           qsconf.366   
   $MAKEFILEEXECIN \                                                       qsconf.367   
   $MAKEFILEEXECINMID \                                                    qsconf.368   
   $MAKEFILEINBOT \                                                        qsconf.369   
   $MAKEFILEINMID \                                                        qsconf.370   
   $MAKEFILEINTOP \                                                        qsconf.371   
   $MAKEFILEIN \                                                           qsconf.372   
   $OBJXREF \                                                              qsconf.373   
   $EXECXREF \                                                             qsconf.374   
   $COMPVARS                                                               qsconf.375   
do                                                                         qsconf.376   
  if [ ! -f "$uminput" ]                                                   qsconf.377   
  then                                                                     qsconf.378   
    echo "ERROR: Cannot find UM input file \"$uminput\"."                  qsconf.379   
    echo \                                                                 qsconf.380   
"       Maybe -objx, -execx, -compvar, -vn, or -umdir is wrong."           qsconf.381   
    echo "       Maybe \$VN or \$UMDIR are set wrong."                     qsconf.382   
    echo "       Maybe the UM input file does not exist."                  qsconf.383   
    exit 1                                                                 qsconf.384   
  fi                                                                       qsconf.385   
done                                                                       qsconf.386   
                                                                           qsconf.387   
if [ -z "$confsects" ] && [ -z "$confexecs" ]                              qsconf.388   
then                                                                       qsconf.389   
  echo "ERROR: You need to specify options -sections and/or -execs"        qsconf.390   
  echo "       Use option -help for more information"                      qsconf.391   
  exit 1                                                                   qsconf.392   
fi                                                                         qsconf.393   
                                                                           qsconf.394   
for arg in cemod csmod femod fsmod                                         qsconf.395   
do                                                                         qsconf.396   
  xmod=`eval echo \\\$\$arg`                                               qsconf.397   
  xmodfiles=`eval echo \\\$\$arg\files`                                    qsconf.398   
  if [ "$xmod" = "true" ]                                                  qsconf.399   
  then                                                                     qsconf.400   
    for file in `echo $xmodfiles | $UM_SED 's/,/ /g'`                      PXUTILTY.160   
    do                                                                     qsconf.402   
      if [ ! -r $file ]                                                    qsconf.403   
      then                                                                 qsconf.404   
        if [ "$ignore_missing" = "true" ]                                  qsconf.405   
        then                                                               qsconf.406   
          eval unset \$arg                                                 qsconf.407   
          echo \                                                           qsconf.408   
"WARNING: file \"$file\" not found. Ignoring option \"-$arg $file\".\n"    qsconf.409   
        else                                                               qsconf.410   
          echo "ERROR: $arg file \"$file\" unreadable or not found" >&2    qsconf.411   
          exit 1                                                           qsconf.412   
        fi                                                                 qsconf.413   
      else                                                                 qsconf.414   
        if [ "$INFOLEVEL" -lt 1 ]                                          qsconf.415   
        then                                                               qsconf.416   
          echo \                                                           qsconf.417   
"qsconf($SECONDS): ***\tUsing $arg \"$file\" for src extraction\n"         qsconf.418   
        fi                                                                 qsconf.419   
      fi                                                                   qsconf.420   
    done                                                                   qsconf.421   
  fi                                                                       qsconf.422   
done                                                                       qsconf.423   
                                                                           qsconf.424   
if test $# -ne 0                                                           qsconf.425   
then                                                                       qsconf.426   
  sectfilt="`echo $* | $UM_SED -e 's/ /|/g' -e 's/,/|/g'`"                 PXUTILTY.161   
  if [ $INFOLEVEL -lt 1 ]                                                  qsconf.428   
  then                                                                     qsconf.429   
    echo "qsconf($SECONDS): ***\tUsing filter     : \"$sectfilt\"\n"       qsconf.430   
  fi                                                                       qsconf.431   
  buildall="false"                                                         qsconf.432   
else                                                                       qsconf.433   
  sectfilt="."                                                             qsconf.434   
  buildall="true"                                                          qsconf.435   
fi                                                                         qsconf.436   
                                                                           qsconf.437   
# make output dir if necessary then expand OUTDIR                          qsconf.438   
mkdirhier $OUTDIR                                                          qsconf.439   
OUTDIR=`expandpath $OUTDIR`                                                qsconf.440   
OBJXREF=`expandpath $OBJXREF`                                              qsconf.441   
EXECXREF=`expandpath $EXECXREF`                                            qsconf.442   
UMDIR=`expandpath $UMDIR`                                                  qsconf.443   
COMPVARS=`expandpath $COMPVARS`                                            qsconf.444   
                                                                           qsconf.445   
if [ "$INFOLEVEL" -lt 1 ]                                                  qsconf.446   
then                                                                       qsconf.447   
  echo "qsconf($SECONDS): ***\tUM     dir is    : \"$UMDIR\""              qsconf.448   
  echo "qsconf($SECONDS): ***\tUM version is    : \"$VN\""                 qsconf.449   
  echo "qsconf($SECONDS): ***\tOutput dir is    : \"$OUTDIR\""             qsconf.450   
  echo "qsconf($SECONDS): ***\tExecXref   is    : \"$EXECXREF\""           qsconf.451   
  echo "qsconf($SECONDS): ***\tObjXref    is    : \"$OBJXREF\""            qsconf.452   
  echo "qsconf($SECONDS): ***\tCOMPVARS   is    : \"$COMPVARS\"\n"         qsconf.453   
fi                                                                         qsconf.454   
                                                                           qsconf.455   
OUTSRC="$OUTDIR/src"                                                       qsconf.456   
OUTOBJ="$OUTDIR/obj"                                                       qsconf.457   
OUTEXEC="$OUTDIR/exec"                                                     qsconf.458   
BUILDEXEC="$OUTDIR/exec_build"                                             qsconf.459   
                                                                           qsconf.460   
## Step ??? -- find out what to build on                                   qsconf.461   
BUILDHOST=${BUILDHOST:-T3E_f90}                                            qsconf.462   
                                                                           qsconf.463   
## the following environment variables are declared as lowercase           GSH6U404.720   
typeset -l lfile                                                           qsconf.465   
typeset -l decklist                                                        qsconf.466   
                                                                           qsconf.467   
# Global fortran compiler command and options                              qsconf.468   
line=`fnlistopt "$COMPVARS" "" FCOM`                                       qsconf.469   
FORT=${line%:::*}                                                          qsconf.470   
FORTOPTS=${line#$FORT:::}                                                  qsconf.471   
                                                                           qsconf.472   
# Global C-compiler command and options                                    qsconf.473   
line=`fnlistopt "$COMPVARS" "" CCOM`                                       qsconf.474   
CC=${line%:::*}                                                            qsconf.475   
CCOPTS=${line#$CC:::}                                                      qsconf.476   
                                                                           qsconf.477   
# Global load command and options                                          qsconf.478   
line=`fnlistopt "$COMPVARS" "" LCOM`                                       PXUNPACK.11    
LOAD=${line%:::*}                                                          qsconf.480   
LOADOPTS=${line#$LOAD:::}                                                  qsconf.481   
                                                                           qsconf.482   
# From $COMPVARS, the central comp(ile)vars file, obtain a list of deck    GSH6U404.721   
# names for which specific compiler options are given -> decklist.         GSH6U404.722   
decklist=`$UM_GREP -E -v '^#|^\@|^\+\@' $COMPVARS |\                       PXUTILTY.162   
             fnmycut 1 1 |\                                                qsconf.487   
             $UM_SED 's/^+//g'|\                                           PXUTILTY.163   
             sort -u`                                                      qsconf.489   
                                                                           qsconf.490   
###############################################                            GSH6U404.723   
# Configure Small Executables (small execs).                               GSH6U404.724   
###############################################                            GSH6U404.725   
                                                                           GSH6U404.726   
if [ ! -z "$confexecs" ]                                                   qsconf.491   
then                                                                       qsconf.492   
                                                                           qsconf.494   
  if [ ! -z "$DEFCOM" ]                                                    qsconf.495   
  then                                                                     qsconf.496   
    echo "WARNING: DEFCOM ignored when building executables."              qsconf.497   
    echo "         Use option -help for more information.\n"               qsconf.498   
  fi                                                                       qsconf.499   
                                                                           qsconf.500   
  if [ ! -z "$CGOPTS" ]                                                    qsconf.501   
  then                                                                     qsconf.502   
    echo "WARNING: CGOPTS ignored when building executables."              qsconf.503   
    echo "         Use option -help for more information.\n"               qsconf.504   
  fi                                                                       qsconf.505   
                                                                           qsconf.506   
  echo "qsconf($SECONDS): ***\tConfiguring small executables"              qsconf.507   
  makelistex=""                                                            qsconf.508   
                                                                           qsconf.509   
  mkdirhier $BUILDEXEC                                                     qsconf.510   
                                                                           qsconf.511   
  allexecs=""                                                              qsconf.512   
  typeset -l loopexec                                                      qsconf.513   
                                                                           GSH6U404.727   
  # generate a list of the execs to be built                               GSH6U404.728   
  loopexec=`$UM_GREP -E -v '^MACHINE|^#|^$' $EXECXREF|\                    PXUTILTY.164   
                 $UM_AWK '{print $1}'|\                                    PXUTILTY.165   
                 sort -u|$UM_GREP -E -i $sectfilt`                         PXUTILTY.166   
                                                                           GSH6U404.730   
  # loop over each exec in the list and initiate the build process         GSH6U404.731   
  for exec in $loopexec                                                    qsconf.517   
  do                                                                       qsconf.518   
    allexecs="$allexecs $exec"                                             qsconf.519   
    echo "qsconf($SECONDS): ***\t  $exec"                                  qsconf.520   
                                                                           GSH6U404.732   
    # create a temporary cut down version of the exec_xref file for        GSH6U404.733   
    # the given exec                                                       GSH6U404.734   
    $UM_GREP -E ^$exec $EXECXREF> $TMPXREF.$exec                           PXUTILTY.167   
                                                                           GSH6U404.735   
    # get a list of possible DEFS for the exec                             GSH6U404.736   
    defs=\                                                                 qsconf.522   
`$UM_GREP -E \                                                             PXUTILTY.168   
  "^$exec *DEFS *$BUILDHOST|^$exec *DEFS *ALL" $TMPXREF.$exec|\            PXUTILTY.169   
  $UM_SED 's/.* DEFS .* //g'|\                                             PXUTILTY.170   
            tr -s "\012" ","`                                              qsconf.525   
                                                                           GSH6U404.737   
    # parse the temporary exec_xref file for use of additional libraries   GSH6U404.738   
    loadlibs=`$UM_GREP -E "$exec *UTIL" $TMPXREF.$exec|\                   PXUTILTY.171   
                $UM_SED 's/.* UTIL *//g'|\                                 PXUTILTY.172   
                $UM_AWK '{print $0","}'|\                                  PXUTILTY.173   
                $UM_SED 's/,$//g'`                                         PXUTILTY.174   
                                                                           GSH6U404.739   
    if [ ! -z "$loadlibs" ]                                                qsconf.530   
    then                                                                   qsconf.531   
      loadlibs=`echo $loadlibs | $UM_SED 's/,/ -l/g' |\                    PXUTILTY.175   
        $UM_SED 's/^/-l/g'`                                                PXUTILTY.176   
    fi                                                                     qsconf.533   
                                                                           GSH6U404.740   
    # nupdate file of the C decks which comprise the small exec            GSH6U404.741   
    $UM_GREP -E \                                                          PXUTILTY.177   
      "^$exec *DECKC $BUILDHOST|^$exec *DECKC ALL" $TMPXREF.$exec|\        PXUTILTY.178   
      $UM_SED 's/^'$exec' *DECKC *.* /*C /g' > $NUPTMPC.$exec              PXUTILTY.179   
                                                                           GSH6U404.742   
    # nupdate file of the fortran decks which comprise the small exec      GSH6U404.743   
    $UM_GREP -E \                                                          PXUTILTY.180   
      "^$exec *DECKS $BUILDHOST|^$exec *DECKS ALL" $TMPXREF.$exec|\        PXUTILTY.181   
      $UM_SED 's/^'$exec' *DECKS *.* /*C /g' > $NUPTMP.$exec               PXUTILTY.182   
                                                                           GSH6U404.744   
    mkdir -p $BUILDEXEC/$exec\_dir 2> /dev/null                            qsconf.538   
                                                                           qsconf.539   
    ## populate the build dir for the exec with C source files ##          GSH6U404.745   
    if [ -s "$NUPTMPC.$exec" ]                                             qsconf.540   
    then                                                                   qsconf.541   
      cd $BUILDEXEC/$exec\_dir                                             qsconf.542   
      # remove any pre-existing temporary build directory                  GSH6U404.746   
      rm -fr $BUILDTMP                                                     qsconf.543   
      # create a new temporary build driectory and move to it              GSH6U404.747   
      mkdir -p $BUILDTMP                                                   qsconf.544   
      cd $BUILDTMP                                                         qsconf.545   
                                                                           qsconf.546   
      echo "qsconf($SECONDS): ***\t    nupdate (c-code)"                   qsconf.547   
      if [ "$cemod" = "true" ]                                             qsconf.548   
      then                                                                 qsconf.549   
        # concatenate content of C mod file(s) with nupdate file           GSH6U404.748   
        for file in `echo $cemodfiles | $UM_SED 's/,/ /g'`                 PXUTILTY.183   
        do                                                                 qsconf.551   
          cat $file >>$NUPTMPC.$exec                                       qsconf.552   
        done                                                               qsconf.553   
      fi                                                                   qsconf.554   
      # extract source code into temporary build directory                 GSH6U404.749   
      $NUPCOMMD -D -p $PROGLIB -i $NUPTMPC.$exec -d $defs \                GRO2U405.5     
        1> $TMPFILE1 2> $TMPFILE1                                          qsconf.556   
      if [ $? -ne 0 ]                                                      qsconf.557   
      then                                                                 qsconf.558   
        echo                                                               qsconf.559   
        echo $NUPCOMMD -D -p $PROGLIB -i $NUPTMPC.$exec -d $defs           GRO2U405.6     
        cat $TMPFILE1                                                      qsconf.561   
        exit 1                                                             qsconf.562   
      else                                                                 qsconf.563   
                                                                           GSH7U404.1     
#       Create a list of what C decks are used in this small executable    GSH7U404.2     
#       from all those taken from the exec_xref file (which have had       GSH7U404.3     
#       *C added) and new decks added in mods.  Decks not in this list     GSH7U404.4     
#       must have been extracted by nupdate from comdeck modifications     GSH7U404.5     
#       and so are not required here.  These deck files are removed        GSH7U404.6     
#       from the compile directory so they do not cause compile            GSH7U404.7     
#       failures.                                                          GSH7U404.8     
                                                                           GSH7U404.9     
        requiredfiles=`$UM_GREP -E '^\*C |^\*DECK' $NUPTMPC.$exec |\       PXUTILTY.184   
 tr -s "," "\012" | $UM_SED 's/^\*C //g' | $UM_SED 's/^\*DECK//g' |\       PXUTILTY.185   
 tr -s "\012" ":"`                                                         GSH7U404.12    
        for file in `ls`                                                   GSH7U404.13    
        do                                                                 GSH7U404.14    
          if [[ "$requiredfiles" != *"$file"* ]]                           GSH7U404.15    
          then                                                             GSH7U404.16    
            rm -f $file                                                    GSH7U404.17    
          fi                                                               GSH7U404.18    
        done                                                               GSH7U404.19    
        rm -f $TMPFILE1 $NUPTMPC.$exec *.log                               qsconf.564   
*IF DEF,DECALPHA,OR,DEF,HP,OR,DEF,LINUX                                    PXQSCON2.1     
        emptyfiles=`find . -size 0 -print`                                 PXQSCON2.2     
        if [[ "$emptyfiles" != "" ]]                                       PXQSCON2.3     
        then                                                               PXQSCON2.4     
          echo "WARNING: Removing files of zero length"                    PXQSCON2.5     
          echo "$emptyfiles"                                               PXQSCON2.6     
          echo $emptyfiles | xargs rm -f                                   PXQSCON2.7     
        fi                                                                 PXQSCON2.8     
*ENDIF                                                                     PXQSCON2.9     
      fi                                                                   qsconf.565   
                                                                           qsconf.566   
      echo "qsconf($SECONDS): ***\t    source comparison"                  qsconf.567   
      for file in \                                                        qsconf.568   
`ls|\                                                                      PXUTILTY.186   
$UM_GREP -E -v "\.log$|^core\$|$exec\$|\.o\$|\.c\$|\.f\$|Makefile\$"`      PXUTILTY.187   
      do                                                                   qsconf.570   
        lfile=$file.c                                                      qsconf.571   
        test=`fnmydiff $file $BUILDEXEC/$exec\_dir/$lfile`                 qsconf.572   
        if [ $test -eq 1 ]                                                 qsconf.573   
        then                                                               qsconf.574   
          # extracted vn. is different from user vn.                       GSH6U404.750   
          # move extracted vn. to user directory                           GSH6U404.751   
          mv -f $file $BUILDEXEC/$exec\_dir/$lfile                         qsconf.575   
        elif [ $test -ne 0 ]                                               qsconf.576   
        then                                                               qsconf.577   
          # no user vn. of the file                                        GSH6U404.752   
          # move extracted vn. to user directory                           GSH6U404.753   
          mv -f $file $BUILDEXEC/$exec\_dir/$lfile                         qsconf.578   
        else                                                               qsconf.579   
          # the extracted vn. is the same as the user vn.                  GSH6U404.754   
          # remove temporary extracted version                             GSH6U404.755   
          rm -f $file                                                      qsconf.580   
        fi                                                                 qsconf.581   
      done                                                                 qsconf.582   
    fi                                                                     qsconf.583   
                                                                           qsconf.584   
    ## populate the build dir for the exec with fortran source files ##    GSH6U404.756   
    if [ -s "$NUPTMP.$exec" ]                                              qsconf.585   
    then                                                                   qsconf.586   
      cd $BUILDEXEC/$exec\_dir                                             qsconf.587   
      # remove any pre-existing temporary build directory                  GSH6U404.757   
      rm -fr $BUILDTMP                                                     qsconf.588   
      # create a new temporary build driectory and move to it              GSH6U404.758   
      mkdir -p $BUILDTMP                                                   qsconf.589   
      cd $BUILDTMP                                                         qsconf.590   
                                                                           qsconf.591   
      echo "qsconf($SECONDS): ***\t    nupdate (fortran)"                  qsconf.592   
      if [ "$femod" = "true" ]                                             qsconf.593   
      then                                                                 qsconf.594   
        # concatenate content of fortran mod file(s) with nupdate file     GSH6U404.759   
        for file in `echo $femodfiles | $UM_SED 's/,/ /g'`                 PXUTILTY.188   
        do                                                                 qsconf.596   
          cat $file >>$NUPTMP.$exec                                        qsconf.597   
        done                                                               qsconf.598   
      fi                                                                   qsconf.599   
      # extract source code into temporary build directory                 GSH6U404.760   
      $NUPCOMMD -D -p $PROGLIB -i $NUPTMP.$exec -d $defs \                 GRO2U405.7     
        1> $TMPFILE1 2> $TMPFILE1                                          qsconf.601   
      if [ $? -ne 0 ]                                                      qsconf.602   
      then                                                                 qsconf.603   
        echo                                                               qsconf.604   
        echo $NUPCOMMD -D -p $PROGLIB -i $NUPTMP.$exec -d $defs            GRO2U405.8     
        cat $TMPFILE1                                                      qsconf.606   
        exit 1                                                             qsconf.607   
      else                                                                 qsconf.608   
                                                                           GSH7U404.20    
#       Create a list of what Fortran decks are used in this small         GSH7U404.21    
#       executable from all those taken from the exec_xref file (which     GSH7U404.22    
#       have had *C added) and new decks added in mods.  Decks not in      GSH7U404.23    
#       this list must have been extracted by nupdate from comdeck         GSH7U404.24    
#       modifications and so are not required here.                        GSH7U404.25    
#       These deck files are removed from the compile directory so         GSH7U404.26    
#       they do not cause compile failures.                                GSH7U404.27    
                                                                           GSH7U404.28    
        requiredfiles=`$UM_GREP -E '^\*C |^\*DECK' $NUPTMP.$exec |\        PXUTILTY.189   
 tr -s "," "\012" | $UM_SED 's/^\*C //g' | $UM_SED 's/^\*DECK//g' |\       PXUTILTY.190   
 tr -s "\012" ":"`                                                         GSH7U404.31    
                                                                           GSH7U404.32    
        for file in `ls`                                                   GSH7U404.33    
        do                                                                 GSH7U404.34    
          if [[ "$requiredfiles" != *"$file"* ]]                           GSH7U404.35    
          then                                                             GSH7U404.36    
            rm -f $file                                                    GSH7U404.37    
          fi                                                               GSH7U404.38    
        done                                                               GSH7U404.39    
        rm -f $TMPFILE1 $NUPTMP.$exec *.log                                qsconf.609   
*IF DEF,DECALPHA,OR,DEF,HP,OR,DEF,LINUX                                    PXQSCON2.10    
        emptyfiles=`find . -size 0 -print`                                 PXQSCON2.11    
        if [[ "$emptyfiles" != "" ]]                                       PXQSCON2.12    
        then                                                               PXQSCON2.13    
          echo "WARNING: Removing files of zero length"                    PXQSCON2.14    
          echo "$emptyfiles"                                               PXQSCON2.15    
          echo $emptyfiles | xargs rm -f                                   PXQSCON2.16    
        fi                                                                 PXQSCON2.17    
*ENDIF                                                                     PXQSCON2.18    
      fi                                                                   qsconf.610   
                                                                           qsconf.611   
      echo "qsconf($SECONDS): ***\t    source comparison"                  qsconf.612   
      for file in \                                                        qsconf.613   
`ls |\                                                                     PXUTILTY.191   
 $UM_GREP -E -v "\.log$|^core\$|$exec\$|\.o\$|\.c\$|\.f\$|Makefile$"`      PXUTILTY.192   
      do                                                                   qsconf.615   
        lfile=$file.f                                                      qsconf.616   
        test=`fnmydiff $file $BUILDEXEC/$exec\_dir/$lfile`                 qsconf.617   
        if [ $test -eq 1 ]                                                 qsconf.618   
        then                                                               qsconf.619   
          # extracted vn. is different from user vn.                       GSH6U404.761   
          # move extracted vn. to user directory                           GSH6U404.762   
          mv -f $file $BUILDEXEC/$exec\_dir/$lfile                         qsconf.620   
        elif [ $test -ne 0 ]                                               qsconf.621   
        then                                                               qsconf.622   
          # no user vn. of the file                                        GSH6U404.763   
          # move extracted vn. to user directory                           GSH6U404.764   
          mv -f $file $BUILDEXEC/$exec\_dir/$lfile                         qsconf.623   
        else                                                               qsconf.624   
          # the extracted vn. is the same as the user vn.                  GSH6U404.765   
          # remove temporary extracted version                             GSH6U404.766   
          rm -f $file                                                      qsconf.625   
        fi                                                                 qsconf.626   
      done                                                                 qsconf.627   
    fi                                                                     qsconf.628   
                                                                           qsconf.629   
## Create low level Makefile                                               qsconf.630   
                                                                           GSH6U404.767   
    # move to the build directory for the given small exec                 GSH6U404.768   
    cd $BUILDEXEC/$exec\_dir                                               qsconf.631   
    echo "qsconf($SECONDS): ***\t    creating Makefile"                    qsconf.632   
    objs=""  # set initial list of object files to empty                   GSH6U404.769   
    rm -f $TMPMAKE1                                                        qsconf.634   
                                                                           qsconf.635   
    # Create a makefile directive for each file in the build directory.    GSH6U404.770   
    for file in `ls | $UM_GREP -E '\.f$|\.c$'`                             PXUTILTY.193   
    do                                                                     qsconf.637   
      if [ ! -d $file ]                                                    qsconf.638   
      then                                                                 qsconf.639   
        name=${file%.[cf]}   # return file name                            qsconf.640   
        type=${file##$name.} # return file type                            qsconf.641   
        if [ "$type" = "f" ]                                               qsconf.642   
        then                                                               qsconf.643   
          if [[ "$decklist" = *"$name"* ]]                                 qsconf.644   
          then                                                             qsconf.645   
            # deck has specific compiler options, call fnlistopt to        GSH6U404.771   
            # obtain them                                                  GSH6U404.772   
            echo \                                                         qsconf.649   
"qsconf($SECONDS): ***\t        Getting new comp opts for $name"           qsconf.650   
            line=`fnlistopt "$COMPVARS" "$name" FCOM`                      qsconf.651   
            fort=${line%:::*}                                              qsconf.652   
            opts=${line#$fort:::}                                          qsconf.653   
                                                                           GSH6U404.773   
            # Set the values of thisfort (the fortran compiler) and        GSH6U404.774   
            # thisopts (the compiler options) by comparing the deck        GSH6U404.775   
            # specific values with global values                           GSH6U404.776   
                                                                           GSH6U404.777   
            if [ "$fort" != "$FORT" ]                                      qsconf.654   
            then                                                           qsconf.655   
              thisfort=$fort                                               qsconf.656   
            else                                                           qsconf.657   
              thisfort='$(FORT)'                                           qsconf.658   
            fi                                                             qsconf.659   
            if [ "$opts" != "$FORTOPTS" ]                                  qsconf.660   
            then                                                           qsconf.661   
              thisopts=$opts                                               qsconf.662   
            else                                                           qsconf.663   
              thisopts='$(FORTOPTS)'                                       qsconf.664   
            fi                                                             qsconf.665   
          else                                                             qsconf.666   
            # deck has no specific compiler options use global             GSH6U404.778   
            # default values                                               GSH6U404.779   
            thisfort='$(FORT)'                                             qsconf.668   
            thisopts='$(FORTOPTS)'                                         qsconf.669   
          fi                                                               qsconf.670   
                                                                           GSH6U404.780   
          # create a makefile directive for the current file               GSH6U404.781   
          echo \                                                           qsconf.671   
"$name.o: $file\n\t$thisfort $thisopts -c $file\n" >> $TMPMAKE1            qsconf.672   
        elif [ "$type" = "c" ]                                             qsconf.673   
        then                                                               qsconf.674   
          if [[ "$decklist" = *"$name"* ]]                                 qsconf.675   
          then                                                             qsconf.676   
            # deck has specific compiler options, call fnlistopt to        GSH6U404.782   
            # obtain them                                                  GSH6U404.783   
            echo \                                                         qsconf.680   
"qsconf($SECONDS): ***\t        Getting new comp opts for $name"           qsconf.681   
            line=`fnlistopt "$COMPVARS" "$name" CCOM`                      qsconf.682   
            cc=${line%:::*}                                                qsconf.683   
            opts=${line#$cc:::}                                            qsconf.684   
                                                                           GSH6U404.784   
            # set the values of thiscc (the c compiler) and thisopts       GSH6U404.785   
            # (the compiler options) by comparing the deck specific        GSH6U404.786   
            # values with global values                                    GSH6U404.787   
                                                                           GSH6U404.788   
            if [ "$cc" != "$CC" ]                                          qsconf.685   
            then                                                           qsconf.686   
              thiscc=$cc                                                   qsconf.687   
            else                                                           qsconf.688   
              thiscc='$(CC)'                                               qsconf.689   
            fi                                                             qsconf.690   
            if [ "$opts" != "$CCOPTS" ]                                    qsconf.691   
            then                                                           qsconf.692   
              thisopts=$opts                                               qsconf.693   
            else                                                           qsconf.694   
              thisopts='$(CCOPTS)'                                         qsconf.695   
            fi                                                             qsconf.696   
          else                                                             qsconf.697   
            # the deck has no specific compiler options use                GSH6U404.789   
            # global defaults                                              GSH6U404.790   
            thiscc='$(CC)'                                                 qsconf.699   
            thisopts='$(CCOPTS)'                                           qsconf.700   
          fi                                                               qsconf.701   
          # create a makefile directive for the current file               GSH6U404.791   
          echo \                                                           qsconf.702   
"$name.o: $file\n\t$thiscc $thisopts -c $file\n" >> $TMPMAKE1              qsconf.703   
        else                                                               qsconf.704   
          echo "ERROR: file type \"$type\" for \"$file\" is unknown."      qsconf.705   
          exit 1                                                           qsconf.706   
        fi                                                                 qsconf.707   
        # Maintain a list of object files which will be parsed             GSH6U404.792   
        # directly into the Makefile.  objs is of the form,                GSH6U404.793   
        # objs=abcalc1.o ac_ctl1.o                                         GSH6U404.794   
        objs="$objs $name.o"                                               qsconf.708   
      fi                                                                   qsconf.709   
    done                                                                   qsconf.710   
                                                                           GSH6U404.795   
## Create the Makefile from makefileexec_in                                GSH6U404.796   
                                                                           GSH6U404.797   
    echo "s^@nproc@^$NPROC^g"                   > $SEDSCRIPT1              qsconf.711   
    echo `gen_sed_string "@objects@" "4" "$objs"`   >> $SEDSCRIPT1         GAV3U405.40    
    echo "s^@fort@^$FORT^g"                     >> $SEDSCRIPT1             qsconf.713   
    echo "s^@fortopts@^$FORTOPTS^g"             >> $SEDSCRIPT1             qsconf.714   
    echo "s^@load@^$LOAD^g"                     >> $SEDSCRIPT1             qsconf.715   
    echo "s^@loadopts@^$LOADOPTS $loadlibs^g"   >> $SEDSCRIPT1             qsconf.716   
    echo "s^@cc@^$CC^g"                         >> $SEDSCRIPT1             qsconf.717   
    echo "s^@ccopts@^$CCOPTS^g"                 >> $SEDSCRIPT1             qsconf.718   
    echo "s^@binary@^$exec^g"                   >> $SEDSCRIPT1             qsconf.719   
    echo "s^@outdir@^$OUTEXEC^g"                >> $SEDSCRIPT1             qsconf.720   
    echo "s^@um_pe_label@^$UM_PE_LABEL^g"       >> $SEDSCRIPT1             PXQSPREL.24    
    echo "s^@.*@^^g"                            >> $SEDSCRIPT1             qsconf.721   
    $UM_SED -f $SEDSCRIPT1 < $MAKEFILEEXECIN > $MAKEFILE                   PXCLLMOD.121   
                                                                           qsconf.723   
    # append actual rules for making individual decks to the               GSH6U404.798   
    # makefile                                                             qsconf.725   
    cat $TMPMAKE1 >> $MAKEFILE                                             qsconf.726   
                                                                           qsconf.727   
    rm -f $SEDSCRIPT1                                                      qsconf.728   
  done                                                                     qsconf.729   
                                                                           qsconf.730   
## Create mid level script Makefile                                        qsconf.731   
                                                                           GSH6U404.799   
  if [ "$buildall" = "true" ]                                              qsconf.732   
  then                                                                     qsconf.733   
    echo "qsconf($SECONDS): ***\t  creating top Makefile"                  qsconf.734   
    cp $MAKEFILEEXECINMID $MAKETMP                                         qsconf.735   
    for exec in $allexecs                                                  qsconf.736   
    do                                                                     qsconf.737   
      echo "$exec:" >> $MAKETMP                                            qsconf.738   
      echo "\tcd $exec""_dir ;\c" >> $MAKETMP                              qsconf.739   
      echo \                                                               qsconf.740   
" \$(MAKE) FORT=\$(FORT) LOAD=\$(LOAD) CC=\$(CC)\n" >> $MAKETMP            qsconf.741   
      echo "install-$exec: $exec"  >> $MAKETMP                             qsconf.742   
      echo "\tcd $exec""_dir ;\c" >> $MAKETMP                              qsconf.743   
      echo " \$(MAKE) install\n" >> $MAKETMP                               qsconf.744   
      install_list="$install_list install-$exec"                           qsconf.745   
      build_list="$build_list $exec"                                       qsconf.746   
    done                                                                   qsconf.747   
    echo "s^@install_list@^$install_list^g"     > $SEDSCRIPT1              qsconf.748   
    echo "s^@nproc@^1^g"                        >> $SEDSCRIPT1             qsconf.749   
    echo "s^@fort@^$FORT^g"                     >> $SEDSCRIPT1             qsconf.750   
    echo "s^@fortopts@^$FORTOPTS^g"             >> $SEDSCRIPT1             qsconf.751   
    echo "s^@load@^$LOAD^g"                     >> $SEDSCRIPT1             qsconf.752   
    echo "s^@loadopts@^$LOADOPTS $loadlibs^g"   >> $SEDSCRIPT1             qsconf.753   
    echo "s^@cc@^$CC^g"                         >> $SEDSCRIPT1             qsconf.754   
    echo "s^@ccopts@^$CCOPTS^g"                 >> $SEDSCRIPT1             qsconf.755   
    echo "s^@build_list@^$build_list^g"         >> $SEDSCRIPT1             qsconf.756   
    $UM_SED -f $SEDSCRIPT1 < $MAKETMP > $BUILDEXEC/$MAKEFILE               PXCLLMOD.122   
  fi                                                                       qsconf.758   
                                                                           qsconf.759   
  echo \                                                                   qsconf.760   
"qsconf($SECONDS): ***\tFinished configuring small executables\n"          qsconf.761   
# Return to the initiating directory in case OUTSRC is                     qsconf.762   
# relative to it.                                                          qsconf.763   
  cd $MYDIR                                                                qsconf.764   
fi                                                                         qsconf.765   
                                                                           qsconf.766   
###############################################                            GSH6U404.800   
# Configure Sections.                                                      GSH6U404.801   
###############################################                            GSH6U404.802   
                                                                           GSH6U404.803   
if [ ! -z "$confsects" ]                                                   qsconf.767   
then                                                                       qsconf.768   
                                                                           qsconf.769   
  # if CGOPTS does not have a value, set it to the string "."              GSH6U404.804   
  # which implies any compile option is acceptable.                        GSH6U404.805   
  if [ -z "$CGOPTS" ]                                                      qsconf.770   
  then                                                                     qsconf.771   
    CGOPTS="."                                                             qsconf.772   
  fi                                                                       qsconf.773   
                                                                           qsconf.774   
  mkdirhier $OUTSRC                                                        qsconf.775   
  if [ "$INFOLEVEL" -lt 1 ]                                                qsconf.776   
  then                                                                     qsconf.777   
    echo "qsconf($SECONDS): ***\tSetting switches"                         qsconf.778   
  fi                                                                       qsconf.779   
  for switch in \                                                          qsconf.780   
    `cat $OBJXREF|$UM_GREP DEF_SWITCHES| $UM_SED 's/DEF_SWITCHES *//g'`    PXUTILTY.194   
  do                                                                       qsconf.782   
    OLDIFS=$IFS                                                            qsconf.783   
    IFS=:                                                                  qsconf.784   
    set $switch                                                            qsconf.785   
    IFS=$OLDIFS                                                            qsconf.786   
    eval tmp_${2}=$1                                                       qsconf.787   
    eval tmp_${1}=$2                                                       qsconf.788   
  done                                                                     qsconf.789   
                                                                           GSH6U404.806   
  if [ "$INFOLEVEL" -lt 1 ]                                                qsconf.790   
  then                                                                     qsconf.791   
    echo "qsconf($SECONDS): ***\tFinished setting switches\n"              qsconf.792   
  fi                                                                       qsconf.793   
                                                                           qsconf.794   
  if [ "$INFOLEVEL" -lt 1 ]                                                qsconf.795   
  then                                                                     qsconf.796   
    echo "qsconf($SECONDS): ***\tSetting general options"                  qsconf.797   
  fi                                                                       qsconf.798   
                                                                           GSH6U404.807   
  # set the general compile options for the build.  If -cgopts             GSH6U404.808   
  # is given an argument, build the given type i.e. normal, apprentice     GSH6U404.809   
  # or debug.  The default is build all types.                             GSH6U404.810   
  loopswitch=`$UM_GREP -E 'COMP_GEN_OPTS '$BUILDHOST $OBJXREF|\            PXUTILTY.195   
                   $UM_SED 's/COMP_GEN_OPTS '$BUILDHOST' *//g'|\           PXUTILTY.196   
                   $UM_GREP -E -i $CGOPTS`                                 PXUTILTY.197   
  if [ -z "$loopswitch" ]                                                  qsconf.802   
  then                                                                     qsconf.803   
    echo "ERROR: Could not find any COMP_GEN_OPTS to match." >&2           qsconf.804   
    echo "       Maybe -cgopts is incorrectly specified." >&2              qsconf.805   
    echo "       Maybe the ObjXref file is incorrect." >&2                 qsconf.806   
    echo "       See -help for more information." >&2                      qsconf.807   
    exit 1                                                                 qsconf.808   
  fi                                                                       qsconf.809   
                                                                           qsconf.810   
  for switch in $loopswitch                                                qsconf.811   
  do                                                                       qsconf.812   
    if [ "$INFOLEVEL" -lt 1 ]                                              qsconf.813   
    then                                                                   qsconf.814   
      echo "qsconf($SECONDS): ***\t  Will build COMP_GEN_OPT $switch"      qsconf.815   
    fi                                                                     qsconf.816   
    # set up an equality between the switch id and its name e.g.           GSH6U404.811   
    # n:normal -> tmp_normal=n and tmp_n=normal                            GSH6U404.812   
    eval `echo $switch|$UM_AWK -F: '{print "tmp_"$2"="$1}'`                PXUTILTY.198   
    eval `echo $switch|$UM_AWK -F: '{print "tmp_"$1"="$2}'`                PXUTILTY.199   
  done                                                                     qsconf.819   
  if [ "$INFOLEVEL" -lt 1 ]                                                qsconf.820   
  then                                                                     qsconf.821   
    echo "qsconf($SECONDS): ***\tFinished setting general options\n"       qsconf.822   
  fi                                                                       qsconf.823   
                                                                           qsconf.824   
  if [ "$INFOLEVEL" -lt 1 ]                                                qsconf.825   
  then                                                                     qsconf.826   
    echo "qsconf($SECONDS): ***\tLooping over source sections"             qsconf.827   
  fi                                                                       qsconf.828   
                                                                           GSH6U404.813   
  typeset -l loopsect                                                      qsconf.829   
                                                                           GSH6U404.814   
  # create a list of the sections to be built (default is all sections)    GSH6U404.815   
                                                                           GSH6U404.816   
  str='^COMP_GEN_OPTS|^DEF_SWITCHES|^#|^$|^MACHINE|^SECTION|^COMPILE'      GSH6U404.817   
  loopsect=`$UM_GREP -E -v $str $OBJXREF|\                                 PXUTILTY.200   
                 $UM_AWK '{print $1}'|\                                    PXUTILTY.201   
                 sort -u|$UM_GREP -E -i $sectfilt`                         PXUTILTY.202   
                                                                           GSH6U404.819   
  # build each section requested                                           GSH6U404.820   
  for sect in $loopsect                                                    qsconf.833   
  do                                                                       qsconf.834   
    makelistbt=""                                                          qsconf.835   
    echo "qsconf($SECONDS): ***\t  Configuring section $sect"              qsconf.836   
                                                                           GSH6U404.821   
    # create a cut down obj_xref file for the section being built          GSH6U404.822   
    $UM_GREP -E -i ^$sect $OBJXREF > $TMPXREF.$sect                        PXUTILTY.203   
                                                                           GSH6U404.823   
    if [ -z "$DEFCOM" ]                                                    qsconf.838   
    then                                                                   qsconf.839   
      # there are no user defined def combinations                         GSH6U404.824   
                                                                           GSH6U404.825   
      # create a list of buildtypes for section e.g. in section A02_1B     GSH6U404.826   
      # A02_1B BUILD OTHER    G0_n G0_d A6_n A6_d Gp_n Gp_d A6Gp_n         GSH6U404.827   
      # A6Gp_d G0 A6 A6Gp will be built in three different ways.           GSH6U404.828   
                                                                           GSH6U404.829   
      buildtypes=`$UM_GREP -E \                                            PXUTILTY.204   
         -i "^$sect BUILD $BUILDHOST" $TMPXREF.$sect|\                     PXUTILTY.205   
         $UM_SED 's/^.* BUILD '$BUILDHOST' *//g' |\                        PXUTILTY.206   
         $UM_SED 's/_.//g' |\                                              PXUTILTY.207   
         expand| $UM_SED 's/  */ /g' | tr -s " " "\012"|\                  PXUTILTY.208   
                        sort -u`                                           qsconf.844   
                                                                           GSH6U404.830   
      # loopopts is all possible build combinations and types for the      GSH6U404.831   
      # section e.g for A02_1B Gp_n Gp_d Gp_a A6Gp_n A6Gp_d A6Gp_a         GSH6U404.832   
      loopopts=`$UM_GREP -E \                                              PXUTILTY.209   
         -i "^$sect BUILD $BUILDHOST" $TMPXREF.$sect|\                     PXUTILTY.210   
         $UM_SED 's/^.* BUILD '$BUILDHOST' *//g'`                          PXUTILTY.211   
    else                                                                   qsconf.847   
      # use user specified buildtypes                                      GSH6U404.833   
      buildtypes=${DEFCOM%_?}                                              qsconf.848   
      options=$CGOPTS                                                      qsconf.849   
    fi                                                                     qsconf.850   
                                                                           GSH6U404.834   
    for buildtype in $buildtypes                                           qsconf.851   
    do                                                                     qsconf.852   
      objs=""                                                              qsconf.853   
      if [ -z "$DEFCOM" ]                                                  qsconf.854   
      then                                                                 qsconf.855   
        options=""                                                         qsconf.856   
        for opt in $loopopts                                               qsconf.857   
        do                                                                 qsconf.858   
          # given opt is of the form Gp_n test that Gp is a valid          GSH6U404.835   
          # build combination and n (normal) a valid build                 GSH6U404.836   
          test=`echo $opt |$UM_AWK -F_ '{print $1}'`                       PXUTILTY.212   
          if [ "$test" = "$buildtype" ]                                    qsconf.860   
          then                                                             qsconf.861   
            options="$options `echo $opt |\                                PXUTILTY.213   
                     $UM_AWK -F_ '{print "$tmp_"$2}'`"                     PXUTILTY.214   
          fi                                                               qsconf.863   
        done                                                               qsconf.864   
        options=`eval echo $options`                                       qsconf.865   
                                                                           qsconf.866   
        if [ -z "$options" ]                                               qsconf.867   
        then                                                               qsconf.868   
          echo "\nWARNING: No valid COMP_GEN_OPTS for this section."       qsconf.869   
          echo "WARNING: There may be an error in the ObjXref file."       qsconf.870   
          echo "WARNING: Continuing.\n"                                    qsconf.871   
        fi                                                                 qsconf.872   
      fi                                                                   qsconf.873   
                                                                           qsconf.874   
      defs=`echo $buildtype |\                                             qsconf.875   
              $UM_AWK '{for (i=1 ; i < length($0) ; i=i+2) {               PXUTILTY.215   
                          printf "$tmp_%s ", substr($0,i,2)                qsconf.877   
                         }}'`                                              qsconf.878   
      defsd=""                                                             qsconf.879   
      for def in $defs                                                     qsconf.880   
      do                                                                   qsconf.881   
        tmp=`eval echo $def`                                               qsconf.882   
        if [ "$tmp" != "" ]                                                qsconf.883   
        then                                                               qsconf.884   
          defsd="$defsd $tmp"                                              qsconf.885   
        else                                                               qsconf.886   
          defmsg=`echo $def | $UM_SED 's/[^_]*_//g'`                       PXUTILTY.216   
          echo "\nERROR: Unknown id $defmsg in $sect in ObjXref">&2        qsconf.888   
          exit 1                                                           qsconf.889   
        fi                                                                 qsconf.890   
      done                                                                 qsconf.891   
      defsdc=`echo $defsd | $UM_SED 's/ /,/g'`                             PXUTILTY.217   
      srcdir="$OUTSRC/$sect/$buildtype"                                    qsconf.893   
      objdir="$OUTOBJ/$sect/$buildtype"                                    qsconf.894   
                                                                           qsconf.895   
      echo \                                                               qsconf.896   
"qsconf($SECONDS): ***\t    $buildtype: `upper $sect`$defsd\t"             qsconf.897   
                                                                           qsconf.898   
      rm -f $NUPTMPC.$sect $NUPTMPC.$sect	# ????????????                   GSH6U404.837   
                                                                           qsconf.900   
      # nupdate file of the C decks which comprise the section             GSH6U404.838   
      $UM_GREP -E -i "^$sect DECKC" $TMPXREF.$sect|\                       PXUTILTY.218   
        $UM_SED 's/^.* DECKC */*C /g' > $NUPTMPC.$sect                     PXUTILTY.219   
                                                                           qsconf.903   
      # nupdate file of the fortran decks which comprise the section       GSH6U404.839   
      $UM_GREP -E -i "^$sect DECKS" $TMPXREF.$sect|\                       PXUTILTY.220   
        $UM_SED 's/^.* DECKS */*C /g' > $NUPTMP.$sect                      PXUTILTY.221   
                                                                           qsconf.906   
      for opt in `upper $options`                                          qsconf.907   
      do                                                                   qsconf.908   
        if [ ! -d $srcdir/$opt ]                                           qsconf.909   
        then                                                               qsconf.910   
          mkdir -p $srcdir/$opt 2> /dev/null                               qsconf.911   
          mkdir -p $objdir 2> /dev/null                                    qsconf.912   
                                                                           GSH6U404.840   
                                                                           GSH6U404.841   
        # set up the directory structure between src and obj.  Check       GSH6U404.842   
        # first that the source directory exists e.g a02_1b/Gp/NORMAL      GSH6U404.843   
        # Create a link from obj if it does not already exist.             GSH6U404.844   
                                                                           GSH6U404.845   
                                                                           qsconf.913   
          if [ ! -h "$objdir/$opt" ]                                       qsconf.914   
          then                                                             qsconf.915   
            ln -s ../../../src/$sect/$buildtype/$opt $objdir/.             qsconf.916   
            RET=$?                                                         GSHAU404.1     
            if test $RET -eq 0                                             GSHAU404.2     
            then                                                           qsconf.919   
              :                                                            GSH6U404.846   
            else                                                           qsconf.922   
              exit $RET                                                    GSHAU404.3     
            fi                                                             qsconf.926   
          fi                                                               qsconf.927   
        else                                                               qsconf.928   
          if [ -h "$objdir/$opt" ]                                         qsconf.929   
          then                                                             qsconf.930   
              :                                                            GSH6U404.847   
          else                                                             qsconf.933   
            ln -s ../../../src/$sect/$buildtype/$opt $objdir/.             qsconf.936   
          fi                                                               qsconf.937   
        fi                                                                 qsconf.938   
      done                                                                 qsconf.939   
                                                                           qsconf.940   
      ## populate the build dir for the exec with C source files ##        GSH6U404.848   
      if [ -s "$NUPTMPC.$sect" ]                                           qsconf.941   
      then                                                                 qsconf.942   
        cd $srcdir                                                         qsconf.943   
        rm -fr $BUILDTMP                                                   qsconf.944   
        # remove any pre-existing temporary build directory                GSH6U404.849   
        mkdir -p $BUILDTMP                                                 qsconf.945   
        # create a new temporary build driectory and move to it            GSH6U404.850   
        cd $BUILDTMP                                                       qsconf.946   
                                                                           qsconf.947   
        echo "qsconf($SECONDS): ***\t      nupdate (c-code)"               qsconf.948   
        if [ "$csmod" = "true" ]                                           qsconf.949   
        then                                                               qsconf.950   
          for file in `echo $csmodfiles | $UM_SED 's/,/ /g'`               PXUTILTY.222   
          do                                                               qsconf.952   
            # concatenate content of C mod file(s) with nupdate file       GSH6U404.851   
            cat $file >>$NUPTMPC.$sect                                     qsconf.953   
          done                                                             qsconf.954   
        fi                                                                 qsconf.955   
                                                                           GSH6U404.852   
        # extract source code into temporary build directory               GSH6U404.853   
        $NUPCOMMD -D -p $PROGLIB -i $NUPTMPC.$sect \                       GRO2U405.9     
          -d `upper $sect`,$defsdc \                                       qsconf.957   
          1> $TMPFILE1 2> $TMPFILE1                                        qsconf.958   
                                                                           GSH6U404.854   
        if [ $? -ne 0 ]                                                    qsconf.959   
        then                                                               qsconf.960   
          echo                                                             qsconf.961   
          echo $NUPCOMMD -D -p $PROGLIB -i $NUPTMPC.$sect \                GRO2U405.10    
-d `upper $sect`,$defsdc                                                   qsconf.963   
          cat $TMPFILE1                                                    qsconf.964   
          exit 1                                                           qsconf.965   
        else                                                               qsconf.966   
#       Create a list of what C decks are used in this section             PXQSCONF.1     
#       from all those taken from the obj_xref file (which                 PXQSCONF.2     
#       have had *C added) and new decks added in mods.  Decks not in      PXQSCONF.3     
#       this list must have been extracted by nupdate from comdeck         PXQSCONF.4     
#       modifications and so are not required here.                        PXQSCONF.5     
#       These deck files are removed from the compile directory so         PXQSCONF.6     
#       they do not cause compile failures.                                PXQSCONF.7     
                                                                           PXQSCONF.8     
        requiredfiles=`$UM_GREP -E '^\*C |^\*DECK' $NUPTMPC.$sect |\       PXQSCONF.9     
 tr -s "," "\012" | $UM_SED 's/^\*C //g' | $UM_SED 's/^\*DECK//g' |\       PXQSCONF.10    
 tr -s "\012" ":"`                                                         PXQSCONF.11    
                                                                           PXQSCONF.12    
        for file in `ls`                                                   PXQSCONF.13    
        do                                                                 PXQSCONF.14    
          if [[ "$requiredfiles" != *"$file"* ]]                           PXQSCONF.15    
          then                                                             PXQSCONF.16    
            rm -f $file                                                    PXQSCONF.17    
          fi                                                               PXQSCONF.18    
        done                                                               PXQSCONF.19    
                                                                           PXQSCONF.20    
          rm -f $NUPTMPC.$sect $TMPFILE1 *.log                             qsconf.967   
*IF DEF,DECALPHA,OR,DEF,HP,OR,DEF,LINUX                                    PXQSCON2.19    
          emptyfiles=`find . -size 0 -print`                               PXQSCON2.20    
          if [[ "$emptyfiles" != "" ]]                                     PXQSCON2.21    
          then                                                             PXQSCON2.22    
            echo "WARNING: Removing files of zero length"                  PXQSCON2.23    
            echo "$emptyfiles"                                             PXQSCON2.24    
            echo $emptyfiles | xargs rm -f                                 PXQSCON2.25    
          fi                                                               PXQSCON2.26    
*ENDIF                                                                     PXQSCON2.27    
        fi                                                                 qsconf.968   
                                                                           qsconf.969   
        echo "qsconf($SECONDS): ***\t      source comparison"              qsconf.970   
        for file in \                                                      qsconf.971   
          `ls | $UM_GREP -E -v '\.log$|^core$|\.o$|\.c$|\.f$|Makefile'`    PXUTILTY.223   
        do                                                                 qsconf.973   
          if [ ! -d $file ]                                                qsconf.974   
          then                                                             qsconf.975   
            lfile=$file.c                                                  qsconf.976   
            test=`fnmydiff $file $srcdir/$lfile`                           qsconf.977   
            if [ $test -eq 1 ]                                             qsconf.978   
            then                                                           qsconf.979   
              # extracted vn. is different from user vn.                   GSH6U404.855   
              # move extracted vn. to user directory                       GSH6U404.856   
              mv -f $file  $srcdir/$lfile                                  qsconf.980   
            elif [ $test -ne 0 ]                                           qsconf.981   
            then                                                           qsconf.982   
              # no user vn. of the file                                    GSH6U404.857   
              # move extracted vn. to user directory                       GSH6U404.858   
              mv -f $file  $srcdir/$lfile                                  qsconf.983   
            else                                                           qsconf.984   
              # the extracted vn. is the same as the user vn.              GSH6U404.859   
              # remove temporary extracted version                         GSH6U404.860   
              rm -f $file                                                  qsconf.985   
            fi                                                             qsconf.986   
          fi                                                               qsconf.987   
        done                                                               qsconf.988   
      fi                                                                   qsconf.989   
                                                                           qsconf.990   
    ## populate the build dir for the exec with fortran source files ##    GSH6U404.861   
      if [ -s "$NUPTMP.$sect" ]                                            qsconf.991   
      then                                                                 qsconf.992   
        cd $srcdir                                                         qsconf.993   
        # remove any pre-existing temporary build directory                GSH6U404.862   
        rm -fr $BUILDTMP                                                   qsconf.994   
        # create a new temporary build driectory and move to it            GSH6U404.863   
        mkdir -p $BUILDTMP                                                 qsconf.995   
        cd $BUILDTMP                                                       qsconf.996   
                                                                           qsconf.997   
        echo "qsconf($SECONDS): ***\t      nupdate (fortran)"              qsconf.998   
        if [ "$fsmod" = "true" ]                                           qsconf.999   
        then                                                               qsconf.1000  
          for file in `echo $fsmodfiles | $UM_SED 's/,/ /g'`               PXUTILTY.224   
          do                                                               qsconf.1002  
          # concatenate content of fortran mod file(s) with nupdate file   GSH6U404.864   
            cat $file >>$NUPTMP.$sect                                      qsconf.1003  
          done                                                             qsconf.1004  
        fi                                                                 qsconf.1005  
                                                                           GSH6U404.865   
        # extract source code into temporary build directory               GSH6U404.866   
        $NUPCOMMD -D -p $PROGLIB -i $NUPTMP.$sect \                        GRO2U405.11    
          -d `upper $sect`,$defsdc \                                       qsconf.1007  
          1> $TMPFILE1 2> $TMPFILE1                                        qsconf.1008  
                                                                           GSH6U404.867   
        if [ $? -ne 0 ]                                                    qsconf.1009  
        then                                                               qsconf.1010  
          echo                                                             qsconf.1011  
          echo $NUPCOMMD -D -p $PROGLIB -i $NUPTMP.$sect \                 GRO2U405.12    
-d `upper $sect`,$defsdc                                                   qsconf.1013  
          cat $TMPFILE1                                                    qsconf.1014  
          exit 1                                                           qsconf.1015  
        else                                                               qsconf.1016  
#       Create a list of what Fortran are used in this section             PXQSCONF.21    
#       from all those taken from the obj_xref file (which                 PXQSCONF.22    
#       have had *C added) and new decks added in mods.  Decks not in      PXQSCONF.23    
#       this list must have been extracted by nupdate from comdeck         PXQSCONF.24    
#       modifications and so are not required here.                        PXQSCONF.25    
#       These deck files are removed from the compile directory so         PXQSCONF.26    
#       they do not cause compile failures.                                PXQSCONF.27    
                                                                           PXQSCONF.28    
        requiredfiles=`$UM_GREP -E '^\*C |^\*DECK' $NUPTMP.$sect |\        PXQSCONF.29    
 tr -s "," "\012" | $UM_SED 's/^\*C //g' | $UM_SED 's/^\*DECK//g' |\       PXQSCONF.30    
 tr -s "\012" ":"`                                                         PXQSCONF.31    
                                                                           PXQSCONF.32    
        for file in `ls`                                                   PXQSCONF.33    
        do                                                                 PXQSCONF.34    
          if [[ "$requiredfiles" != *"$file"* ]]                           PXQSCONF.35    
          then                                                             PXQSCONF.36    
            rm -f $file                                                    PXQSCONF.37    
          fi                                                               PXQSCONF.38    
        done                                                               PXQSCONF.39    
                                                                           PXQSCONF.40    
          rm -f $NUPTMP.$sect $TMPFILE1 *.log                              qsconf.1017  
*IF DEF,DECALPHA,OR,DEF,HP,OR,DEF,LINUX                                    PXQSCON2.28    
          emptyfiles=`find . -size 0 -print`                               PXQSCON2.29    
          if [[ "$emptyfiles" != "" ]]                                     PXQSCON2.30    
          then                                                             PXQSCON2.31    
            echo "WARNING: Removing files of zero length"                  PXQSCON2.32    
            echo "$emptyfiles"                                             PXQSCON2.33    
            echo $emptyfiles | xargs rm -f                                 PXQSCON2.34    
          fi                                                               PXQSCON2.35    
*ENDIF                                                                     PXQSCON2.36    
        fi                                                                 qsconf.1018  
                                                                           qsconf.1019  
        echo "qsconf($SECONDS): ***\t      source comparison"              qsconf.1020  
        for file in \                                                      qsconf.1021  
          `ls | $UM_GREP -E -v '\.log$|^core$|\.o$|\.c$|\.f$|Makefile'`    PXUTILTY.225   
        do                                                                 qsconf.1023  
          if [ ! -d $file ]                                                qsconf.1024  
          then                                                             qsconf.1025  
            lfile=$file.f                                                  qsconf.1026  
            test=`fnmydiff $file $srcdir/$lfile`                           qsconf.1027  
            if [ $test -eq 1 ]                                             qsconf.1028  
            then                                                           qsconf.1029  
              # extracted vn. is different from user vn.                   GSH6U404.868   
              # move extracted vn. to user directory                       GSH6U404.869   
              mv -f $file $srcdir/$lfile                                   qsconf.1030  
            elif [ $test -ne 0 ]                                           qsconf.1031  
            then                                                           qsconf.1032  
              # no user vn. of the file                                    GSH6U404.870   
              # move extracted vn. to user directory                       GSH6U404.871   
              mv -f $file $srcdir/$lfile                                   qsconf.1033  
            else                                                           qsconf.1034  
              # the extracted vn. is the same as the user vn.              GSH6U404.872   
              # remove temporary extracted version                         GSH6U404.873   
              rm -f $file                                                  qsconf.1035  
            fi                                                             qsconf.1036  
          fi                                                               qsconf.1037  
        done                                                               qsconf.1038  
      fi                                                                   qsconf.1039  
                                                                           qsconf.1040  
      cd $srcdir                                                           qsconf.1041  
                                                                           qsconf.1042  
      for file in `ls | $UM_GREP -E '\.f$|\.c$'`                           PXUTILTY.226   
      do                                                                   qsconf.1044  
        name=${file%.[cf]}   # return file name                            qsconf.1045  
        type=${file##$name.} # return file type                            qsconf.1046  
        if [ "$type" = "f" ]                                               qsconf.1047  
        then                                                               qsconf.1048  
          if [[ "$decklist" = *"$name"* ]]                                 qsconf.1049  
          then                                                             qsconf.1050  
            # deck has specific compiler options, call fnlistopt to        GSH6U404.874   
            # obtain them                                                  GSH6U404.875   
            echo \                                                         qsconf.1054  
"qsconf($SECONDS): ***\t        Getting new comp opts for $name"           qsconf.1055  
            line=`fnlistopt "$COMPVARS" "$name" FCOM`                      qsconf.1056  
            fort=${line%:::*}                                              qsconf.1057  
            opts=${line#$fort:::}                                          qsconf.1058  
                                                                           GSH6U404.876   
            # Set the values of thisfort (the fortran compiler) and        GSH6U404.877   
            # thisopts (the compiler options) by comparing the deck        GSH6U404.878   
            # specific values with global values                           GSH6U404.879   
                                                                           GSH6U404.880   
            if [ "$fort" != "$FORT" ]                                      qsconf.1059  
            then                                                           qsconf.1060  
              thisfort=$fort                                               qsconf.1061  
            else                                                           qsconf.1062  
              thisfort='$(FORT)'                                           qsconf.1063  
            fi                                                             qsconf.1064  
            if [ "$opts" != "$FORTOPTS" ]                                  qsconf.1065  
            then                                                           qsconf.1066  
              thisopts=$opts                                               qsconf.1067  
            else                                                           qsconf.1068  
              thisopts='$(FORTOPTS)'                                       qsconf.1069  
            fi                                                             qsconf.1070  
          else                                                             qsconf.1071  
            # the deck has no specific compiler options use global         GSH6U404.881   
            # defaults                                                     GSH6U404.882   
            thisfort='$(FORT)'                                             qsconf.1073  
            thisopts='$(FORTOPTS)'                                         qsconf.1074  
          fi                                                               qsconf.1075  
                                                                           GSH6U404.883   
          for opt in `upper $options`                                      qsconf.1076  
          do                                                               qsconf.1077  
            ob=$opt/$name.o                                                qsconf.1078  
            fop=`$COMPPARSE $BUILDHOST $FORT $opt`                         qsconf.1079  
            cat <<EOF >> $TMPMAKE2                                         qsconf.1080  
$ob: $name.$type                                                           qsconf.1081  
	$thisfort $thisopts $fop -c $name.$type                                   qsconf.1082  
	@if test -f $name.T;then echo "	mv -f $name.T $opt/.";\                   qsconf.1083  
	mv -f $name.T $opt/. ; fi                                                 qsconf.1084  
	mv -f $name.o $ob                                                         qsconf.1085  
                                                                           qsconf.1086  
EOF                                                                        qsconf.1087  
            objs="$objs $ob"                                               qsconf.1088  
          done                                                             qsconf.1089  
        else                                                               qsconf.1090  
          if [[ "$decklist" = *"$name"* ]]                                 qsconf.1091  
          then                                                             qsconf.1092  
             # deck has specific compiler options, call fnlistopt to       GSH6U404.884   
             # obtain them                                                 GSH6U404.885   
            echo \                                                         qsconf.1096  
"qsconf($SECONDS): ***\t        Getting new comp opts for $name"           qsconf.1097  
            line=`fnlistopt "$COMPVARS" "$name" CCOM`                      qsconf.1098  
            cc=${line%:::*}                                                qsconf.1099  
            opts=${line#$cc:::}                                            qsconf.1100  
                                                                           GSH6U404.886   
            # Set the values of thiscc (the C compiler) and thisopts       GSH6U404.887   
            # (the compiler options) by comparing the deck specific        GSH6U404.888   
            # values with global values                                    GSH6U404.889   
                                                                           GSH6U404.890   
            if [ "$cc" != "$CC" ]                                          qsconf.1101  
            then                                                           qsconf.1102  
              thiscc=$cc                                                   qsconf.1103  
            else                                                           qsconf.1104  
              thiscc='$(CC)'                                               qsconf.1105  
            fi                                                             qsconf.1106  
            if [ "$opts" != "$CCOPTS" ]                                    qsconf.1107  
            then                                                           qsconf.1108  
              thisopts=$opts                                               qsconf.1109  
            else                                                           qsconf.1110  
              thisopts='$(CCOPTS)'                                         qsconf.1111  
            fi                                                             qsconf.1112  
          else                                                             qsconf.1113  
            # the deck has no specific compiler options use global         GSH6U404.891   
            # defaults                                                     GSH6U404.892   
            thiscc='$(CC)'                                                 qsconf.1115  
            thisopts='$(CCOPTS)'                                           qsconf.1116  
          fi                                                               qsconf.1117  
                                                                           GSH6U404.893   
          for opt in `upper $options`                                      qsconf.1118  
          do                                                               qsconf.1119  
            ob=$opt/$name.o                                                qsconf.1120  
            fop=`$COMPPARSE $BUILDHOST $CC $opt`                           qsconf.1121  
            cat <<EOF >> $TMPMAKE2                                         qsconf.1122  
$ob: $name.$type                                                           qsconf.1123  
	$thiscc $thisopts $fop -c $name.$type                                     qsconf.1124  
	@if test -f $name.T;then echo "	mv -f $name.T $opt/.";\                   qsconf.1125  
	mv -f $name.T $opt/. ; fi                                                 qsconf.1126  
	mv -f $name.o $ob                                                         qsconf.1127  
                                                                           qsconf.1128  
EOF                                                                        qsconf.1129  
            objs="$objs $ob"                                               qsconf.1130  
          done                                                             qsconf.1131  
        fi                                                                 qsconf.1132  
      done                                                                 qsconf.1133  
                                                                           qsconf.1134  
      echo "s^@nproc@^1^g"                        >  $SEDSCRIPT2           qsconf.1135  
      echo `gen_sed_string "@objects@" "4" "$objs"`   >> $SEDSCRIPT2       GAV3U405.41    
      echo "s^@fort@^$FORT^g"                     >> $SEDSCRIPT2           qsconf.1137  
      echo "s^@fortopts@^$FORTOPTS^g"             >> $SEDSCRIPT2           qsconf.1138  
      echo "s^@cc@^$CC^g"                         >> $SEDSCRIPT2           qsconf.1139  
      echo "s^@ccopts@^$CCOPTS^g"                 >> $SEDSCRIPT2           qsconf.1140  
      echo "s^@.*@$^^g"                           >> $SEDSCRIPT2           qsconf.1141  
                                                                           qsconf.1142  
      # parse input makefile                                               qsconf.1143  
      $UM_SED -f $SEDSCRIPT2 < $MAKEFILEINBOT \                            PXUTILTY.227   
        > $OUTSRC/$sect/$buildtype/$MAKEFILE                               PXCLLMOD.123   
                                                                           qsconf.1146  
      # append actual rules for making individual decks to                 qsconf.1147  
      # makefile                                                           qsconf.1148  
      if [ -f "$TMPMAKE2" ]                                                qsconf.1149  
      then                                                                 qsconf.1150  
        cat $TMPMAKE2 >> $OUTSRC/$sect/$buildtype/$MAKEFILE                qsconf.1151  
        rm -f $TMPMAKE2                                                    qsconf.1152  
      fi                                                                   qsconf.1153  
                                                                           qsconf.1154  
      rm -f $SEDSCRIPT2                                                    qsconf.1155  
      makelistbt="$makelistbt $buildtype"                                  qsconf.1156  
    done                                                                   qsconf.1157  
                                                                           qsconf.1158  
    rm -f $TMPXREF.$sect                                                   qsconf.1159  
    makelistsn="$makelistsn $sect"                                         qsconf.1160  
                                                                           qsconf.1161  
## Create mid level Makefile                                               qsconf.1162  
    if [ ! -z "$buildtype" ]                                               qsconf.1163  
    then                                                                   qsconf.1164  
      $UM_SED "s^@buildtype_list@^$makelistbt^g" < $MAKEFILEINMID \        PXUTILTY.228   
        > $OUTSRC/$sect/$MAKEFILE                                          qsconf.1166  
    fi                                                                     qsconf.1167  
                                                                           qsconf.1168  
  done                                                                     qsconf.1169  
  if [ "$INFOLEVEL" -lt 1 ]                                                qsconf.1170  
  then                                                                     qsconf.1171  
    echo \                                                                 qsconf.1172  
"qsconf($SECONDS): ***\tFinished looping over source sections\n"           qsconf.1173  
  fi                                                                       qsconf.1174  
                                                                           qsconf.1175  
## Create top object level Makefile                                        qsconf.1176  
  if [ "$buildall" = "true" ]                                              qsconf.1177  
  then                                                                     qsconf.1178  
    $UM_SED "s^@section_list@^$makelistsn^g" < $MAKEFILEINTOP > \          PXUTILTY.229   
      $OUTSRC/$MAKEFILE                                                    qsconf.1180  
  fi                                                                       qsconf.1181  
                                                                           qsconf.1182  
## Create top level Makefile, if this was complete build.                  qsconf.1183  
  if [ "$buildall" = "true" ]                                              qsconf.1184  
  then                                                                     qsconf.1185  
    cp $MAKEFILEIN $TOP/Makefile                                           qsconf.1186  
  fi                                                                       qsconf.1187  
fi                                                                         qsconf.1188  
                                                                           qsconf.1189  
if [ "$INFOLEVEL" -lt 1 ]                                                  qsconf.1190  
then                                                                       qsconf.1191  
  echo "qsconf($SECONDS): ***\tFinished configuration\n"                   qsconf.1192  
fi                                                                         qsconf.1193  
