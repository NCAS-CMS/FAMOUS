*IF DEF,HP                                                                 checkdbd.2     
#!/bin/ksh                                                                 checkdbd.3     
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.164   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.165   
#                                                                      #   COPYRIGHT.166   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.167   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.168   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.169   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.170   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.171   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.172   
#                                                                          checkdbd.17    
#  Script: checkdbd                                                        checkdbd.18    
#                                                                          checkdbd.19    
#  Description: Lists the DEFs set by each deck in a given section and     checkdbd.20    
#               the DEFs for that section as given in the obj_xref file    checkdbd.21    
#               Lists the DEFs set by each deck that appear in             GRO1U405.8     
#               *IF DEF ORs.                                               GRO1U405.9     
#                                                                          checkdbd.22    
#  Interface and arguments: checkdbd [-d] [-s] <obj_xref section_name>     checkdbd.23    
#                                                                          checkdbd.24    
#  Author: Shona Robertson                                                 checkdbd.25    
#  Owner:                                                                  GSHBU404.20    
#                                                                          checkdbd.27    
#  History:                                                                checkdbd.28    
#  4.3	16.01.97	Original Code. (S Robertson)                               GSHBU404.21    
#  4.4  22.10.97        Removed unecessary pipes.  Adapted to parse the    GSHBU404.22    
#                       new format obj_xref file (introduced at vn4.4)     GSHBU404.23    
#                       (S Robertson)                                      GSHBU404.24    
#  4.5  06.10.98        Added code to determine which DEFS appear in       GRO1U405.10    
#                       *IF DEF statements with ORs only. Changed output   GRO1U405.11    
#                       file to be $$checkdbd_out. (R Hatcher)             GRO1U405.12    
#                                                                          checkdbd.30    
#  -option1: d see comments in README section below                        checkdbd.31    
#  -option2: s see comments in README section below                        checkdbd.32    
#                                                                          checkdbd.33    
#  Script called by:                                                       checkdbd.34    
#  Script calls: getdefsu|getdefsnu, processcdk, getcdks & checksetup      checkdbd.35    
#                getordefs                                                 GRO1U405.13    
#                                                                          checkdbd.36    
#################################################                          checkdbd.37    
# README                                                                   checkdbd.38    
#################################################                          checkdbd.39    
# Note: this script should be RUN ON hc0300 where the Unified Model        checkdbd.40    
#	code is located i.e. if a user is not attached directly to               checkdbd.41    
#	hc0300 then they should RLOGIN to avoid unacceptable network             checkdbd.42    
#       traffic.                                                           checkdbd.43    
#                                                                          checkdbd.44    
# Introduction.                                                            checkdbd.45    
#	                                                                         checkdbd.46    
# The script checkdbd is run over the obj_xref file to determine           checkdbd.47    
# the defs set for a given section on a deck by deck basis.  Features      checkdbd.48    
# of the obj_xref file upon which the script depends are given below,      checkdbd.49    
# further highlighted by extracts from the file itself.                    checkdbd.50    
#                                                                          checkdbd.51    
#                                                                          checkdbd.52    
# Script Dependent Features.                                               checkdbd.53    
#                                                                          checkdbd.54    
# Note:	if comments are included in the obj_xref it is assumed that they   checkdbd.55    
#        follow a # symbol and appear after real obj_xref file content.    checkdbd.56    
#	That is, at the end of a line and not interspersed throughout it.        checkdbd.57    
#                                                                          checkdbd.58    
# DEFS for a section are listed under three headings in obj_xref file,     checkdbd.59    
# DEFS, DEFSOR and DEFSX.  An identifier or DEF_SWITCH is used instead     checkdbd.60    
# of the real DEF name (e.g. G5:RECON) and a mapping between the two is    checkdbd.61    
# set up by the script.  The script almalgates all the DEFS under these    checkdbd.62    
# headings for processing.                                                 checkdbd.63    
#		                                                                        checkdbd.64    
#                                                                          checkdbd.65    
#	DEF_SWITCHES           G3:GLOBAL    G4:FAST     G5:RECON                 checkdbd.66    
#                                                                          checkdbd.67    
#	C94_1A TITLE          Miscellaneous service routines                     checkdbd.68    
#	C94_1A DEFS           G0 +C94_1A                                         checkdbd.69    
#       C94_1A DEFSOR                                                      checkdbd.70    
#	C94_1A DEFSX          G5 Gh                                              checkdbd.71    
#                                                                          checkdbd.72    
#                                                                          checkdbd.73    
# Similary DECKS for a section are listed under DECKS and DECKC, where     checkdbd.74    
# DECKC is a C code deck.  The script almalgates the DECKS listed under    checkdbd.75    
# both headings for a given section.                                       checkdbd.76    
#                                                                          checkdbd.77    
#                                                                          checkdbd.78    
#	C95_2A TITLE          Portable alternatives - written in C               checkdbd.79    
#	C95_2A DEFS           G0 G1 Gn P1 P2 P4 P5 P6 +C95_2A                    checkdbd.80    
#	C95_2A DEFSX                                                             checkdbd.81    
#	C95_2A DECKC          PORTIO2A                                           checkdbd.82    
#	C95_2A CODE  C                                                           checkdbd.83    
#	C95_2A BUILD CrPVPf77 A1P1P2_s                                           checkdbd.84    
#		                                                                        checkdbd.85    
#                                                                          checkdbd.86    
#                                                                          checkdbd.87    
# Output.                                                                  checkdbd.88    
#                                                                          checkdbd.89    
# Note:	Within a DECK a DEF can be set or not set indicated by a '-DEF'    checkdbd.90    
#	before the name (e.g. *IF -DEF MPP if DEF MPP not set).  BY              checkdbd.91    
#	DEFAULT the script makes no ditinction between -DEF and DEF.  It         checkdbd.92    
#	simply ouputs a single reference to the DEF.                             checkdbd.93    
#                                                                          checkdbd.94    
#	The option [-d] can be used to switch this feature off and               checkdbd.95    
#	therefore, distinguish between -DEF and DEF.                             checkdbd.96    
#                                                                          checkdbd.97    
#	USAGE:	checkobj -d <obj_xref section_name>                               checkdbd.98    
#                                                                          checkdbd.99    
#                                                                          checkdbd.100   
# Note:	Finally as regards what is included in the output, references to   checkdbd.101   
#	DEFS in the same section but of a different version are, BY              checkdbd.102   
#	DEFAULT, ignored.  So for section A01_1A DEFS within its DECKS           checkdbd.103   
#	which reference A01_2A, A01_3A etc do not appear in the output.          checkdbd.104   
#                                                                          checkdbd.105   
#	The option [-s] can be used to switch this feature off and               checkdbd.106   
#	therefore, include all DEFS which may be set by DECKS.                   checkdbd.107   
#                                                                          checkdbd.108   
#	USAGE: 	checkdbd -s <obj_xref section_name>                              checkdbd.109   
#                                                                          checkdbd.110   
#                                                                          checkdbd.111   
# The format of the output from checkdbd <obj_xref section_name> is as     checkdbd.112   
# follows:                                                                 checkdbd.113   
#                                                                          checkdbd.114   
# The section name is given as a header.                                   checkdbd.115   
#                                                                          checkdbd.116   
#                                                                          checkdbd.117   
#                -- SECTION IS A01_1A --                                   checkdbd.118   
#		                                                                        checkdbd.119   
#                                                                          checkdbd.120   
#                                                                          checkdbd.121   
#################################################                          checkdbd.122   
                                                                           checkdbd.123   
# process the options to the script                                        checkdbd.124   
while getopts sd arguments                                                 checkdbd.125   
do                                                                         checkdbd.126   
   case $arguments in                                                      checkdbd.127   
    d) 	DEFDIFF=on;;                                                       checkdbd.128   
    s) 	SAMESECT=on;;                                                      checkdbd.129   
   \?) 	print "$OPTARG is not a vaild option"                              checkdbd.130   
	print "$USAGE"                                                            checkdbd.131   
	exit2;;                                                                   checkdbd.132   
   esac                                                                    checkdbd.133   
done                                                                       checkdbd.134   
                                                                           checkdbd.135   
echo $OPTIND                                                               checkdbd.136   
if (( $OPTIND > 1 ))                                                       checkdbd.137   
then                                                                       checkdbd.138   
  (( numswitches = OPTIND - 1))                                            checkdbd.139   
  shift numswitches                                                        checkdbd.140   
fi                                                                         checkdbd.141   
  if test $# -eq 2                                                         checkdbd.142   
  then                                                                     checkdbd.143   
    OBJXREF=$1                                                             GSHBU404.25    
    SECTION=$2                                                             checkdbd.145   
  else                                                                     checkdbd.146   
    NAME=$0                                                                checkdbd.147   
    echo "$NAME: Error "                                                   checkdbd.148   
    echo "USAGE: $NAME [-d] [-s] <obj_xref section_name>"                  checkdbd.149   
    exit 1                                                                 checkdbd.150   
  fi                                                                       checkdbd.151   
                                                                           checkdbd.152   
# set the path for DECKS comprising a given version                        GSHBU404.26    
VN=4.5                                                                     GKR1U405.8     
DPATH=${DPATH:-$UMDIR/vn$VN/source/umpl}                                   GSHBU404.28    
                                                                           checkdbd.156   
# clean up before execution                                                checkdbd.157   
checksetup                                                                 checkdbd.158   
                                                                           checkdbd.159   
if (($? == 1))                                                             checkdbd.160   
then                                                                       checkdbd.161   
  exit 1                                                                   checkdbd.162   
else                                                                       checkdbd.163   
                                                                           checkdbd.164   
# process the options to the script                                        checkdbd.165   
                                                                           checkdbd.166   
DEFDIFF=${DEFDIFF:-off}                                                    checkdbd.167   
SAMESECT=${SAMESECT:-off}                                                  checkdbd.168   
                                                                           checkdbd.169   
case $DEFDIFF in                                                           checkdbd.170   
   on)  # getdefsn(on)u(nique) differentiate between -DEF and DEF          checkdbd.171   
	GETDEFS=getdefsnu;;                                                       checkdbd.172   
  off)  # getdefsu(nique)                                                  checkdbd.173   
	GETDEFS=getdefsu;;                                                        checkdbd.174   
esac                                                                       checkdbd.175   
                                                                           checkdbd.176   
# export the pathname of the version of getdefs for use in processcdk      checkdbd.177   
export GETDEFS                                                             checkdbd.178   
echo $GETDEFS                                                              checkdbd.179   
                                                                           checkdbd.180   
# Set up an equality between identifiers (DEF_SWITCHES) and associated     GSHBU404.29    
# deck name i.e. tmp_MPP = G1 and tmp_G1 = MPP                             checkdbd.191   
for switch in \                                                            GSHBU404.30    
  `$UM_GREP DEF_SWITCHES $OBJXREF | $UM_SED 's/DEF_SWITCHES *//g'`         PXUTILTY.49    
do                                                                         checkdbd.196   
  OLDIFS=$IFS                                                              GSHBU404.32    
  IFS=:                                                                    GSHBU404.33    
  set $switch                                                              GSHBU404.34    
  IFS=$OLDIFS                                                              GSHBU404.35    
  eval tmp_${2}=$1                                                         GSHBU404.36    
  eval tmp_${1}=$2                                                         GSHBU404.37    
done                                                                       checkdbd.199   
                                                                           checkdbd.200   
echo SECTION is $SECTION                                                   checkdbd.201   
                                                                           checkdbd.202   
# a list of DEF identifiers in given section is processed to retrieve      checkdbd.203   
# the actual DEF name and the output redirected to the file                checkdbd.204   
# 'tmp_sectdefs'                                                           checkdbd.205   
                                                                           checkdbd.206   
for id in `$UM_GREP -E "$SECTION DEFS" $OBJXREF |\                         PXUTILTY.50    
  $UM_SED -e "s/$SECTION DEFSM//g" -e "s/$SECTION DEFS//g" \               PXUTILTY.51    
      -e 's/#.*//g'| tr -s "\040" "\012" |\                                GKR4U405.1     
  $UM_GREP -E -v '^X|^OR' | sort -u`                                       PXUTILTY.52    
do                                                                         checkdbd.210   
	eval echo \$tmp_$id                                                       checkdbd.211   
done > tmp_sectdefs                                                        checkdbd.212   
                                                                           checkdbd.213   
                                                                           checkdbd.214   
echo -- SECTION IS $SECTION -- >> $$checkdbd_out                           GRO1U405.14    
                                                                           checkdbd.216   
# similarly the file tmp_sectdefs an actual DEF name with a +              checkdbd.217   
# preceding it.  This is removed to allow comparison.                      checkdbd.218   
                                                                           checkdbd.219   
$UM_SED 's/+//g' tmp_sectdefs | sort | uniq > sectdefs                     PXUTILTY.53    
                                                                           checkdbd.221   
cat sectdefs >> $$checkdbd_out                                             GRO1U405.15    
                                                                           checkdbd.223   
# process each deck in a given section in turn                             checkdbd.224   
 	                                                                         checkdbd.225   
touch notordefs                                                            GRO1U405.16    
touch allordefs                                                            GRO1U405.17    
                                                                           GRO1U405.18    
for deck in `cat $OBJXREF | $UM_GREP -E "$SECTION DECK" |\                 PXUTILTY.54    
	$UM_AWK '{print $3}' | tr -s "," "\012" `                                 PXUTILTY.55    
do                                                                         checkdbd.228   
   echo $deck                                                              checkdbd.229   
   # tidy up                                                               checkdbd.230   
   rm -f cdkdefs                                                           checkdbd.231   
   touch cdkdefs                                                           checkdbd.232   
   rm -f checked                                                           checkdbd.233   
   touch checked                                                           checkdbd.234   
   rm -f tmp_cdks                                                          checkdbd.235   
   touch tmp_cdks                                                          checkdbd.236   
   rm -f tmp_deckdefs                                                      checkdbd.237   
                                                                           checkdbd.238   
   getcdks $DPATH/$deck.* > tmp_cdks                                       checkdbd.239   
   $GETDEFS $DPATH/$deck.* > tmp_deckdefs                                  checkdbd.240   
   getordefs $DPATH/$deck.dk > tmp_ordefs                                  GRO1U405.19    
                                                                           checkdbd.241   
   sort tmp_cdks | uniq > cdks                                             checkdbd.242   
                                                                           checkdbd.243   
   while read element                                                      checkdbd.244   
   do                                                                      checkdbd.245   
     processcdk $element                                                   checkdbd.246   
   done < cdks                                                             checkdbd.247   
                                                                           checkdbd.248   
   sort cdkdefs | uniq >> tmp_deckdefs                                     checkdbd.249   
                                                                           checkdbd.250   
   #Determine whether all the DEFs appearing in this deck in OR            GRO1U405.20    
   #statements have so far also always appeared in an OR statement.        GRO1U405.21    
   #If no then add it to the list of DEFS (if not already) which           GRO1U405.22    
   #haven't always been in an OR statement.  If yes then do nothing        GRO1U405.23    
   #or add it to the list (if not already)                                 GRO1U405.24    
   while read rshdef                                                       GRO1U405.25    
   do                                                                      GRO1U405.26    
      if $UM_GREP $rshdef notordefs > grepfile                             PXUTILTY.56    
      then                                                                 GRO1U405.28    
         : #do nothing                                                     GRO1U405.29    
      else                                                                 GRO1U405.30    
         if $UM_GREP -E "$rshdef" allordefs > grepfile                     PXUTILTY.57    
         then                                                              GRO1U405.32    
            : #do nothing                                                  GRO1U405.33    
         else                                                              GRO1U405.34    
            echo $rshdef >> allordefs                                      GRO1U405.35    
         fi                                                                GRO1U405.36    
      fi                                                                   GRO1U405.37    
   done < tmp_ordefs                                                       GRO1U405.38    
                                                                           GRO1U405.39    
   #For each DEF not appearing in an OR statement determine whether        GRO1U405.40    
   #it is already in the list of DEFs not always in OR statements.         GRO1U405.41    
   #If yes then do nothing otherwise add it to the list and remove         GRO1U405.42    
   #it from the list (if present) indicating that it is always found       GRO1U405.43    
   #in OR statements.                                                      GRO1U405.44    
   for rshdef in `head -n 1 $DPATH/$deck.dk | $UM_GREP -E '^\*IF ' |\      PXUTILTY.58    
            $UM_AWK '{print $2}' |\                                        PXUTILTY.59    
            $UM_GREP -E \                                                  PXUTILTY.60    
            '^DEF,[A-Z][0-9][0-9]_[0-9][A-Z](,.*'AND',.*)?$' |\            PXUTILTY.61    
            tr -s "," "\012" | $UM_GREP -E -v '^DEF|^OR|^AND|^\-DEF'`      PXUTILTY.62    
   do                                                                      GRO1U405.49    
      if $UM_GREP -E "$rshdef" notordefs > grepfile                        PXUTILTY.63    
      then                                                                 GRO1U405.51    
         : #do nothing                                                     GRO1U405.52    
      else                                                                 GRO1U405.53    
         echo $rshdef >> notordefs                                         GRO1U405.54    
         if $UM_GREP "$rshdef" allordefs > grepfile                        PXUTILTY.64    
         then                                                              GRO1U405.56    
            $UM_GREP -E -v "$rshdef" allordefs > allordefs                 PXUTILTY.65    
         fi                                                                GRO1U405.58    
      fi                                                                   GRO1U405.59    
   done                                                                    GRO1U405.60    
                                                                           GRO1U405.61    
                                                                           GRO1U405.62    
   # the file tmp_deckdefs has blank lines that must be removed to         checkdbd.251   
   # allow sort | uniq.  the regular expression '^ *$' means any line      checkdbd.252   
   # with zero or more spaces anchored at the start of a line by ^         checkdbd.253   
                                                                           checkdbd.254   
   # redirect results to output file                                       checkdbd.255   
                                                                           checkdbd.256   
   echo >> $$checkdbd_out                                                  GRO1U405.63    
   echo DECK is $deck >> $$checkdbd_out                                    GRO1U405.64    
   case $SAMESECT in                                                       checkdbd.259   
	off) # output all section information                                     checkdbd.260   
             sort tmp_deckdefs | uniq >> $$checkdbd_out;;                  GRO1U405.65    
	                                                                          checkdbd.262   
       	on) # ignore DEFS which reference the same section                 checkdbd.263   
            sectid=`echo $SECTION | cut -d _ -f1`                          GRO1U405.66    
   	    for def in `cat tmp_deckdefs | $UM_GREP -E -v "$sectid" |\         PXUTILTY.66    
		sort -u `                                                                checkdbd.266   
   	    do                                                                 checkdbd.267   
                echo $def >> $$checkdbd_out                                GRO1U405.67    
   	    done;;                                                             checkdbd.269   
   esac                                                                    checkdbd.270   
                                                                           checkdbd.271   
   # List of DEFs which only appear in ORs                                 GRO1U405.68    
   echo >> $$checkdbd_out                                                  GRO1U405.69    
   echo DEFS in this DECK appearing in statement containing ORs \          GRO1U405.70    
            only >> $$checkdbd_out                                         GRO1U405.71    
   sort tmp_ordefs >> $$checkdbd_out                                       GRO1U405.72    
                                                                           GRO1U405.73    
done                                                                       checkdbd.272   
                                                                           GRO1U405.74    
   # List of DEFs in this section which always appear in ORs               GRO1U405.75    
   echo >> $$checkdbd_out                                                  GRO1U405.76    
   echo DEFS which always appear in OR statement >> $$checkdbd_out         GRO1U405.77    
   sort allordefs >> $$checkdbd_out                                        GRO1U405.78    
                                                                           GRO1U405.79    
fi                                                                         checkdbd.273   
# clean up after execution                                                 checkdbd.274   
rm -f sectdefs                                                             checkdbd.275   
rm -f tmp_sectdefs                                                         checkdbd.276   
rm -f tmp_cdks                                                             checkdbd.277   
rm -f tmp_deckdefs                                                         checkdbd.278   
rm -f tmp_ordefs                                                           GRO1U405.80    
rm -f cdks                                                                 checkdbd.279   
rm -f checked                                                              checkdbd.280   
rm -f cdkdefs                                                              checkdbd.281   
rm -f allordefs                                                            GRO1U405.81    
rm -f notordefs                                                            GRO1U405.82    
rm -f grepfile                                                             GRO1U405.83    
echo Output in $$checkdbd_out                                              GRO1U405.84    
                                                                           checkdbd.282   
                                                                           checkdbd.284   
*ENDIF                                                                     checkdbd.285   
