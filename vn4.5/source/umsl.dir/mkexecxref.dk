#!/bin/ksh                                                                 mkexecxref.2     
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.616   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.617   
#                                                                      #   COPYRIGHT.618   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.619   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.620   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.621   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.622   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.623   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.624   
#                                                                          mkexecxref.15    
#  Script: mkexecxref                                                      mkexecxref.16    
#                                                                          mkexecxref.17    
#  Synopsis:                                                               mkexecxref.18    
#    Parse input execxref file to produce machine dependent                mkexecxref.19    
#    execxref file.                                                        mkexecxref.20    
#  Interface and arguments:                                                mkexecxref.21    
#     Optional: mkexecxref <ifile> <ofile> <buildhost>                     mkexecxref.22    
#     If 3 args are given then they are used as above.                     mkexecxref.23    
#     If 0 args are given then the environment variables                   mkexecxref.24    
#     XREFIN, XREF and BUILDHOST are used.                                 mkexecxref.25    
#     If any other number of args are given the script                     mkexecxref.26    
#     will abort, returning error code 1.                                  mkexecxref.27    
#                                                                          mkexecxref.28    
#  Author:   Andy Brady                                                    mkexecxref.29    
#  Reviewer: Karen Rogers                                                  mkexecxref.30    
#  Owner:    UM development Team                                           mkexecxref.31    
#                                                                          mkexecxref.32    
#  History:                                                                mkexecxref.33    
#  vn4.4        14.11.97        Original Code. (A Brady)                   mkexecxref.34    
#  vn4.5        12.06.98        Added functionality for MACHINE=OTHER.     GAV1U405.103   
#                               Stop some small execs being added to       GAV1U405.104   
#                               exec_xref for workstations.                GAV1U405.105   
#                               (A Van der Wal)                            GAV1U405.106   
#  vn4.5        14.07.98        Moved functions to a separate file         GAV3U405.23    
#                               and autoloaded them. (A Van der Wal)       GAV3U405.24    
#                                                                          mkexecxref.35    
#  Script called by: unpackmodel                                           mkexecxref.36    
#  Script calls: None                                                      mkexecxref.37    
#                                                                          mkexecxref.38    
#  argument1:                                                              mkexecxref.39    
#                                                                          mkexecxref.40    
#  input :                                                                 mkexecxref.41    
#                                                                          mkexecxref.42    
#  output :                                                                mkexecxref.43    
#                                                                          mkexecxref.44    
#  Variables that must be imported:                                        GAV1U405.107   
#    PROGDEFS     list of machine specific DEFS taken from setglobalvars   GAV1U405.108   
#                                                                          mkexecxref.46    
#  Variables that can be imported:                                         mkexecxref.47    
#    BUILDHOST    identifies the system the UM is being built upon         mkexecxref.48    
#                 e.g. T3E_f90 machine and compiler. [no default]          mkexecxref.49    
#    XREF         pathname of the xref file created for the platform       mkexecxref.50    
#                 the UM is being installed upon.                          mkexecxref.51    
#                 [$UMDIR/vn$VN/source/exec_xref]                          mkexecxref.52    
#    XREFIN       pathname of the input xref file which is processed.      mkexecxref.53    
#                 [$UMDIR/vn$VN/source/exec_xref_base]                     mkexecxref.54    
#    XREFMID      temporary file to hold intermediate version of the       mkexecxref.55    
#                 xref file. [$TMPDIR/exec_xref.mid.$$]                    mkexecxref.56    
#    SEDSCRIPT    temporary file. [$TMPDIR/sedscript.$$]                   mkexecxref.57    
#    TMPDIR       directory in which temporary files are created [/tmp]    mkexecxref.58    
#    UMDIR	  pathname for the UM files and dirs. [no default]              mkexecxref.59    
#    VN		  a given version of the UM. [no default]                         mkexecxref.60    
#                                                                          mkexecxref.61    
#  Variables that are exported: None                                       mkexecxref.62    
#                                                                          mkexecxref.63    
#  Local variables: Undefined                                              mkexecxref.64    
#                                                                          mkexecxref.65    
#  Restrictions and limitations:                                           mkexecxref.66    
#    1) Currently there must be only one "exec DEFS @host@" line           mkexecxref.67    
#       for each executable.                                               mkexecxref.68    
#    2) MACHINE DEFS that are <Y:N> are parsed as "Y" because              mkexecxref.69    
#       currently only one version of each script is built per             mkexecxref.70    
#       configuration.                                                     mkexecxref.71    
#                                                                          mkexecxref.72    
#  Description:                                                            mkexecxref.73    
#    mkexecxref takes an input, machine independent, exec_xref             mkexecxref.74    
#    file and generates a machine dependent version.                       mkexecxref.75    
#    There are two important parts in the inputs file that are             mkexecxref.76    
#    used, the "^MACHINE" line and the "^script DEFS @host" line.          mkexecxref.77    
#    The ^MACHINE line contains a list of machine depdendent DEFS          mkexecxref.78    
#    for each supported machine type and a tag "<y>" or "<n>"              mkexecxref.79    
#    that means "yes this def should be used" or "no this def              mkexecxref.80    
#    should not be used". If the relevent def appears in the               mkexecxref.81    
#    @host@ line it is parsed accordingly.                                 mkexecxref.82    
#----------------------------------------------------------------          mkexecxref.83    
                                                                           mkexecxref.84    
TMPDIR=${TMPDIR:-/tmp}                                                     mkexecxref.85    
#                                                                          mkexecxref.86    
# If this script has 3 arguments then $1 is the input xref file,           mkexecxref.87    
# $2 is the output xref file and #3 is the BUILDHOST. If there             mkexecxref.88    
# are no arguments, then                                                   mkexecxref.89    
# the environment variables are used. If there are no environment          mkexecxref.90    
# variables then the defaults are used.                                    mkexecxref.91    
if test $# -eq 3                                                           mkexecxref.92    
then                                                                       mkexecxref.93    
  XREFIN=$1                                                                mkexecxref.94    
  XREF=$2                                                                  mkexecxref.95    
  BUILDHOST=$3                                                             mkexecxref.96    
else                                                                       mkexecxref.97    
  if [ -z "$UMDIR" ] || [ -z "$VN" ]                                       mkexecxref.98    
  then                                                                     mkexecxref.99    
    echo "ERROR: UMDIR or VN not defined"                                  mkexecxref.100   
    exit 1                                                                 mkexecxref.101   
  fi                                                                       mkexecxref.102   
  XREF=${XREF:-$UMDIR/vn$VN/source/exec_xref}                              mkexecxref.103   
  XREFIN=${XREFIN:-$UMDIR/vn$VN/source/exec_xref_base}                     mkexecxref.104   
  BUILDHOST=${BUILDHOST:-T3E_f90}                                          mkexecxref.105   
fi                                                                         mkexecxref.106   
#                                                                          mkexecxref.107   
# The input file cannot be found.                                          mkexecxref.108   
if [ ! -f "$XREFIN" ]                                                      mkexecxref.109   
then                                                                       mkexecxref.110   
  echo "ERROR: file $XREFIN not found"                                     mkexecxref.111   
  exit 1                                                                   mkexecxref.112   
fi                                                                         mkexecxref.113   
                                                                           mkexecxref.114   
XREFMID=${XREFMID:-$TMPDIR/exec_xref.mid.$$}                               mkexecxref.115   
XREFTMP=${XREFTMP:-$TMPDIR/exec_xref.tmp}                                  GAV1U405.109   
SEDSCRIPT=${SEDSCRIPT:-$TMPDIR/sedscript.$$}                               mkexecxref.116   
                                                                           GAV3U405.25    
# Load functions                                                           GAV3U405.26    
                                                                           GAV3U405.27    
autoload findstr                                                           GAV3U405.28    
                                                                           GAV3U405.29    
                                                                           mkexecxref.117   
# parse the machine DEFS for MACHINE=OTHER into the base xref file         GAV1U405.110   
# (replacing @??@ markers). Values taken from setglobalvars                GAV1U405.111   
                                                                           GAV1U405.112   
c_low=`findstr C_LOW "$PROGDEFS"`                                          GAV1U405.113   
c_low_u=`findstr C_LOW_U "$PROGDEFS"`                                      GAV1U405.114   
frl8=`findstr FRL8 "$PROGDEFS"`                                            GAV1U405.115   
cri_open=`findstr CRI_OPEN "$PROGDEFS"`                                    GAV1U405.116   
cray=`findstr CRAY "$PROGDEFS"`                                            GAV1U405.117   
mpp=`findstr MPP "$PROGDEFS"`                                              GAV1U405.118   
t3e=`findstr T3E "$PROGDEFS"`                                              GAV1U405.119   
vectlib=`findstr VECTLIB "$PROGDEFS"`                                      PXXREF.25    
fujitsu=`findstr FUJITSU "$PROGDEFS"`                                      PXXREF.26    
sgi=`findstr SGI "$PROGDEFS"`                                              PXXREF.27    
sun=`findstr SUN "$PROGDEFS"`                                              PXXREF.28    
linux=`findstr LINUX "$PROGDEFS"`                                          PXXREF.29    
intll=`findstr INTLL "$PROGDEFS"`                                          PXXREF.30    
mppx=`findstr BLDNOMPP "$PROGDEFS"`                                        PXXREF.31    
if [ "$mppx" = "Y" -a "$mpp" = "Y" ]                                       PXXREF.32    
then                                                                       PXXREF.33    
  mpp="Y:N"                                                                PXXREF.34    
fi                                                                         PXXREF.35    
                                                                           GAV1U405.120   
$UM_SED -e "s/@c_low@/$c_low/g" -e "s/@c_low_u@/$c_low_u/g" \              PXUTILTY.142   
    -e "s/@frl8@/$frl8/g" -e "s/@cri_open@/$cri_open/g" \                  GAV1U405.122   
    -e "s/@cray@/$cray/g" -e "s/@mpp@/$mpp/g" \                            GAV1U405.123   
    -e "s/@t3e@/$t3e/g" -e "s/@vectlib@/$vectlib/g" \                      PXXREF.36    
    -e "s/@fujitsu@/$fujitsu/g" -e "s/@sgi@/$sgi/g" \                      PXXREF.37    
    -e "s/@sun@/$sun/g" -e "s/@linux@/$linux/g" \                          PXXREF.38    
    -e "s/@intll@/$intll/g" -e "s/@buildhost@/$BUILDHOST/g" \              PXXREF.39    
    $XREFIN  > $XREFMID                                                    PXXREF.40    
                                                                           GAV1U405.125   
# These are the machine specific DEFS selection                            mkexecxref.118   
mccomb=`$UM_AWK "/^MACHINE .*DEFS .*<*>/"'{for (i=3; i<=NF; i++)           PXXREF.41    
                                      print $i}' $XREFMID`                 GAV1U405.126   
echo mccomb=$mccomb                                                        mkexecxref.121   
                                                                           mkexecxref.122   
#                                                                          mkexecxref.123   
# Main                                                                     mkexecxref.124   
#                                                                          mkexecxref.125   
                                                                           mkexecxref.126   
# remove any existing file(s) containing sed commands                      mkexecxref.127   
rm -f $SEDSCRIPT*                                                          mkexecxref.128   
                                                                           mkexecxref.129   
OLDIFS=$IFS                                                                PXMKEXEC.1     
for section in `$UM_AWK /TITLE/'{print $1}' $XREFMID | sort -u`            PXUTILTY.143   
do                                                                         mkexecxref.131   
  IFS=$OLDIFS                                                              PXMKEXEC.2     
  for defsm in \                                                           PXMKEXEC.3     
    `$UM_AWK "/$section .*DEFS .*@host@/"'{for (i=4; i<=NF; i++)           PXMKEXEC.4     
     print $i }' $XREFMID`                                                 PXMKEXEC.5     
  do                                                                       PXMKEXEC.6     
                                                                           mkexecxref.134   
  # Have to use "," as the field seperater because                         mkexecxref.135   
  # the machine dependent defs on the host line are                        mkexecxref.136   
  # "," sperated.                                                          mkexecxref.137   
  IFS=","                                                                  mkexecxref.139   
                                                                           mkexecxref.140   
  # reset the accumulating strings for each loop over sections             mkexecxref.141   
  unset usedefs alldefs                                                    mkexecxref.142   
                                                                           mkexecxref.143   
  # Loop over machine dependent defs in @host@ line checking               mkexecxref.144   
  # them against the "MACHINE" entries for this BUILDHOST                  mkexecxref.145   
  for def in $defsm                                                        mkexecxref.146   
  do                                                                       mkexecxref.147   
    alldefs="$alldefs$def,"                                                mkexecxref.148   
    if [[ "$mccomb" = *"$def<"[yY]":"[nN]">"* ]]                           mkexecxref.149   
    then                                                                   mkexecxref.150   
      usedefs="$usedefs $def"                                              mkexecxref.151   
    elif [[ "$mccomb" = *"$def<"[yY]">"*  ]]                               mkexecxref.152   
    then                                                                   mkexecxref.153   
      usedefs="$usedefs$def,"                                              mkexecxref.154   
    fi                                                                     mkexecxref.155   
  done                                                                     mkexecxref.156   
                                                                           mkexecxref.157   
  alldefs=${alldefs%,} # Remove trailing ","                               mkexecxref.158   
  usedefs=${usedefs%,} # Remove trailing ","                               mkexecxref.159   
                                                                           mkexecxref.160   
  # Some info to stdout                                                    mkexecxref.161   
  echo "\n$section:\talldefs=$alldefs" | expand -t1,16                     mkexecxref.162   
  echo   "$section:\tusedefs=$usedefs" | expand -t1,16                     mkexecxref.163   
                                                                           mkexecxref.164   
  if [ ! -z "$usedefs" ]                                                   mkexecxref.165   
  then                                                                     mkexecxref.166   
    # Generate a sed expression that will remove the "@host@ alldefs"      mkexecxref.167   
    # line and replace it with "$BUILDHOST usedefs"                        mkexecxref.168   
                                                                           PXMKEXEC.7     
    chardefs=`echo $alldefs | $UM_AWK '{print length}'`                    PXMKEXEC.8     
    tab1=1                                                                 PXMKEXEC.9     
    tab2=15                                                                PXMKEXEC.10    
    tab3=`expr 32 + $chardefs + 4 + 14`                                    PXMKEXEC.11    
    tab4=`expr $tab3 + 15`                                                 PXMKEXEC.12    
                                                                           PXMKEXEC.13    
    echo \                                                                 PXMKEXEC.14    
"s/$section\t.*DEFS .*@host@ .*${alldefs}.*$/\                             PXMKEXEC.15    
$section\tDEFS  $BUILDHOST\t$usedefs/"\                                    PXMKEXEC.16    
 | expand -t"$tab1,$tab2,$tab3,$tab4" >> $SEDSCRIPT                        PXMKEXEC.17    
  else                                                                     mkexecxref.173   
    # Generate a sed expression to delete the "@host@ alldefs" line        mkexecxref.174   
    # as there are none for this BUILDHOST                                 mkexecxref.175   
    echo \                                                                 mkexecxref.176   
"/$section .*DEFS .*@host@ .*$/d"\                                         mkexecxref.177   
 >> $SEDSCRIPT                                                             mkexecxref.178   
  fi                                                                       mkexecxref.179   
  done                                                                     PXMKEXEC.18    
done                                                                       mkexecxref.180   
                                                                           mkexecxref.181   
# remove trailing blanks expression.                                       mkexecxref.182   
echo "s/ *$//" >> $SEDSCRIPT                                               mkexecxref.183   
                                                                           mkexecxref.184   
# Parse input xref file using the sedscript, generated earlier.            mkexecxref.185   
$UM_SED -f $SEDSCRIPT < $XREFMID > $XREFTMP                                PXUTILTY.144   
                                                                           mkexecxref.187   
# Install the final version of the xref file in the UM                     mkexecxref.188   
# source directory.                                                        mkexecxref.189   
mv $XREFTMP $XREF                                                          GAV1U405.130   
