*IF DEF,HP                                                                 checkobj.2     
#!/bin/ksh                                                                 checkobj.3     
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.200   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.201   
#                                                                      #   COPYRIGHT.202   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.203   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.204   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.205   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.206   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.207   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.208   
#                                                                          checkobj.17    
#  Script: checkobj                                                        checkobj.18    
#                                                                          checkobj.19    
#  Description: Identifies any disparities between DEFS set in the         checkobj.20    
#               obj_xref file and the DEFS that ma be set via DECKS.       checkobj.21    
#                                                                          checkobj.22    
#  Interface and arguments: checkobj <obj_xref>                            checkobj.23    
#                                                                          checkobj.24    
#  Author: Shona Robertson                                                 checkobj.25    
#  Owner: Shona Robertson                                                  checkobj.26    
#                                                                          checkobj.27    
#  History:                                                                checkobj.28    
#  4.3	16.11.96	Original Code.  (S Robertson)                              GSHBU404.69    
#  4.4  22.10.97        Removed unecessary pipes.  Adapted to parse the    GSHBU404.70    
#                       new format obj_xref file (introduced at vn4.4)     GSHBU404.71    
#                       (S Robertson)                                      GSHBU404.72    
#  4.5  22.10.98        Changed output file to $$checkobj_out.             GRO1U405.1     
#                       (R Hatcher)                                        GRO1U405.2     
#                                                                          checkobj.30    
#  -option1: d see comments in README section below                        checkobj.31    
#  -option2: s see comments in README section below                        checkobj.32    
#  argument1: OBJXREF 	the obj_xref file for the UM                        GSHBU404.73    
#                                                                          checkobj.34    
#  Script called by:                                                       checkobj.35    
#  Script calls: getdefsu|getdefsnu, processcdk, getcdks & checksetup      checkobj.36    
#                                                                          checkobj.37    
#  Variables that are exported:                                            checkobj.38    
#	GETDEFS	holds the version of getdefs script to be used                   checkobj.39    
#  Local variables:                                                        checkobj.40    
#  	DEFDIFF		                                                              checkobj.41    
#	SAMESECT                                                                 checkobj.42    
#	DPATH                                                                    checkobj.43    
#                                                                          checkobj.44    
#################################################                          checkobj.45    
# README                                                                   checkobj.46    
#################################################                          checkobj.47    
# Note: this script should be RUN ON hc0300 where the Unified Model        checkobj.48    
#	code is located i.e. if a user is not attached directly to               checkobj.49    
#	hc0300 then they should RLOGIN to avoid unacceptable network             checkobj.50    
#       traffic.                                                           checkobj.51    
#                                                                          checkobj.52    
# Introduction.                                                            checkobj.53    
#	                                                                         checkobj.54    
# The script checkobj is run over the obj_xref file to determine           checkobj.55    
# whether there are any disparities between the DEFs listed in the         checkobj.56    
# file, for a given section and those which may be set via the DECKS       checkobj.57    
# which comprise the section.  Features of the obj_xref file upon          checkobj.58    
# which the script depends are given below, further highlighted by         checkobj.59    
# extracts from the file itself.                                           checkobj.60    
#                                                                          checkobj.61    
#                                                                          checkobj.62    
# Script Dependent Features.                                               checkobj.63    
#                                                                          checkobj.64    
# Note:	if comments are included in the obj_xref it is assumed that they   checkobj.65    
#        follow a # symbol and appear after real obj_xref file content.    checkobj.66    
#	That is, at the end of a line and not interspersed throughout it.        checkobj.67    
#                                                                          checkobj.68    
# DEFS for a section are listed under three headings in obj_xref file,     checkobj.69    
# DEFS, DEFSOR and DEFSX.  An identifier or DEF_SWITCH is used instead     checkobj.70    
# of the real DEF name (e.g. G5:RECON) and a mapping between the two is    checkobj.71    
# set up by the script.  The script almalgates all the DEFS under these    checkobj.72    
# headings for processing.                                                 checkobj.73    
#		                                                                        checkobj.74    
#                                                                          checkobj.75    
#	DEF_SWITCHES           G3:GLOBAL    G4:FAST     G5:RECON                 checkobj.76    
#                                                                          checkobj.77    
#	C94_1A TITLE          Miscellaneous service routines                     checkobj.78    
#	C94_1A DEFS           G0 +C94_1A                                         checkobj.79    
#       C94_1A DEFSOR                                                      checkobj.80    
#	C94_1A DEFSX          G5 Gh                                              checkobj.81    
#                                                                          checkobj.82    
#                                                                          checkobj.83    
# Similary DECKS for a section are listed under DECKS and DECKC, where     checkobj.84    
# DECKC is a C code deck.  The script almalgates the DECKS listed under    checkobj.85    
# both headings for a given section.                                       checkobj.86    
#                                                                          checkobj.87    
#                                                                          checkobj.88    
#	C95_2A TITLE          Portable alternatives - written in C               checkobj.89    
#	C95_2A DEFS           G0 G1 Gn P1 P2 P4 P5 P6 +C95_2A                    checkobj.90    
#	C95_2A DEFSX                                                             checkobj.91    
#	C95_2A DECKC          PORTIO2A                                           checkobj.92    
#	C95_2A CODE  C                                                           checkobj.93    
#	C95_2A BUILD CrPVPf77 A1P1P2_s                                           checkobj.94    
#		                                                                        checkobj.95    
#                                                                          checkobj.96    
#                                                                          checkobj.97    
# Output.                                                                  checkobj.98    
#                                                                          checkobj.99    
# Note:	Within a DECK a DEF can be set or not set indicated by a '-DEF'    checkobj.100   
#	before the name (e.g. *IF -DEF MPP if DEF MPP not set).  BY              checkobj.101   
#	DEFAULT the script makes no ditinction between -DEF and DEF.  It         checkobj.102   
#	simply ouputs a single reference to the DEF.                             checkobj.103   
#                                                                          checkobj.104   
#	The option [-d] can be used to switch this feature off and               checkobj.105   
#	therefore, distinguish between -DEF and DEF.                             checkobj.106   
#                                                                          checkobj.107   
#	USAGE:	checkobj -d <obj_xref>                                            checkobj.108   
#                                                                          checkobj.109   
#                                                                          checkobj.110   
# Note:	Finally as regards what is included in the output, references to   checkobj.111   
#	DEFS in the same section but of a different version are, BY              checkobj.112   
#	DEFAULT, ignored.  So for section A01_1A DEFS within its DECKS           checkobj.113   
#	which reference A01_2A, A01_3A etc do not appear in the output.          checkobj.114   
#                                                                          checkobj.115   
#	The option [-s] can be used to switch this feature off and               checkobj.116   
#	therefore, include all DEFS which may be set by DECKS.                   checkobj.117   
#                                                                          checkobj.118   
#	USAGE: 	checkobj -s <obj_xref>                                           checkobj.119   
#                                                                          checkobj.120   
#                                                                          checkobj.121   
# The format of the output from checkobj <obj_xref> is as follows:         checkobj.122   
#                                                                          checkobj.123   
# The section name is given as a header.                                   checkobj.124   
#                                                                          checkobj.125   
#                                                                          checkobj.126   
#                -- SECTION IS A01_1A --                                   checkobj.127   
#                                                                          checkobj.128   
#                                                                          checkobj.129   
# DEFs which are referenced via DECKS only, are given under deckdefs.      checkobj.130   
# DEFs listed in exec_xref, for a given section, that do not appear in     checkobj.131   
# the DECKS for that section, under sectdefs.  Finally, DEFs that are      checkobj.132   
# common to both, under common.                                            checkobj.133   
#                                                                          checkobj.134   
# note: a distinction is made between DEFS referenced by -DEF defname      checkobj.135   
#      and DEF defname in the DECKS hence the inclusion of -defnames       checkobj.136   
#      in the output                                                       checkobj.137   
#                                                                          checkobj.138   
#                                                                          checkobj.139   
#                deckdefs sectdefs common                                  checkobj.140   
#                -CRAY                                                     checkobj.141   
#                        A01_1A                                            checkobj.142   
#                        ATMOS                                             checkobj.143   
#                CRAY                                                      checkobj.144   
#                        MPP                                               checkobj.145   
#################################################                          checkobj.146   
                                                                           checkobj.147   
USAGE="USAGE: checkobj [-d] [-s] <obj_xref>"                               checkobj.148   
                                                                           checkobj.149   
# process the options to the script                                        checkobj.150   
while getopts sd arguments                                                 checkobj.151   
do                                                                         checkobj.152   
   case $arguments in                                                      checkobj.153   
    d) 	DEFDIFF=on;;                                                       checkobj.154   
    s) 	SAMESECT=on;;                                                      checkobj.155   
   \?) 	print "$OPTARG is not a vaild option"                              checkobj.156   
	print "$USAGE"                                                            checkobj.157   
	exit2;;                                                                   checkobj.158   
   esac                                                                    checkobj.159   
done                                                                       checkobj.160   
                                                                           checkobj.161   
if (( $OPTIND > 1 ))                                                       checkobj.162   
then                                                                       checkobj.163   
  (( numswitches = OPTIND - 1))                                            checkobj.164   
  shift numswitches                                                        checkobj.165   
fi                                                                         checkobj.166   
                                                                           checkobj.167   
# incorrect no of arguments - terminate the calling process                checkobj.168   
if test $# -eq 1                                                           checkobj.169   
then                                                                       checkobj.170   
  OBJXREF=$1                                                               GSHBU404.74    
else                                                                       checkobj.172   
  NAME=$0                                                                  checkobj.173   
  echo "$NAME: Error "                                                     checkobj.174   
  echo $USAGE                                                              checkobj.175   
  exit 1                                                                   checkobj.176   
fi                                                                         checkobj.177   
                                                                           checkobj.178   
# set the path for DECKS comprising a given version                        GSHBU404.75    
VN=4.5                                                                     GKR1U405.11    
DPATH=${DPATH:-$UMDIR/vn$VN/source/umpl}                                   GSHBU404.77    
                                                                           checkobj.181   
# clean up before execution                                                checkobj.182   
checksetup                                                                 checkobj.183   
                                                                           checkobj.184   
if (($? == 1))                                                             checkobj.185   
then                                                                       checkobj.186   
  exit 1                                                                   checkobj.187   
else                                                                       checkobj.188   
                                                                           checkobj.189   
# process the options to the script                                        checkobj.190   
                                                                           checkobj.191   
DEFDIFF=${DEFDIFF:-off}                                                    checkobj.192   
SAMESECT=${SAMESECT:-off}                                                  checkobj.193   
                                                                           checkobj.194   
# set path to the version of the getdefs script requested                  checkobj.195   
case $DEFDIFF in                                                           checkobj.196   
   on)  # getdefsn(on)u(nique) differentiate between -DEF and DEF          checkobj.197   
	GETDEFS=getdefsnu ;;                                                      checkobj.198   
   off) # getdefsu(nique)                                                  checkobj.199   
	GETDEFS=getdefsu ;;                                                       checkobj.200   
esac                                                                       checkobj.201   
                                                                           checkobj.202   
# export the pathname of the version of getdefs for use in processcdk      checkobj.203   
export GETDEFS                                                             checkobj.204   
echo $GETDEFS                                                              checkobj.205   
                                                                           checkobj.206   
# Set up an equality between identifiers (DEF_SWITCHES) and associated     GSHBU404.78    
# deck name i.e. tmp_MPP = G1 and tmp_G1 = MPP                             checkobj.217   
for switch in \                                                            GSHBU404.79    
  `$UM_GREP DEF_SWITCHES $OBJXREF | $UM_SED 's/DEF_SWITCHES *//g'`         PXUTILTY.84    
do                                                                         checkobj.222   
  OLDIFS=$IFS                                                              GSHBU404.81    
  IFS=:                                                                    GSHBU404.82    
  set $switch                                                              GSHBU404.83    
  IFS=$OLDIFS                                                              GSHBU404.84    
  eval tmp_${2}=$1                                                         GSHBU404.85    
  eval tmp_${1}=$2                                                         GSHBU404.86    
done                                                                       checkobj.225   
                                                                           checkobj.226   
# process each section in turn note:commented sections are ignored         checkobj.227   
# e.g. #A01_ would not be processed                                        checkobj.228   
 	                                                                         checkobj.229   
for section in `$UM_GREP -E 'TITLE' $OBJXREF | $UM_GREP -E -v '^#'|\       PXUTILTY.85    
	$UM_AWK '{print $1}' | sort -u`                                           PXUTILTY.86    
do                                                                         checkobj.232   
   echo SECTION IS $section                                                checkobj.233   
                                                                           checkobj.234   
   # tidy up                                                               checkobj.235   
   rm -f cdkdefs tmp_cdks checked tmp_deckdefs                             checkobj.236   
   touch cdkdefs tmp_cdks checked tmp_deckdefs                             checkobj.237   
                                                                           checkobj.238   
   # a list of DEF_SWITCHES in given section is processed to retrieve      checkobj.239   
   # the actual DEF name and the output redirected to the file             GSHBU404.89    
   # 'tmp_sectdefs'                                                        checkobj.241   
                                                                           checkobj.242   
   for id in `$UM_GREP -E -e "$section DEFS" $OBJXREF |\                   PXUTILTY.87    
      $UM_SED -e "s/$section DEFSM//g" -e "s/$section DEFS//g" \           PXUTILTY.88    
          -e 's/#.*//g' | tr -s "\040" "\012" |\                           GSHBU404.92    
       $UM_GREP -E -v '^X|^OR' | sort -u`                                  PXUTILTY.89    
   do                                                                      checkobj.246   
        eval echo \$tmp_$id                                                checkobj.247   
   done > tmp_sectdefs                                                     checkobj.248   
                                                                           checkobj.249   
   # based on substring DECK pick up lines with DECKS and DECKC in them    checkobj.250   
   for deck in `$UM_GREP -E "$section DECK" $OBJXREF |\                    PXUTILTY.90    
	 $UM_AWK '{print $3}' | tr -s "," "\012" `                                PXUTILTY.91    
   do                                                                      checkobj.253   
	getcdks $DPATH/$deck.* >> tmp_cdks                                        checkobj.254   
	$GETDEFS $DPATH/$deck.* >> tmp_deckdefs                                   checkobj.255   
   done                                                                    checkobj.256   
                                                                           checkobj.257   
   sort -u tmp_cdks > cdks                                                 GSHBU404.95    
                                                                           checkobj.259   
   # process comdecks referenced by the decks which comprise a given       checkobj.260   
   # section                                                               checkobj.261   
   while read element                                                      checkobj.262   
   do                                                                      checkobj.263   
     processcdk $element                                                   checkobj.264   
   done < cdks                                                             checkobj.265   
                                                                           checkobj.266   
   sort -u cdkdefs >> tmp_deckdefs                                         GSHBU404.96    
                                                                           checkobj.268   
   # the file tmp_deckdefs has blank lines that must be removed to         checkobj.269   
   # allow sort -u.  The regular expression '^ *$' means any line          GSHBU404.97    
   # with zero or more spaces anchored at the start of a line by ^         checkobj.271   
                                                                           checkobj.272   
   $UM_GREP -E -v '^ *$' tmp_deckdefs | sort -u |\                         PXUTILTY.92    
   $UM_GREP -E -v "$sectid" > deckdefs                                     PXUTILTY.93    
                                                                           checkobj.275   
   # the file tmp_sectdefs contians an actual DEF name with a +            checkobj.276   
   # preceding it.  This is removed to allow comparison using comm         checkobj.277   
                                                                           checkobj.278   
   $UM_SED 's/+//g' tmp_sectdefs | sort -u > sectdefs                      PXUTILTY.94    
                                                                           checkobj.280   
    case $SAMESECT in                                                      checkobj.281   
       off) # output all section information                               checkobj.282   
	    sort -u tmp_deckdefs > deckdefs;;                                     GSHBU404.100   
	                                                                          checkobj.284   
       	on) # ignore DEFS which reference the same section                 checkobj.285   
	    sectid=`echo $section | cut -d _ -f1`                                 checkobj.286   
   	    cat tmp_deckdefs |$UM_GREP -E -v '^ *$'|\                          PXUTILTY.95    
            $UM_GREP -E -v "$sectid" |\                                    PXUTILTY.96    
	    sort -u > deckdefs ;;                                                 GSHBU404.101   
   esac                                                                    checkobj.289   
                                                                           checkobj.290   
   # carry out comparison                                                  checkobj.291   
   echo >> $$checkobj_out                                                  GRO1U405.3     
   echo -- SECTION IS $section -- >> $$checkobj_out                        GRO1U405.4     
   print "deckdefs sectdefs common" >> $$checkobj_out                      GRO1U405.5     
   comm deckdefs sectdefs >> $$checkobj_out                                GRO1U405.6     
                                                                           checkobj.296   
done                                                                       checkobj.297   
                                                                           checkobj.298   
# clean up after execution                                                 checkobj.299   
rm -f deckdefs sectdefs tmp_sectdefs tmp_cdks tmp_deckdefs \               checkobj.300   
      cdks checked cdkdefs                                                 checkobj.301   
                                                                           checkobj.302   
echo Output in $$checkobj_out                                              GRO1U405.7     
                                                                           checkobj.304   
fi                                                                         checkobj.305   
*ENDIF                                                                     checkobj.306   
