#!/bin/ksh                                                                 COPYRIGHT.773   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.774   
#           (c) BRITISH CROWN COPYRIGHT 2000, THE MET.OFFICE           #   COPYRIGHT.775   
#                                                                      #   COPYRIGHT.776   
# Use, duplication or disclosure of this code is subject to the        #   COPYRIGHT.777   
# restrictions as set forth in the contract. If no contract has been   #   COPYRIGHT.778   
# raised with this copy of the code, use, duplication or disclosure    #   COPYRIGHT.779   
# of it is strictly prohibited. Permission to do so must be obtained   #   COPYRIGHT.780   
# in writing from the Head of Numerical Modelling at The Met. Office.  #   COPYRIGHT.781   
# ----------------------------- COPYRIGHT ---------------------------- #   COPYRIGHT.782   
#LL---------------------------------------------------------------------   qsmain.2     
#LL  Script:  qsmain                                                       qsmain.3     
#LL---------------------------------------------------------------------   qsmain.4     
#LL                                                                        qsmain.5     
#LL  Purpose: Prepares source code; performs autotasking, compilation,     qsmain.6     
#LL           link-editing and executes the resulting loadmodule for       qsmain.7     
#LL           atmosphere, ocean or coupled model run.                      qsmain.8     
#LL           Initiates automatic output processing system in parallel     qsmain.9     
#LL           with the model run.                                          qsmain.10    
#LL                                                                        qsmain.11    
#LL  Author:   T Smith & N Farnon Date:           22 February 1993         qsmain.12    
#LL                                                                        qsmain.14    
#LL  Tested under OS version: UNICOS 6.1.5A                                qsmain.15    
#LL                                                                        qsmain.16    
#LL  UM   version no: 3.1         Date:  22 February 1993                  qsmain.17    
#LL                                                                        qsmain.18    
#LL   Model                                                                qsmain.19    
#LL  version  Date     Modification history:                               qsmain.20    
#LL                                                                        qsmain.21    
#LL    3.1    22/02/93 Link/compile stage extracted into a separate        qsmain.22    
#LL                    script (qsmncompile) for portability.               qsmain.23    
#LL                    Some assigns replaced with environmental            qsmain.24    
#LL                    variables, UNITxx.                                  qsmain.25    
#LL           24/02/93 Add option to compile c code mods                   qsmain.26    
#LL                    and also correct errors in script due to rewrite.   qsmain.27    
#LL           11/03/93 Added ALABCOU1 etc to list of enviroment variable   qsmain.28    
#LL                    and UNIT70-74 for acobs files (OBS_FORMAT=1 only)   qsmain.29    
#LL           12/03/93 Added UNIT07 for OUTPUT2                            qsmain.30    
#LL           25/03/93 Added UNIT02 missed out when assigns removed.       qsmain.31    
#LL    3.2    04/05/93 Changed from UPDOC to UPDATE for ocean. Removed     qsmain.32    
#LL                    references to PARAM file.Added BAS_IND file.KMR     qsmain.33    
#LL    3.2    13/07/93 Changed CFT77OPT to CFT77OPTIM in 3 variables       qsmain.34    
#LL                    and added CFT77OPTA, CFT77OPTO and SPCFT77OPT       qsmain.35    
#LL                    variables. K Rogers.                                qsmain.36    
#LL    3.2    14/09/93 Added UNIT58 for BAS_IND file. K Rogers             qsmain.37    
#LL    3.3    01/11/93 Added environment variables ATRACER, OTRACER        qsmain.38    
#LL                    and SOURCES. D L Roberts                            qsmain.39    
#LL    3.3    25/11/93 Added SAVECORE and option to save core file         qsmain.40    
#LL                    to $COREDUMP. K Rogers                              qsmain.41    
#LL    3.4    03/08/94 Replaced cuts and greps with call to sed            GTS0U304.1     
#LL                    in step 4a. (Tracey Smith)                          GTS0U304.2     
#LL    3.4    13/09/94 Change to 10 obs files (unifying ACOBS/OCOBS)       GSB1U304.1     
#LL                    and add CX files for VAR      Stuart Bell           GSB1U304.2     
#LL    3.4    05/09/94 Added environment variables USRANCIL,USRMULTI,      GRB0U304.1     
#LL                    OUSRANCL,OUSRMULT,MURKFILE.          RTHBarnes      GRB0U304.2     
#LL    3.4    09/08/94 Print out which CPU was in use when a corefile      GKR0U304.1     
#LL                    was created.                                        GKR0U304.2     
#LL                                                                        qsmain.42    
#LL    3.4    18/1/95 Sets up parallel environment - only for MPP          GPB0U304.1     
#LL                   version of code (*IF DEF,PARALLEL). P.Burton         GPB0U304.2     
#LL    4.0    24/07/95 Put change to send message to operators to          GLW1U400.1     
#LL                    indicate whether run completed successfully         GLW1U400.2     
#LL                    for climate production/DoE runs.  Also sends        GLW1U400.3     
#LL                    error messages to log files.      LCWiles           GLW1U400.4     
#LL    3.5    26/4/95 Setup UNIT05 to point to $NAMELIST  P.Burton         GPB0U305.5     
#LL    3.5    01/05/95 Created FTXX.vars with loop exports                 GCP0U305.1     
#LL    3.5    16/05/95 UNIT01 (housekeeping), UNIT05 (Namelist) and        GCP0U305.2     
#LL                    UNIT09 (CONTCNTL) added.                            GCP0U305.3     
#LL    4.0    17/08/95 Giving NUPDATEd C code an individual name for       GNF2U400.2     
#LL                    expts run in parallel (N.Farnon)                    GNF2U400.3     
#LL    4.0    12/10/95 UNIT57 and UNIT80, spectral file names added.       GGH3U400.25    
#LL    4.1    13/03/96 Introduce Wave sub-model.  RTHBarnes.               WRB1U401.1     
#LL    4.3    17/02/96 Change to edit on namelist UNIT11                   GLW4U403.10    
#LL    4.2    12/10/96 Various changes for T3E work  L C Wiles             GEX4U402.1     
#LL    4.3    06/05/97 Remove hardware failure msgs to ops. Notify         GSM0U403.106   
#LL                    ops of failures in night queue runs. K Rogers       GSM0U403.107   
#LL    4.3    03/05/97 Add code to notify operators when run has failed    GSM0U403.108   
#LL                    due to an archive problem or operator stoprun.      GSM0U403.109   
#LL                    Notify user, via a file, of all types of failure.   GSM0U403.110   
#LL                    (S Robertson)                                       GSM0U403.111   
#LL    4.4    12/01/98 Change and simplify messages to ops. L.Wiles        GLW3U404.28    
#LL    4.4    13/01/98 Add code to tar and untar compile files             GLW1U404.134   
#LL                    at Met. Office. K Rogers                            GLW1U404.135   
#LL    4.4    08/12/97 Write to EXITSTAT if model fails in addition        GKR3U404.29    
#LL           to partial sum copy failure.  Keep copy of thist in          GKR3U404.30    
#LL           thist_keep file for when run stopped at non-mean             GKR3U404.31    
#LL           point. K Rogers.                                             GKR3U404.32    
#LL    4.4    02/12/97 Remove zero length files before make when using     GKR1U404.41    
#LL                    SKIP_SRC_EXTRACT. K Rogers                          GKR1U404.42    
#LL    4.4    22/08/97 Add code to move restart file to $OPSYSERR          GLW3U404.1     
#LL                                                                        qsmain.43    
#LL    4.4    28/08/97 Add *DEFs for portability around namelist           GLW2U404.19    
#LL                    assigns, and mpprun commands.                       GLW2U404.20    
#LL                    Ensure chmod only done in compile runs. LCW         GLW2U404.21    
#LL    4.4PUM 15.03.99 Define UM_PE_LABEL for Met. Office T3E              PXQSPREL.29    
#LL                                                      P.Burton          PXQSPREL.30    
#LL    4.4    15.12.97 Output from build step goes to a separate           gex3u405.1     
#LL                    output file and is append to main output            gex3u405.2     
#LL                    after run completion. (A. Brady)                    gex3u405.3     
#LL    4.5    24/08/98 Add changes to separate runs that compile           GKR3U405.1     
#LL                    and run on Cray MPP machines for efficiency,        GKR3U405.2     
#LL                    using STEP=2 as the default setting. K Rogers       GKR3U405.3     
#LL    4.5    24/08/98 Add comment to $THIST1 deletion. K Rogers           GKR3U405.4     
#LL    4.5    28/10/98 Added test on return code from qsmncompile.         GKR3U405.5     
#LL                    K Rogers                                            GKR3U405.6     
#LL    4.5    23/09/98 Append machine specific defs to temporary           GKR1U405.63    
#LL                    UPDEFS file. K Rogers                               GKR1U405.64    
#LL    4.5    12.05.98 Remove references to UNIT03. R.Rawlins              ARR5U405.15    
#LL    4.5    29-09-99 Changes relating to splitting of main               PXCLLMOD.1     
#LL                    makefile into makefile.compile and makefile.link    PXCLLMOD.2     
#LL                                             Luke Robinson.             PXCLLMOD.3     
#LL  Programming standard: UM Doc Paper 3, version 5 (08/12/92)            qsmain.44    
#LL                                                                        qsmain.45    
#LL  Project task: C0                                                      qsmain.46    
#LL                                                                        qsmain.47    
#LL  Logical components covered: J02                                       qsmain.48    
#LL                                                                        qsmain.49    
#LL  External documentation:                                               qsmain.50    
#LL    UM Doc Paper C0 - The top-level control system                      qsmain.51    
#LL                                                                        qsmain.52    
#L   Interface and arguments: ------------------------------------------   qsmain.53    
#L                                                                         qsmain.54    
#L   qsmain run_id                                                         qsmain.55    
#L                                                                         qsmain.56    
#L     {run_id} ::= 5 character run identifier                             qsmain.57    
#L                                                                         qsmain.58    
#L   -------------------------------------------------------------------   qsmain.59    
#L                                                                         qsmain.60    
#L   Called by: qsmaster                                                   qsmain.61    
#L   Calls    : qsserver script                                            qsmain.62    
#L              qsmncompile script                                         qsmain.63    
#L                                                                         qsmain.64    
#L   Imports:                                                              qsmain.65    
#L     SETOPT        - shell options                                       qsmain.66    
#L     TEMP          - temporary directory pathname (/tmp/...)             qsmain.67    
#L     RUNID         - model run identifier                                qsmain.68    
#L     STEP         - first step of main script to be executed (atmos)     GEX4U402.2     
#L     DEFS          - UPDATE *DEFS file pathname                          qsmain.71    
#L     CDECKS      - UPDATE *C directives file pathname                    GEX4U402.3     
#L     UPDATE        - UPDATE user mods file pathname for Fortran code     qsmain.74    
#L     UPDATEC       - UPDATE user mods file pathname for C code           qsmain.75    
#L     PROGLIB       - UPDATE program library pathname                     qsmain.76    
#L     UPDOUT       - UPDATE command line output options                   GEX4U402.4     
#L     PARAMO        - UPDATE ocean PARAMETER declarations file path       qsmain.79    
#L     UPDATEO       - UPDATE ocean user mods file pathname                qsmain.80    
#L     UPDATEW       - UPDATE wave user mods file pathname                 WRB1U401.5     
#L     PERFTRACE     - true if singletasked perftrace stats required       qsmain.95    
#L     PERFVIEWOPT   - perfview options if PERFTRACE enabled               qsmain.96    
#L     ATEXPERT      - if true and recompiling whole model adds options    GEX4U402.5     
#L                     required to get atx.raw file.                       GEX4U402.6     
#L     OBJXREF       - source/object code cross-reference file             qsmain.97    
#L     LOADMODULE    - loadmodule pathname                                 GEX4U402.7     
#L     NAMELIST      - NAMELIST input file pathname                        qsmain.114   
#L     FTXX          - FORTRAN run-time assignments cross-ref file         qsmain.115   
#L     IHIST         - interim history file pathname                       qsmain.116   
#L     XHIST         - interim history file (after model exit)             qsmain.117   
#L     THIST         - temporary history file pathname                     qsmain.118   
#L     STASHCTL      - STASH control file pathname                         qsmain.119   
#L     PPXREFU       - User PP cross-ref file                              qsmain.120   
#L     OPERATIONAL   - operational flag                                    qsmain.121   
#L     TYPE          - run type indicator                                  qsmain.122   
#L     DATAM         - directory name in which model executes              qsmain.123   
#L     AUTOMATIC_PP  - flag to activate automatic output processing        qsmain.124   
#L     OUTPUT        - printed output file pathname                        qsmain.125   
#L     OUTPUT2       - extra printed output file pathname                  qsmain.126   
#L     SERVEROUT     - qsserver output file                                qsmain.127   
#L     EXITSTAT      - controls history file post-processing in qsfinal    qsmain.128   
#L     ERRFLAG       - Error flag file                                     qsmain.129   
#L     OBS_FORMAT    - OBS format switch    1- present option pre 2.7      GSB1U304.3     
#L                   -                      2- new format 2.7 onwards      qsmain.134   
#L     NUPCOMMD      - update or nupdate                                   qsmain.137   
#L     SAVECORE      - true to save any core file produced                 qsmain.138   
#L     COREDUMP      - filename that core file is saved to (full path)     qsmain.139   
#L     QSUB_REQNAME  - global variable containing jobid                    GLW3U404.29    
#L     LOGNAME       - global variable containing userid                   GLW3U404.30    
#L     OPSTARTDIR    - directory to hold re-start details                  GLW3U404.31    
#L     OPSYSERR      - directory re-start dets after a system error        GLW3U404.32    
#L     OPARCHERR     - directory restart dets after an archive failure     GLW3U404.33    
#L     CRERRDIR      - directory for error logs etc                        GLW3U404.34    
#L     CRPRODRUN     - true if run is a CR production run                  GLW3U404.35    
#L     CRDOERUN      - true if run is a CR night_DoE queue run             GLW3U404.36    
#L                                                                         qsmain.140   
#L   Exports:                                                              qsmain.141   
#L     LOCKFILE      - Lock file indicates model executing to qsserver     qsmain.142   
#L     APSUM1,APSTMP1- partial sum dump files (period 1- atmosphere)       qsmain.143   
#L     OPSUM1,OPSTMP1- partial sum dump files (period 1- ocean)            qsmain.144   
#L     AOTRANS       - cache file for transfer of instantaneous data       qsmain.145   
#L     ASWAP,OSWAP   - atmos/ocean swapping files (coupled mode)           qsmain.146   
#L     CACHE1,CACHE2 - cache files for assimilation/physics code           qsmain.147   
#L     CACHED        - cache file for diagnostic increments of pr fields   qsmain.148   
#L     PPXREF        - PP cross-ref file (direct access master file)       qsmain.149   
#L     ASTART,OSTART - atmos/ocean start dump                              qsmain.150   
#L     OBS01-10      - obs files 1-10                                      GSB1U304.4     
#L     ATMANL        - atmosphere analysis dump                            qsmain.153   
#L     OCNANL        - ocean analysis dump                                 qsmain.154   
#L     OZONE         - ozone ancillary file                                qsmain.155   
#L     SMCSNOWD      - soil moisture/snowdepth ancillary file              qsmain.156   
#L     DSOILTMP      - deep soil temperature ancillary file                qsmain.157   
#L     SOILTYPE      - soil-type dependent fields ancillary file           qsmain.158   
#L     VEGTYPE       - vegetation-type dependent fields ancillary file     qsmain.159   
#L     SSTIN         - sea surface temperature ancillary file              qsmain.160   
#L     SICEIN        - sea ice fields ancillary file                       qsmain.161   
#L     CANOPYW       - canopy water ancillary file                         qsmain.162   
#L     CURNTIN       - surface currents ancillary file                     qsmain.163   
#L     ALABCIN       - lateral BCs into atmos LAM                          qsmain.164   
#L     OROG          - orography/height BCs                                qsmain.165   
#L     OLABCIN       - lateral BCs into ocean LAM                          qsmain.166   
#L     OCNDEPTH      - ocean depth                                         qsmain.167   
#L     WFIN          - windstress, wind-mixing energy ancillary file       qsmain.168   
#L     HFLUXIN       - solar/remaining heat flux ancillary file            qsmain.169   
#L     PMEIN         - precipitation-evaporation ancillary file            qsmain.170   
#L     ICEFIN        - rad over ice, snow+sublimation ancillary file       qsmain.171   
#L     AIRTMP        - air temperature ancillary file                      qsmain.172   
#L     SALINITY      - surface salinity ancillary file                     qsmain.173   
#L     SLABHCON      - heat convergence ancillary file (slab ocean)        qsmain.174   
#L     FLUXCORR      - heat/salt flux correction ancillary file            qsmain.175   
#L     PP0-9         - output PP files 0 to 9                              qsmain.176   
#L     ALABCOUT      - atmos lateral BCs out                               qsmain.177   
#L     WAVEOUT       - wave model forcing                                  qsmain.178   
#L     SURGEOUT      - surge model forcing                                 qsmain.179   
#L     MESOUT        - mesoscale model forcing                             qsmain.180   
#L     STRATOUT      - stratosphere model forcing                          qsmain.181   
#L     WFOUT         - windstress, WM energy output file                   qsmain.182   
#L     HFLUXOUT      - solar/remaining heat flux output file               qsmain.183   
#L     PMEOUT        - precipitation-evaporation output file               qsmain.184   
#L     ICEFOUT       - rad over ice, snow+sublimation output file          qsmain.185   
#L     MOSOUT        - Model Output Statistics (MOS) output file           qsmain.186   
#L     OLABCOUT      - ocean lateral BCs out                               qsmain.187   
#L     SSTOUT        - SSTs out of ocean model                             qsmain.188   
#L     SICEOUT       - sea ice related fields output file                  qsmain.189   
#L     CURNTOUT      - surface currents output file                        qsmain.190   
#L     UNIT02        - User stash list.                                    qsmain.191   
#L     UNIT04        - Stash control file pathname                         qsmain.193   
#L     UNIT07        - Error output for operators - operational model      qsmain.194   
#L     UNIT08        - Pipe pathname for communication with qsserver       qsmain.195   
#L     UNIT10        - Permanent history file pathname                     qsmain.196   
#L     UNIT11        - Interim history file pathname                       qsmain.197   
#L     UNIT12        - Temporary history file pathname                     qsmain.198   
#L     UNIT14        - Error flag file pathname                            qsmain.199   
#L     UNIT15        - Temporary cache file for assimilation               qsmain.200   
#L     FORTA,FORTO   - compile file (atmos/ocean)                          qsmain.201   
#L     CCODEA        - compile file for c code (atmos)                     qsmain.202   
#L     SPCODE        - filename  compile and object code (special decks)   qsmain.203   
#L     ALABCOU1      - atmos lateral BCs out file 1                        qsmain.204   
#L     ALABCOU2      - atmos lateral BCs out file 2                        qsmain.205   
#L     ALABCOU3      - atmos lateral BCs out file 3                        qsmain.206   
#L     ALABCOUT      - atmos lateral BCs out file 4                        qsmain.207   
#L     UPDINA        - UPDATE input file pathname (combined mods) atmos    qsmain.208   
#L     ATRACER       - atmos tracer file                                   qsmain.209   
#L     OTRACER       - ocean tracer file                                   qsmain.210   
#L     SOURCES       - sources file for chemical species in atmos          qsmain.211   
#L     CX01-10       - CX files 1-10 (model columns at ob pos for VAR)     GSB1U304.5     
#L     USRANCIL      - user ancillaries file                               GRB0U304.3     
#L     USRMULTI      - multi-level user ancillaries file                   GRB0U304.4     
#L     OUSRANCL      - ocean user ancillaries file                         GRB0U304.5     
#L     OUSRMULT      - ocean multi-level user ancillaries file             GRB0U304.6     
#L     MURKFILE      - file for murkiness aerosol and source term          GRB0U304.7     
#L     WINITIAL      - initial dump file for wave (unused at vn4.1)        WRB1U401.15    
#L     WSTART        - start dump file for wave                            WRB1U401.16    
#L     WRESTART      - restart dump file for wave                          WRB1U401.17    
#L     WAVANL        - analysis dump file for wave                         WRB1U401.18    
#L     WAVANCIN      - wind forcing ancillary file for wave                WRB1U401.19    
#L                                                                         qsmain.212   
#L   Local variables:                                                      qsmain.213   
#L     UPDINO        - UPDATE input file pathname (combined mods) ocean    qsmain.214   
#L     UPDINW        - UPDATE input file pathname (combined mods) wave     WRB1U401.20    
#L     UPDINC        - UPDATE input file for c code                        qsmain.215   
#L     CDECKSINA     - processed list of *C directives for atmos           qsmain.216   
#L     CDECKSOUTA    - processed list of *C directives for atmos           qsmain.217   
#L     CDECKSINO     - processed list of *C directives for ocean           qsmain.218   
#L     CDECKSOUTO    - processed list of *C directives for ocean           qsmain.219   
#L     SPUPDIN       - UPDATE input file for special decks                 qsmain.220   
#L     PIPE          - named pipe file for communication with qsserver     qsmain.221   
#L     COMPDIR       - This is temp dir where nupdate writes to            GEX4U402.8     
#L     N             - used as loop index over mean periods                qsmain.222   
#L     RCSERVER      - return code for server                              qsmain.223   
#L     RMSERVER      - message in errflag on return from qsserver.         qsmain.224   
#L     ERRTYPE       - holds the reason for failure of the run (string)    GSM0U403.112   
#L     OPSR          - logical to indicate when run has failed due to      GSM0U403.113   
#L                     an operator stoprun (set to false be default)       GSM0U403.114   
#L     ARCHERR       - logical to indicate when run has failed due to      GSM0U403.115   
#L                     an archive error (set to false by default)          GSM0U403.116   
#L     RUN_DETS      - QSUB_REQID,LOGNAME and RUNID to standardise msgs    GLW3U404.37    
#L     ARG1      - Argument passed in as $1                                PXQSMAIN.1     
#L                                                                         qsmain.225   
#L----------------------------------------------------------------------   qsmain.226   
#L Step 0 - Set up environment variables                                   qsmain.227   
#L                                                                         qsmain.228   
set -$SETOPT                                                               qsmain.229   
#                                                                          qsmain.230   
ARG1=$1                                                                    PXQSMAIN.2     
UPDIN=$TEMP/updin_$$                                                       GEX4U402.9     
UPDINC=$TEMP/updinc_$$                                                     qsmain.233   
CDECKSIN=$TEMP/$RUNID.cdeckin                                              GEX4U402.10    
CDECKSOUT=$TEMP/$RUNID.cdeckout                                            GEX4U402.11    
#                                                                          qsmain.239   
*IF DEF,CRAYPVP                                                            GEX4U402.12    
PERFTRACE=${PERFTRACE:-false}                                              qsmain.242   
PERFVIEWOPT=${PERFVIEWOPT:-LBMuch}                                         qsmain.243   
*ENDIF                                                                     GEX4U402.13    
                                                                           GEX4U402.14    
*IF DEF,MPP                                                                PXQSPREL.31    
*IF DEF,METOCRAY                                                           PXQSPREL.32    
# If UM_PE_LABEL hasn't been set, use the default value of                 PXQSPREL.33    
# HHIGHMEM (causing the reconfiguration to be run on a high                PXQSPREL.34    
# memory PE)                                                               PXQSPREL.35    
UM_PE_LABEL=${UM_PE_LABEL:-HHIGHMEM}                                       PXQSPREL.36    
*ELSE                                                                      PXQSPREL.37    
# The default value of UM_PE_LABEL is "" (ie. unset) - but                 PXQSPREL.38    
# this can be overriden by defining it in a higher script (or in           PXQSPREL.39    
# a .profile etc). Alternatively, the default value can be                 PXQSPREL.40    
# set in the line below.                                                   PXQSPREL.41    
# (UM_PE_LABEL gives the label name, used with the setlabel command,       PXQSPREL.42    
#  given to the reconfiguration executable. On the T3E the                 PXQSPREL.43    
#  reconfiguration may have to be run on a >128Mb PE in order to           PXQSPREL.44    
#  execute)                                                                PXQSPREL.45    
UM_PE_LABEL=${UM_PE_LABEL:-}                                               PXQSPREL.46    
*ENDIF                                                                     PXQSPREL.47    
*ENDIF                                                                     PXQSPREL.48    
SAVECORE=${SAVECORE:-false}                                                qsmain.245   
COREDUMP=${COREDUMP:-/tmp/UMcore$$}                                        qsmain.246   
#                                                                          qsmain.247   
CCODEA=cc${ARG1}c                                                          PXQSMAIN.3     
SPCODE=spcode                                                              qsmain.251   
#                                                                          qsmain.252   
APSUM1=$TEMP/$RUNID.apsum1       # Partial sum (period 1 atmos)            qsmain.253   
APSTMP1=$TEMP/$RUNID.apstmp1     # Alternate partial sum (period 1)        qsmain.254   
OPSUM1=$TEMP/$RUNID.opsum1       # Partial sum (period 1 ocean)            qsmain.255   
OPSTMP1=$TEMP/$RUNID.opstmp1     # Alternate partial sum (period 1)        qsmain.256   
AOTRANS=$TEMP/$RUNID.aotrans     # Temp file for instantaneous data        qsmain.257   
ASWAP=$TEMP/$RUNID.aswap         # Temp file for coupled model swaps (A)   qsmain.258   
OSWAP=$TEMP/$RUNID.oswap         # Temp file for coupled model swaps (O)   qsmain.259   
CACHE1=$TEMP/$RUNID.cache1       # Temp file for memory cache              qsmain.260   
CACHE2=$TEMP/$RUNID.cache2       # Temp file for memory cache              qsmain.261   
CACHED=$TEMP/$RUNID.cached       # Temp file for memory cache              qsmain.262   
PIPE=$TEMP/$RUNID.pipe           # Named pipe for output proc requests     qsmain.263   
COMPDIR=$TEMP/compdir_$$         # This is where the nupdate extracts to   GEX4U402.15    
#                                                                          qsmain.264   
LOCKFILE=$TEMP/$RUNID.lock       # Lock file indicating model execution    qsmain.265   
export LOCKFILE                                                            qsmain.266   
                                                                           GEX4U402.16    
## environment variable $lfile must be lowercase.                          GEX4U402.17    
typeset -l lfile                                                           GEX4U402.18    
                                                                           GEX4U402.19    
#L----------------------------------------------------------------------   qsmain.268   
#L Step 1 - Source code pre-processing                                     qsmain.269   
#L                                                                         qsmain.270   
#L Step 1.1 - UPDATE                                                       GEX4U402.20    
#L                                                                         qsmain.272   
if test $STEP -le 2                                                        GKR3U405.7     
then                                                                       qsmain.274   
                                                                           GLW1U404.137   
# Unpack tar file containing compile directory files if necessary          GLW1U404.138   
                                                                           GLW1U404.139   
  if test $SKIP_TAR_COMPDIR != 'true'                                      GLW1U404.140   
  then    # tar file system in use for compile files                       GLW1U404.141   
                                                                           GLW1U404.142   
    if test `ls $UCOMPDIR/*.f 2>/dev/null|wc -w` -eq 0                     GLW1U404.143   
    then     # there are no .f files (so no manual user editing)           GLW1U404.144   
                                                                           GLW1U404.145   
      if test -s $COMP_TAR.gz                                              GLW1U404.146   
      then     # zipped tar file exists ie. this is not the initial run    GLW1U404.147   
                                                                           GLW1U404.148   
        gzip -d $COMP_TAR.gz   # unzip tar file                            GLW1U404.149   
                                                                           GLW1U404.150   
        if test $? -eq 0                                                   GLW1U404.151   
        then                                                               GLW1U404.152   
                                                                           GLW1U404.153   
          if test -s $COMP_TAR                                             GLW1U404.154   
          then     # tar file exists ie. this is not the initial run       GLW1U404.155   
                                                                           GLW1U404.156   
            cd $UCOMPDIR                                                   GLW1U404.157   
            if test $? -eq 0   # successful cd                             GLW1U404.158   
            then                                                           GLW1U404.159   
              tar -xf $COMP_TAR  # unpack compile tar file                 GLW1U404.160   
              if test $? -eq 0   # successful untar                        GLW1U404.161   
              then                                                         GLW1U404.162   
                rm $COMP_TAR  # remove tar file                            GLW1U404.163   
              fi                                                           GLW1U404.164   
            fi  # test $? on cd                                            GLW1U404.165   
                                                                           GLW1U404.166   
          fi    # test -s $COMP_TAR                                        GLW1U404.167   
                                                                           GLW1U404.168   
        fi  # test $? -eq 0                                                GLW1U404.169   
                                                                           GLW1U404.170   
      elif test -s $COMP_TAR                                               GLW1U404.171   
      then     # zip file doesn't exist but tar file does                  GLW1U404.172   
                                                                           GLW1U404.173   
        cd $UCOMPDIR                                                       GLW1U404.174   
        if test $? -eq 0   # successful cd                                 GLW1U404.175   
        then                                                               GLW1U404.176   
          tar -xf $COMP_TAR  # unpack compile tar file                     GLW1U404.177   
          if test $? -eq 0   # successful untar                            GLW1U404.178   
          then                                                             GLW1U404.179   
            rm $COMP_TAR  # remove tar file                                GLW1U404.180   
          fi                                                               GLW1U404.181   
        fi  # test $? on cd                                                GLW1U404.182   
                                                                           GLW1U404.183   
      fi    # test -s $COMP_TAR.gz                                         GLW1U404.184   
                                                                           GLW1U404.185   
                                                                           GLW1U404.186   
    fi      # test `ls -l $UCOMPDIR/*.f>/dev/null` -ne 0                   GLW1U404.187   
  fi        # test $SKIP_TAR_COMPDIR != 'true'                             GLW1U404.188   
                                                                           GLW1U404.189   
                                                                           GLW1U404.190   
  if [ ! -f "$UCOMPDIR/Makefile" ]                                         GEX4U402.22    
  then                                                                     GEX4U402.23    
    if [ "$SKIP_SRC_EXTRACT" = "true" ]                                    GEX4U402.24    
    then                                                                   GEX4U402.25    
      echo \                                                               GEX4U402.26    
"\nqsmain($SECONDS): ***\tReset SKIP_SRC_EXTRACT to false as this" \       GEX4U402.27    
"\nqsmain($SECONDS): ***\tappears to be an initial run.\n" >>\             gex3u405.4     
$OUTPUT                                                                    gex3u405.5     
      SKIP_SRC_EXTRACT="false"                                             GEX4U402.29    
    fi                                                                     GEX4U402.30    
  fi                                                                       GEX4U402.31    
  # create extracted source in temporary directory                         GEX4U402.32    
  if [ "$SKIP_SRC_EXTRACT" = "true" ]                                      GKR1U404.43    
  then                                                                     GKR1U404.44    
    # Remove any zero length files in the User Compile Directory.          GKR1U404.45    
    echo "\nqsmain($SECONDS): ***\tRemoving zero length files" >>\         GKR1U404.46    
      $OUTPUT                                                              GKR1U404.47    
    find $UCOMPDIR -size 0 -exec rm {} \; 1>> $OUTPUT 2>&1                 GKR1U404.48    
    echo "qsmain($SECONDS): ***\tFinished removing files\n" >>\            GKR1U404.49    
      $OUTPUT                                                              GKR1U404.50    
  else                                                                     GKR1U404.51    
    mkdir -p $COMPDIR                                                      GEX4U402.35    
    cd $COMPDIR                                                            GEX4U402.36    
#                                                                          qsmain.275   
# Create UPDATE input file from *DEFs, PARAMETER block (configuration),    qsmain.276   
# user's UPDATE modifications file, and list of *C directives              qsmain.277   
#                                                                          qsmain.278   
#  Prepare compile files                                                   GEX4U402.37    
    allcompfiles COMP_OPTS $JOBDIR $UCOMPVARS.tmp                          GSH1U403.35    
    CC=$?                                                                  GEX4U402.39    
    if test $CC -ne 0                                                      GEX4U402.40    
    then                                                                   GEX4U402.41    
      echo "qsmain: Failure in allcompfiles"                               GEX4U402.42    
      exit $CC                                                             GEX4U402.43    
    fi                                                                     GEX4U402.44    
#  Process DEFS and CDECKS to reduce to relevant list of *C's              GEX4U402.45    
#                                                                          qsmain.280   
                                                                           GKR1U405.65    
#   Machine Definitions from PROGDEFS are added to the DEFS file.          GKR1U405.66    
#   MPP is not included as UMUI supplies it since it is possible to run    GKR1U405.67    
#   in MPP and non-MPP mode on an MPP machine.                             GKR1U405.68    
    cat>>$DEFS<<EOF                                                        GKR1U405.69    
`echo *DEFINE $PROGDEFS | $UM_SED -e 's/,MPP,/,/' -e 's/^MPP,//' \         PXQSMAIN.6     
                              -e 's/,MPP$//' -e 's/^MPP$//'`               PXQSMAIN.7     
EOF                                                                        GKR1U405.71    
                                                                           GKR1U405.72    
    cat $DEFS $CDECKS >$CDECKSIN                                           GEX4U402.46    
    $NUPCOMMD -i $CDECKSIN -c $CDECKSOUT                                   GEX4U402.47    
#                                                                          qsmain.283   
#  Concatenate all the files for fortran update step                       qsmain.284   
#                                                                          qsmain.285   
    cat $DEFS $UPDATE $CDECKSOUT.f >$UPDIN                                 GEX4U402.48    
#                                                                          qsmain.287   
# Normal update - fortran code only always required                        qsmain.288   
#                                                                          qsmain.289   
    echo "\nqsmain($SECONDS): ***\tStarting fortran nupdate"               GEX4U402.49    
    echo >>$OUTPUT                                                         GEX4U402.50    
    echo 'qsmain: %UPDATE% output follows:-' >>$OUTPUT                     GEX4U402.51    
    echo >>$OUTPUT                                                         GEX4U402.52    
    $NUPCOMMD -p $PROGLIB -i $UPDIN -D -o $UPDOUT -m 2 >>$OUTPUT           GEX4U402.53    
    CC=$?                                                                  GEX4U402.54    
    if test $CC -ne 0                                                      GEX4U402.55    
    then                                                                   GEX4U402.56    
      echo "$0: Model $ARG1 - Error(s) in update step"                     PXQSMAIN.4     
      exit $CC                                                             GEX4U402.58    
    fi                                                                     GEX4U402.59    
    echo "qsmain($SECONDS): ***\tFinished fortran nupdate\n"               GEX4U402.60    
# loop over these files and rename them so they can be identified as       GEX4U402.61    
# fortran source later                                                     GEX4U402.62    
echo "\nqsmain($SECONDS): ***\tRenaming nupdate extracted files" >>\       gex3u405.6     
  $OUTPUT                                                                  gex3u405.7     
# Remove log files and zero length files                                   PXQSMN2.1     
    rm -f *.log                                                            PXQSMN2.2     
    find . -size 0 -print | xargs rm -f                                    PXQSMN2.3     
    for file in `ls`                                                       GEX4U402.64    
    do                                                                     GEX4U402.65    
      lfile=$file.f                                                        GEX4U402.66    
echo "qsmain($SECONDS): ***\t  Renaming $file to $lfile" >>\               gex3u405.8     
  $OUTPUT                                                                  gex3u405.9     
      mv $file $lfile                                                      GEX4U402.68    
    done                                                                   GEX4U402.69    
echo "qsmain($SECONDS): ***\tFinished renaming files.\n" >>\               gex3u405.10    
  $OUTPUT                                                                  gex3u405.11    
                                                                           GEX4U402.71    
#L                                                                         qsmain.300   
#L Step 1.2 - normal UPDATE - c code only                                  qsmain.301   
#L                                                                         qsmain.302   
#                                                                          qsmain.303   
# Only required if c code mods supplied                                    qsmain.304   
#                                                                          qsmain.305   
    if test -s $UPDATEC                                                    GEX4U402.72    
    then                                                                   GEX4U402.73    
# concatenate file note PARAM not required as c code has no UI updates     qsmain.308   
#                                                                          qsmain.309   
      cat $DEFS $UPDATEC >$UPDINC                                          GEX4U402.74    
#                                                                          qsmain.311   
      echo "qsmain($SECONDS): ***\tStarting c-code nupdate"                GEX4U402.75    
      echo >>$OUTPUT                                                       GEX4U402.76    
      echo 'qsmain: %UPDATEC% output follows:-' >>$OUTPUT                  GEX4U402.77    
      echo >>$OUTPUT                                                       GEX4U402.78    
      $NUPCOMMD -p $PROGLIB -i $UPDINC -D -a c \                           GEX4U402.79    
                            -o $UPDOUT -m 2 >>$OUTPUT                      GEX4U402.80    
      CC=$?                                                                GEX4U402.81    
      if test $CC -ne 0                                                    GEX4U402.82    
      then                                                                 GEX4U402.83    
        echo "$0: Model $ARG1 - Error(s) in C code update step"            PXQSMAIN.5     
        exit $CC                                                           GEX4U402.85    
      fi                                                                   GEX4U402.86    
      echo "qsmain($SECONDS): ***\tFinished c-code nupdate\n"              GEX4U402.87    
                                                                           GEX4U402.88    
#L Need to move all unsuffixed files to file.c to enable                   GEX4U402.89    
#L correct identification in step 1.8. This would be unece-                GEX4U402.90    
#L -ssary if the umpl stored file.f/file.c decks names.                    GEX4U402.91    
#L Loop over files that do not have .c (c-code) suffixes.                  GEX4U402.92    
      echo \                                                               gex3u405.12    
"\nqsmain($SECONDS): ***\tRenaming nupdate extracted files." >>\           gex3u405.13    
$OUTPUT                                                                    gex3u405.14    
# Remove log files and zero length files                                   PXQSMN2.4     
      rm -f *.log                                                          PXQSMN2.5     
      find . -size 0 -print | xargs rm -f                                  PXQSMN2.6     
      for file in `ls | $UM_GREP -E -v '\.f$'`                             PXUTILTY.243   
      do                                                                   GEX4U402.95    
        lfile=$file.c                                                      GEX4U402.96    
        echo "qsmain($SECONDS): ***\t  Renaming $file to $lfile" >>\       gex3u405.15    
          $OUTPUT                                                          gex3u405.16    
        mv $file $lfile                                                    GEX4U402.98    
      done                                                                 GEX4U402.99    
      echo "qsmain($SECONDS): ***\tFinished renaming files.\n" >>\         gex3u405.17    
        $OUTPUT                                                            gex3u405.18    
    fi                                                                     GEX4U402.101   
                                                                           GEX4U402.102   
#L----------------------------------------------------------------------   qsmain.378   
#L Step 2 - Compile                                                        qsmain.379   
#L                                                                         qsmain.380   
    echo "\nqsmain($SECONDS): ***\tRunning qsmncompile"                    gex3u405.19    
    echo "%QSMNCOMPILE%" >>$OUTPUT                                         gex3u405.20    
    . qsmncompile >>$OUTPUT 2>&1                                           gex3u405.21    
    test=$?                                                                GKR3U405.74    
    if [ "$test" -eq 0 ]                                                   GKR3U405.75    
    then                                                                   GKR3U405.76    
      echo "qsmain($SECONDS): ***\tCompleted qsmncompile\n"                GKR3U405.77    
      echo "\nqsmain($SECONDS): ***\tCompleted qsmncompile\n" >>$OUTPUT    GKR3U405.78    
    else                                                                   GKR3U405.79    
      echo "qsmain($SECONDS): ***\tQsmncompile has failed. Exiting\n"      GKR3U405.80    
      echo "\nqsmain($SECONDS): ***\tQsmncompile has failed. Exiting\n"\   GKR3U405.81    
         >> $OUTPUT                                                        GKR3U405.82    
      exit 1                                                               GKR3U405.83    
    fi                                                                     GKR3U405.84    
  fi                                                                       GEX4U402.104   
                                                                           GEX4U402.105   
  cd $UCOMPDIR                                                             GEX4U402.106   
  if [ -d "$COMPDIR" ]                                                     GSH1U403.36    
  then                                                                     GSH1U403.37    
    rm -rf $COMPDIR                                                        GSH1U403.38    
  fi                                                                       GSH1U403.39    
                                                                           GEX4U402.108   
##                                                                         GEX4U402.109   
## Step 2.1 - Make executable                                              GEX4U402.110   
##                                                                         GEX4U402.111   
  echo "\nqsmain($SECONDS): ***\tRunning make for compile step"            PXCLLMOD.4     
  echo "\nqsmain($SECONDS): ***\tRunning make for compile step\n" \        PXCLLMOD.5     
    >>$OUTPUT                                                              PXCLLMOD.6     
  echo "%MAKEC%" >>$OUTPUT                                                 PXCLLMOD.7     
  make -f makefile.compile >>$OUTPUT 2>&1                                  PXCLLMOD.8     
  test=$?                                                                  GEX4U402.114   
  if [ "$test" -eq 0 ]                                                     GEX4U402.115   
  then                                                                     GEX4U402.116   
    echo "qsmain($SECONDS): ***\tCompleted make for compile step\n"        PXCLLMOD.9     
    echo "\nqsmain($SECONDS): ***\tCompleted make for compile step\n" \    PXCLLMOD.10    
      >>$OUTPUT                                                            PXCLLMOD.11    
  else                                                                     GEX4U402.118   
    echo "qsmain($SECONDS): ***\tCompile step make has failed.\            PXCLLMOD.12    
 Exiting.\n"                                                               PXCLLMOD.13    
    echo "\nqsmain($SECONDS): ***\tCompile step make has failed.\          PXCLLMOD.14    
 Exiting.\n" >> $OUTPUT                                                    PXCLLMOD.15    
    exit 1                                                                 GEX4U402.120   
  fi                                                                       GEX4U402.121   
                                                                           PXCLLMOD.16    
# And link:                                                                PXCLLMOD.17    
  echo "\nqsmain($SECONDS): ***\tRunning make for link step"               PXCLLMOD.18    
  echo "\nqsmain($SECONDS): ***\tRunning make for link step\n" \           PXCLLMOD.19    
    >>$OUTPUT                                                              PXCLLMOD.20    
  echo "%MAKEL%" >>$OUTPUT                                                 PXCLLMOD.21    
  make -f makefile.link >>$OUTPUT 2>&1                                     PXCLLMOD.22    
  test=$?                                                                  PXCLLMOD.23    
  if [ "$test" -eq 0 ]                                                     PXCLLMOD.24    
  then                                                                     PXCLLMOD.25    
    echo "qsmain($SECONDS): ***\tCompleted make for link step\n"           PXCLLMOD.26    
    echo "\nqsmain($SECONDS): ***\tCompleted make for link step\n" \       PXCLLMOD.27    
      >>$OUTPUT                                                            PXCLLMOD.28    
  else                                                                     PXCLLMOD.29    
    echo "qsmain($SECONDS): ***\tLink step make has failed.\               PXCLLMOD.30    
 Exiting.\n"                                                               PXCLLMOD.31    
    echo "\nqsmain($SECONDS): ***\tLink step make has failed.\             PXCLLMOD.32    
 Exiting.\n" >> $OUTPUT                                                    PXCLLMOD.33    
    exit 1                                                                 PXCLLMOD.34    
  fi                                                                       PXCLLMOD.35    
                                                                           PXCLLMOD.36    
# Remove the archives:                                                     PXCLLMOD.37    
  rm -f $UCOMPDIR/libum*.a                                                 PXCLLMOD.38    
  date >> $OUTPUT                                                          PXCLLMOD.39    
                                                                           PXCLLMOD.40    
                                                                           GLW1U404.193   
# Pack all compile directory files into a tar file and remove              GLW1U404.194   
# compile files                                                            GLW1U404.195   
                                                                           GLW1U404.196   
  if test $SKIP_TAR_COMPDIR != 'true'                                      GLW1U404.197   
  then    # tar file system in use for compile files                       GLW1U404.198   
                                                                           GLW1U404.199   
    cd $UCOMPDIR                                                           GLW1U404.200   
    if test $? -eq 0  # successful cd to compile directory                 GLW1U404.201   
    then                                                                   GLW1U404.202   
      tar -cf $COMP_TAR *  # pack compile tar file                         GLW1U404.203   
      if test $? -eq 0              # successful tar                       GLW1U404.204   
      then                                                                 GLW1U404.205   
                                                                           GLW1U404.206   
        gzip $COMP_TAR  # gzip tar file                                    GLW1U404.207   
        if test $? -eq 0              # successful tar                     GLW1U404.208   
        then                                                               GLW1U404.209   
                                                                           GLW1U404.210   
          cd $DATAW                                                        GLW1U404.211   
          rm -r $UCOMPDIR              # remove compile files              GLW1U404.212   
          mkdir $UCOMPDIR                                                  GLW1U404.213   
                                                                           GLW1U404.214   
          echo "-----------------------------"    >>$COMP_README           GLW1U404.215   
          echo "Model run compile files      "    >>$COMP_README           GLW1U404.216   
          echo "-----------------------------"    >>$COMP_README           GLW1U404.217   
          echo "To unpack tar file:"              >>$COMP_README           GLW1U404.218   
          echo "cd $UCOMPDIR # compile directory" >>$COMP_README           GLW1U404.219   
          echo "gzip -d $COMP_TAR.gz # unzip tar file" \                   GLW1U404.220   
                                                  >>$COMP_README           GLW1U404.221   
          echo "tar -xf $COMP_TAR # extract all files" \                   GLW1U404.222   
                                                  >>$COMP_README           GLW1U404.223   
          echo "or"                               >>$COMP_README           GLW1U404.224   
          echo "tar -xf $COMP_TAR atmstep1.f" \                            GLW1U404.225   
            " # extract individual file(s)"       >>$COMP_README           GLW1U404.226   
          echo                                    >>$COMP_README           GLW1U404.227   
          echo "To repack tar file:"              >>$COMP_README           GLW1U404.228   
          echo "cd $UCOMPDIR # compile directory" >>$COMP_README           GLW1U404.229   
          echo "tar -cf $COMP_TAR *" \                                     GLW1U404.230   
                   " # tar whole directory"       >>$COMP_README           GLW1U404.231   
          echo "or"                               >>$COMP_README           GLW1U404.232   
          echo "tar -uf $COMP_TAR atmstep1.f # update" \                   GLW1U404.233   
            " individual file(s) in tar file"     >>$COMP_README           GLW1U404.234   
          echo "gzip $COMP_TAR # zip tar file"    >>$COMP_README           GLW1U404.235   
          echo "rm * # remove .f, .c files etc"   >>$COMP_README           GLW1U404.236   
          echo                                    >>$COMP_README           GLW1U404.237   
        else                                                               GLW1U404.238   
          rm $COMP_TAR   # remove tar file                                 GLW1U404.239   
        fi                                                                 GLW1U404.240   
      else                                                                 GLW1U404.241   
        rm $COMP_TAR   # remove tar file                                   GLW1U404.242   
      fi                                                                   GLW1U404.243   
    fi   # test $? -eq 0  # successful cd to compile directory             GLW1U404.244   
  fi     # test $SKIP_TAR_COMPDIR != 'true'                                GLW1U404.245   
fi                                                                         qsmain.386   
                                                                           GEX4U402.122   
#L----------------------------------------------------------------------   qsmain.387   
#L Step 3 - Loadmodule created                                             qsmain.388   
#L                                                                         qsmain.389   
if test $STEP -le 2                                                        GKR3U405.8     
then                                                                       GLW2U404.2     
  chmod a+rx $LOADMODULE                                                   GLW2U404.3     
fi                                                                         GLW2U404.4     
#L                                                                         qsmain.391   
#L Step 3C - If STEP = 0 exit without running model                        GEX4U402.123   
#L                                                                         qsmain.393   
if test $STEP -eq 0                                                        GEX4U402.124   
then                                                                       qsmain.395   
  echo "$ARG1: Successfully built load module -- no run requested"         PXQSMAIN.8     
  exit                                                                     qsmain.397   
elif test $STEP -eq 2                                                      GKR3U405.9     
then                                                                       GKR3U405.10    
*IF DEF,MPP                                                                PXQSMAIN.25    
  echo "$0: Creating script to submit to do model run"                     GKR3U405.12    
  if test -z "$RESUB_FILE"                                                 GKR3U405.13    
  then                                                                     GKR3U405.14    
    RESUB_FILE=$TEMP/$RUNID.resub                                          GKR3U405.15    
  fi                                                                       GKR3U405.16    
  rm $RESUB_FILE                                                           GKR3U405.17    
                                                                           GKR3U405.18    
# create complete script to submit (this gets submitted in submitchk       GKR3U405.19    
# called at the end of the top level script just before job completes)     GKR3U405.20    
                                                                           GKR3U405.21    
  JOBNAME=$CJOBN                                                           GKR3U405.22    
  OUTFILE=$UMRUN_OUTPUT                                                    GKR3U405.23    
  export SUBMITID=$SUBMITID                                                GKR3U405.24    
  export JOBDIR=$HOME/umui_runs/$RUNID-$SUBMITID                           GKR3U405.25    
  export OPRESTART=3  # indicates run has been automatically resubmitted   GKR3U405.26    
                                                                           GKR3U405.27    
  cp $JOBDIR/umuisubmit /tmp/umuisubmit.$$                                 GKR3U405.28    
                                                                           GKR3U405.29    
  cat > $RESUB_FILE << eof                                                 GKR3U405.30    
    qsub -x -r $JOBNAME -o $OUTFILE -s /bin/ksh /tmp/umuisubmit.$$         GKR3U405.31    
    CC=\$?                                                                 GKR3U405.32    
                                                                           GKR3U405.33    
    if test \$CC -eq 0                                                     GKR3U405.34    
    then                                                                   GKR3U405.35    
      echo "qsresubmit: submitted job successfully"                        GKR3U405.36    
    elif test \$CC -eq 1                                                   GKR3U405.37    
    then                                                                   GKR3U405.38    
      echo "qsresubmit: job not resubmitted due to user error:"            GKR3U405.39    
      echo qsub -x -r $JOBNAME -o $OUTFILE -s /bin/ksh \                   GKR3U405.40    
      /tmp/umuisubmit.$$                                                   GKR3U405.41    
    elif test \$CC -eq 2                                                   GKR3U405.42    
    then                                                                   GKR3U405.43    
      echo "qsresubmit: job not resubmitted due to NQS error"              GKR3U405.44    
    fi                                                                     GKR3U405.45    
    rm /tmp/umuisubmit.$$                                                  GKR3U405.46    
eof                                                                        GKR3U405.47    
                                                                           GKR3U405.48    
  chmod 755 $RESUB_FILE                                                    GKR3U405.49    
                                                                           GKR3U405.50    
  exit                                                                     GKR3U405.51    
*ELSE                                                                      GKR3U405.52    
  :  # Non-MPP code should not need to use STEP=2                          GKR3U405.53    
*ENDIF                                                                     GKR3U405.54    
else                                                                       qsmain.398   
  echo "$ARG1: Starting run"                                               PXQSMAIN.9     
fi                                                                         qsmain.400   
#L----------------------------------------------------------------------   qsmain.401   
#L Step 4 - Run model                                                      qsmain.402   
#L                                                                         qsmain.403   
#L                                                                         qsmain.404   
#L Step 4A - Associate logical filenames with actual run-time filenames    qsmain.405   
#L                                                                         qsmain.406   
# set up file containing env vars by changing ':' to '='                   GTS0U304.3     
$UM_SED "s/ *: */=/" $FTXX >$FTXX.new                                      PXUTILTY.244   
>$FTXX.vars                                                                GCP0U305.4     
chmod 755 $FTXX.new $FTXX.vars                                             GCP0U305.5     
. $FTXX.new                                                                GTS0U304.6     
#L                                                                         GCP0U305.6     
#L Step 4B.1 - export all variable names implicitly with loop construct    GCP0U305.7     
#L             - required by portable IO                                   GCP0U305.8     
#                                                                          GCP0U305.9     
echo `cat $FTXX|cut -d: -f1` > $FTXX.vars                                  GCP0U305.10    
for var in `cat $FTXX.vars`                                                GCP0U305.11    
do                                                                         GCP0U305.12    
  export $var                                                              GCP0U305.13    
done                                                                       GCP0U305.14    
#L                                                                         qsmain.548   
#L Step 4B - Run-time files and their respective FORTRAN units             qsmain.549   
#L                                                                         qsmain.550   
# History/control files including diagnostic control file                  qsmain.551   
#                                                                          qsmain.552   
UNIT01=$HKFILE                                                             GCP0U305.15    
UNIT02=$PPXREFU                                                            qsmain.553   
UNIT04=$STASHCTL                                                           qsmain.555   
UNIT05=$NAMELIST                                                           GPB0U305.6     
UNIT07=$OUTPUT2                                                            qsmain.556   
UNIT22=$STASHMSTR                                                          gss1u401.3     
UNIT09=$CONTCNTL                                                           GCP0U305.16    
UNIT10=$XHIST                                                              qsmain.557   
UNIT11=$IHIST                                                              qsmain.558   
UNIT12=$THIST                                                              qsmain.559   
UNIT14=$ERRFLAG                                                            qsmain.560   
UNIT15=$CACHE1                                                             qsmain.561   
export UNIT01 UNIT02 UNIT04 UNIT05 UNIT07 UNIT09 UNIT10 UNIT11             ARR5U405.16    
export UNIT12 UNIT14 UNIT15                                                GCP0U305.18    
export UNIT22                                                              gss1u401.4     
#                                                                          GGH3U400.26    
# Spectral files                                                           GGH3U400.27    
#                                                                          GGH3U400.28    
UNIT57=$SWSPECTD                                                           GGH3U400.29    
UNIT80=$LWSPECTD                                                           GGH3U400.30    
export UNIT57 UNIT80                                                       GGH3U400.31    
# Ocean basin indices file                                                 qsmain.564   
#                                                                          qsmain.565   
UNIT58=$BAS_IND                                                            qsmain.566   
export UNIT58                                                              qsmain.567   
#                                                                          qsmain.568   
# OBS files for OBS_FORMAT =1 type files only                              GSB1U304.6     
#                                                                          qsmain.570   
if test $OBS_FORMAT -eq 1                                                  qsmain.571   
then                                                                       qsmain.572   
UNIT70=$OBS01                                                              GSB1U304.7     
UNIT71=$OBS02                                                              GSB1U304.8     
UNIT72=$OBS03                                                              GSB1U304.9     
UNIT73=$OBS04                                                              GSB1U304.10    
UNIT74=$OBS05                                                              GSB1U304.11    
UNIT75=$OBS06                                                              GSB1U304.12    
UNIT76=$OBS07                                                              GSB1U304.13    
UNIT77=$OBS08                                                              GSB1U304.14    
UNIT78=$OBS09                                                              GSB1U304.15    
UNIT79=$OBS10                                                              GSB1U304.16    
export UNIT70 UNIT71 UNIT72 UNIT73 UNIT74                                  qsmain.578   
export UNIT75 UNIT76 UNIT77 UNIT78 UNIT79                                  GSB1U304.17    
fi                                                                         qsmain.579   
#L                                                                         qsmain.580   
#                                                                          qsmain.607   
#L Step 4C - Move "permanent" copies of restart partial sum dumps to       qsmain.608   
#L          "temporary" space if they exist (period 1 only).               qsmain.609   
#L                                                                         qsmain.610   
if $OPERATIONAL                                                            qsmain.611   
then                                                                       qsmain.612   
  :                                                                        qsmain.613   
else                                                                       qsmain.614   
  if test -f $DATAM/$RUNID.apsum1                                          qsmain.615   
  then                                                                     qsmain.616   
    mv $DATAM/$RUNID.apsum1 $APSUM1                                        qsmain.617   
  fi                                                                       qsmain.618   
  if test -f $DATAM/$RUNID.apstmp1                                         qsmain.619   
  then                                                                     qsmain.620   
    mv $DATAM/$RUNID.apstmp1 $APSTMP1                                      qsmain.621   
  fi                                                                       qsmain.622   
  if test -f $DATAM/$RUNID.opsum1                                          qsmain.623   
  then                                                                     qsmain.624   
    mv $DATAM/$RUNID.opsum1 $OPSUM1                                        qsmain.625   
  fi                                                                       qsmain.626   
  if test -f $DATAM/$RUNID.opstmp1                                         qsmain.627   
  then                                                                     qsmain.628   
    mv $DATAM/$RUNID.opstmp1 $OPSTMP1                                      qsmain.629   
  fi                                                                       qsmain.630   
fi                                                                         qsmain.631   
#L                                                                         qsmain.632   
#L Step 4D - Execute load module, appending standard output to OUTPUT      qsmain.633   
#L          with output processing performed by server process if req.     qsmain.634   
#L          (model executes in directory $DATAM as specified in job)       qsmain.635   
#L                                                                         qsmain.636   
*IF DEF,CRAYF90                                                            GLW2U404.22    
FILENV=$TMPDIR/main_assign                                                 GEX4U402.125   
assign -R main_assign                                                      GLW2U404.7     
assign -f 77 g:sf                                                          GEX4U402.127   
*ENDIF                                                                     GLW2U404.23    
#                                                                          GEX4U402.128   
cd $DATAM                                                                  qsmain.637   
CC=$?                                                                      GGH3U400.32    
if [[ $CC -ne 0 ]]                                                         GGH3U400.33    
then                                                                       GGH3U400.34    
  echo $0 : cd to $DATAM has failed                                        GGH3U400.35    
  exit $CC                                                                 GGH3U400.36    
fi                                                                         GGH3U400.37    
#                                                                          qsmain.638   
#L  Set error flag to false ie model to run; remove XHIST                  qsmain.639   
#                                                                          qsmain.640   
cat > $ERRFLAG << EOF                                                      qsmain.641   
F  No request to stop model                                                qsmain.642   
EOF                                                                        qsmain.643   
#                                                                          qsmain.644   
rm $XHIST 2>/dev/null                                                      qsmain.645   
#                                                                          qsmain.646   
echo >>$OUTPUT                                                             qsmain.647   
echo 'qsmain: %MODEL% output follows:-' >>$OUTPUT                          qsmain.648   
echo >>$OUTPUT                                                             qsmain.649   
if test -x $LOADMODULE # test loadmodule exists with excute permission     qsmain.650   
then                                                                       qsmain.651   
                                                                           GEX4U402.129   
# Edit $UNIT11                                                             GEX4U402.130   
#                                                                          GLW4U403.11    
                                                                           GEX4U402.139   
  if test $UMMACHINE = 'METOCRAY'                                          GLW1U401.1003  
  then                                                                     GLW1U401.1004  
    if $AUTO_RESTART                                                       GLW1U401.1005  
    then                                                                   GLW1U401.1006  
      echo "qsmain: writing restart information"                           GLW1U401.1007  
      restartinfo                                                          GLW1U401.1008  
      if test $? -ne 0                                                     GSM0U403.117   
      then                                                                 GSM0U403.118   
	exit 1                                                                    GSM0U403.119   
      fi                                                                   GSM0U403.120   
    fi                                                                     GLW1U401.1009  
  fi                                                                       GLW1U401.1010  
 if $AUTOMATIC_PP                                                          qsmain.652   
 then                                                                      qsmain.653   
  /etc/mknod $PIPE p                 # Create named pipe                   qsmain.654   
  rm $SERVEROUT 2>/dev/null          # Clear server output file            qsmain.655   
  qsserver <$PIPE >$SERVEROUT &      # Start background server process     qsmain.656   
                                     # to read from named pipe             qsmain.657   
  UNIT08=$PIPE                                                             qsmain.658   
  export UNIT08                                                            qsmain.659   
                                                                           qsmain.660   
  >$LOCKFILE     # Create LOCKFILE to indicate model executing             qsmain.661   
                                                                           qsmain.662   
*IF DEF,MPP,AND,-DEF,CRAYMPP                                               GEX4U402.140   
                                                                           GPB0U304.4     
  UNIT05=$NAMELIST  # parallel code reads namelist explicitly from         GPB0U304.5     
  export UNIT05     # unit05 rather that stdin                             GPB0U304.6     
  # set up special executable for parallel code : parexe                   GPB0U304.7     
  # this sets up the correct environemt before calling the                 GPB0U304.8     
  # normal executable                                                      GPB0U304.9     
  PAREXE=$LOADMODULE.parexe.$$                                             GPB0U400.1     
  export PAREXE   # ParUM will need to know what the file is called        GPB0U400.2     
  echo "#!/bin/ksh" > $PAREXE                                              GPB0U304.11    
  echo "set -a" >> $PAREXE                                                 GPB0U304.12    
  echo "cd `pwd`" >> $PAREXE  # sets the correct directory                 GPB0U304.13    
  env | $UM_SED "s/=/=\"/" | $UM_SED "s/$/\"/"  >> $PAREXE                 PXUTILTY.245   
                              # sets the environmental variables           GPB0U304.15    
  echo "$LOADMODULE" >> $PAREXE                                            GPB0U304.16    
  chmod u+x $PAREXE                                                        GPB0U304.17    
                                                                           GPB0U304.18    
*ENDIF                                                                     GPB0U304.19    
  # Define a private FILENV variable for OASIS assigns :                   CJC1U404.87    
  FILENV_TEMP=$FILENV                                                      CJC1U404.88    
  FILENV=$DATAW/.assign_oasis                                              CJC1U404.89    
  assign -f 77 g:sf                                                        CJC1U404.90    
                                                                           CJC1U404.91    
*IF DEF,CRAYMPP                                                            GEX4U402.141   
  mpprun -n$UM_NPES $LOADMODULE >> $OUTPUT                                 GEX4U402.142   
*ELSEIF DEF,SGI,AND,DEF,MPP                                                PXQSMAIN.21    
  mpirun -np $UM_NPES $LOADMODULE >>$OUTPUT                                PXQSMAIN.22    
*ELSE                                                                      GEX4U402.143   
  $LOADMODULE >>$OUTPUT                                                    GPB0U305.7     
*ENDIF                                                                     GEX4U402.144   
                                                                           qsmain.664   
  CC=$?          # Start model, reading from input NAMELIST and writing    qsmain.665   
                 # output processing requests (indicated by %%%) to        qsmain.666   
                 # PIPE on unit 8.  Normal output is added to $OUTPUT.     qsmain.667   
  FILENV=$FILENV_TEMP # restore the original FILENV.                       CJC1U404.92    
                                                                           CJC1U404.93    
                                                                           CJC1U404.94    
                                                                           CJC1U404.95    
*IF DEF,MPP,AND,-DEF,CRAYMPP                                               GEX4U402.145   
  if test $CC -eq 0                                                        GPB0U400.4     
  then                                                                     GPB0U400.5     
    rm $PAREXE                                                             GPB0U400.6     
  fi                                                                       GPB0U400.7     
*ENDIF                                                                     GPB0U400.8     
  rm $LOCKFILE   # Remove LOCKFILE to indicate model completed             qsmain.668   
                                                                           qsmain.669   
  wait $!                            # Wait for server to complete         qsmain.670   
  RCSERVER=`cat $ERRFLAG|cut -c 1`  # return code from server              qsmain.671   
  RMSERVER=`cat $ERRFLAG|cut -c 3-80`  # message from server               qsmain.672   
 else                                                                      qsmain.673   
*IF DEF,LINUX                                                              PXQSMAIN.16    
  UNIT08=$PIPE                                                             PXQSMAIN.17    
*ELSE                                                                      PXQSMAIN.18    
  UNIT08=/dev/null                                                         PXQSMAIN.19    
*ENDIF                                                                     PXQSMAIN.20    
  export UNIT08                                                            qsmain.675   
*IF DEF,MPP,AND,-DEF,CRAYMPP                                               GEX4U402.146   
                                                                           GPB0U304.21    
  UNIT05=$NAMELIST  # parallel code reads namelist explicitly from         GPB0U304.22    
  export UNIT05     # unit05 rather that stdin                             GPB0U304.23    
  # set up special executable for parallel code : parexe                   GPB0U304.24    
  # this sets up the correct environemt before calling the                 GPB0U304.25    
  # normal executable                                                      GPB0U304.26    
  PAREXE=$LOADMODULE.parexe.$$                                             GPB0U400.9     
  export PAREXE   # ParUM will need to know what the file is called        GPB0U400.10    
  echo "#!/bin/ksh" > $PAREXE                                              GPB0U304.28    
  echo "set -a" >> $PAREXE                                                 GPB0U304.29    
  echo "cd `pwd`" >> $PAREXE  # sets the correct directory                 GPB0U304.30    
  env | $UM_SED "s/=/=\"/" | $UM_SED "s/$/\"/"  >> $PAREXE                 PXUTILTY.246   
                              # sets the environmental variables           GPB0U304.32    
  echo "$LOADMODULE" >> $PAREXE                                            GPB0U304.33    
  chmod u+x $PAREXE                                                        GPB0U304.34    
                                                                           GPB0U304.35    
*ENDIF                                                                     GPB0U304.36    
*IF DEF,CRAYMPP                                                            GLW1U404.247   
  # Define a private FILENV variable for OASIS assigns :                   CJC1U404.96    
  FILENV_TEMP=$FILENV                                                      CJC1U404.97    
  FILENV=$DATAW/.assign_oasis                                              CJC1U404.98    
  assign -f 77 g:sf                                                        CJC1U404.99    
                                                                           CJC1U404.100   
  mpprun -n$UM_NPES $LOADMODULE >> $OUTPUT  #run without server process    GEX4U402.147   
*ELSEIF DEF,SGI,AND,DEF,MPP                                                PXQSMAIN.23    
  mpirun -np $UM_NPES $LOADMODULE >>$OUTPUT                                PXQSMAIN.24    
*ELSE                                                                      GLW1U404.248   
  $LOADMODULE >>$OUTPUT #run without server process                        GLW1U404.249   
*ENDIF                                                                     GLW1U404.250   
  CC=$?                                                                    qsmain.677   
  FILENV=$FILENV_TEMP # restore the original FILENV.                       CJC1U404.101   
                                                                           CJC1U404.102   
                                                                           CJC1U404.103   
                                                                           CJC1U404.104   
*IF DEF,MPP,AND,-DEF,CRAYMPP                                               GEX4U402.148   
  if test $CC -eq 0                                                        GPB0U400.12    
  then                                                                     GPB0U400.13    
    rm $PAREXE                                                             GPB0U400.14    
  fi                                                                       GPB0U400.15    
*ENDIF                                                                     GPB0U400.16    
 fi                                                                        qsmain.678   
else                                                                       qsmain.679   
  echo "qsmain : error loadmodule $LOADMODULE not found" >>$OUTPUT         qsmain.680   
  exit 135                                                                 qsmain.681   
fi                                                                         qsmain.682   
*IF DEF,CRAYPVP                                                            GEX4U402.149   
#L                                                                         qsmain.683   
#L  Atexpert option move output to different file name                     qsmain.684   
#L                                                                         qsmain.685   
if $ATEXPERT -a $CF77_ALL_MODEL                                            qsmain.686   
then                                                                       qsmain.687   
  mv atx.raw $DATAM/$RUNID.atxraw                                          qsmain.688   
  echo "qsmain: atexpert raw data in $DATAM/$RUNID.atxraw"                 qsmain.689   
fi                                                                         qsmain.690   
#L                                                                         qsmain.691   
#L  Produce perftrace stats if required                                    qsmain.692   
#L                                                                         qsmain.693   
if $PERFTRACE                                                              qsmain.694   
then                                                                       qsmain.695   
echo 'qsmain: %perftrace% output follows:- ' >>$OUTPUT                     qsmain.696   
 perfview -"$PERFVIEWOPT" >>$OUTPUT                                        qsmain.697   
fi                                                                         qsmain.698   
*ENDIF                                                                     GEX4U402.150   
                                                                           GEX4U402.151   
#                                                                          qsmain.699   
# sync    #   Flush system buffers                                         GEX4U402.152   
#L                                                                         qsmain.701   
#L Step 4E - Move "temporary" copies of restart partial sum dumps to       qsmain.702   
#L          "permanent" space again.  If diskspace problem precludes       qsmain.703   
#L          this, set error message in EXITSTAT file so that qsfinal       qsmain.704   
#L          will set the permanent history file to restart from a safe     qsmain.705   
#L          point rather than the most recent dump.                        qsmain.706   
#L                                                                         qsmain.707   
if $OPERATIONAL                                                            qsmain.708   
then                                                                       qsmain.709   
  :                                                                        qsmain.710   
else                                                                       qsmain.711   
  >$EXITSTAT                # Null file indicates normal condition         qsmain.712   
  if test -f $APSUM1                                                       qsmain.713   
  then                                                                     qsmain.714   
    mv $APSUM1 $DATAM/$RUNID.apsum1                                        qsmain.715   
    if test $? -ne 0                                                       qsmain.716   
    then                                                                   qsmain.717   
      echo "Failed to move $RUNID.apsum1 to $DATAM" >$EXITSTAT             qsmain.718   
    fi                                                                     qsmain.719   
  fi                                                                       qsmain.720   
  if test -f $APSTMP1                                                      qsmain.721   
  then                                                                     qsmain.722   
    mv $APSTMP1 $DATAM/$RUNID.apstmp1                                      qsmain.723   
    if test $? -ne 0                                                       qsmain.724   
    then                                                                   qsmain.725   
      echo "Failed to move $RUNID.apstmp1 to $DATAM" >$EXITSTAT            qsmain.726   
    fi                                                                     qsmain.727   
  fi                                                                       qsmain.728   
  if test -f $OPSUM1                                                       qsmain.729   
  then                                                                     qsmain.730   
    mv $OPSUM1 $DATAM/$RUNID.opsum1                                        qsmain.731   
    if test $? -ne 0                                                       qsmain.732   
    then                                                                   qsmain.733   
      echo "Failed to move $RUNID.opsum1 to $DATAM" >$EXITSTAT             qsmain.734   
    fi                                                                     qsmain.735   
  fi                                                                       qsmain.736   
  if test -f $OPSTMP1                                                      qsmain.737   
  then                                                                     qsmain.738   
    mv $OPSTMP1 $DATAM/$RUNID.opstmp1                                      qsmain.739   
    if test $? -ne 0                                                       qsmain.740   
    then                                                                   qsmain.741   
      echo "Failed to move $RUNID.opstmp1 to $DATAM" >$EXITSTAT            qsmain.742   
    fi                                                                     qsmain.743   
  fi                                                                       qsmain.744   
  if test $CC -ne 0                                                        GKR3U404.33    
  then                                                                     GKR3U404.34    
      echo "Failed in model executable" >>$EXITSTAT                        GKR3U404.35    
  fi                                                                       GKR3U404.36    
                                                                           GKR3U404.37    
  if test -s $THIST                                                        GKR3U404.38    
  then                                                                     GKR3U404.39    
    diff $XHIST $THIST >/dev/null                                          GKR3U404.40    
    # If the xhist and thist files are different, assume that the          GKR3U405.55    
    # the run has not stopped at a period 1 mean, which is when the        GKR3U405.56    
    # thist file gets updated. Therefore the thist file needs to be        GKR3U405.57    
    # kept in case the next CRUN needs to go back to a safe restart        GKR3U405.58    
    # point (if the thist file is not kept itself).                        GKR3U405.59    
    if test $? -ne 0  # differences found                                  GKR3U404.41    
    then                                                                   GKR3U404.42    
      echo "qsmain: Copying $THIST to backup thist file $THIST1"           GKR3U404.43    
      cp $THIST $THIST1                                                    GKR3U404.44    
    fi                                                                     GKR3U404.45    
  fi                                                                       GKR3U404.46    
fi                                                                         qsmain.745   
#L                                                                         qsmain.746   
#L Step 4F - If run failed, output debug and return completion code;       qsmain.747   
#L          If run worked, delete temporary history file.                  qsmain.748   
#L                                                                         qsmain.749   
*IF DEF,METOCRAY                                                           GLW1U400.7     
                                                                           GLW1U400.8     
  CRPRODRUN=${CRPRODRUN:-false}                                            GLW3U404.2     
  CRDOERUN=${CRDOERUN:-false}                                              GLW3U404.3     
                                                                           GLW3U404.4     
CRMSGFILE=$CRERRDIR/`date '+%a'`                                           GLW3U404.5     
                                                                           GLW3U404.6     
ERRTYPE=''        # initialise ERRTYPE message string as empty             GLW3U404.7     
OPSR=false        # set OP(erator)S(top)R(un) to false by default          GLW3U404.8     
ARCHERR=false     # set ARCH(ive)ERR(or) to false be default               GLW3U404.9     
RUN_DETS=" $QSUB_REQNAME,$LOGNAME,$RUNID "                                 GLW3U404.10    
# Move restartinfo to $OPSYSERR if :-                                      GLW3U404.11    
#             1)CRUN and AUTOPP_RESTART is true                            GLW3U404.12    
#             2)Model is closing cleanly                                   GLW3U404.13    
#             3)Model has failed or Archiving has failed                   GLW3U404.14    
*ENDIF                                                                     GLW1U400.29    
if test $CC -ne 0                                                          qsmain.750   
then                                                                       qsmain.751   
  echo "$ARG1: Run failed"                                                 PXQSMAIN.10    
  echo "$ARG1: Information on which CPU was in use follows:-"              PXQSMAIN.11    
# which_cpu -s $LOADMODULE                                                 GEX4U402.153   
  echo                                                                     qsmain.753   
  echo "$ARG1: debug information (if activated) follows :-"                PXQSMAIN.12    
  echo                                                                     qsmain.755   
  debugview $LOADMODULE core                                               GEX4U402.155   
  if $SAVECORE                                                             qsmain.757   
  then                                                                     qsmain.758   
    cp core $COREDUMP                                                      qsmain.759   
    echo "core file copied to $COREDUMP"                                   qsmain.760   
  fi                                                                       qsmain.761   
  rm core                                                                  qsmain.762   
*IF DEF,METOCRAY                                                           GLW1U400.30    
  if $CRPRODRUN                                                            GLW1U400.31    
  then                                                                     GLW1U400.32    
    msgr "Climate Production run $RUN_DETS failed in model" &              GLW3U404.38    
    echo "`date '+%a %d %h %T'` Production run $RUN_DETS"\                 GLW3U404.39    
         " failed in model" >> $CRMSGFILE                                  GLW3U404.40    
                                                                           GLW1U400.40    
  elif $CRDOERUN                                                           GLW1U400.41    
  then                                                                     GLW1U400.42    
    msgi "Climate night run $RUN_DETS failed in model"                     GLW3U404.41    
    echo "`date '+%a %d %h %T'` Night run      $RUN_DETS,"\                GLW3U404.42    
         " failed in model" >> $CRMSGFILE                                  GLW3U404.43    
  fi                                                                       GLW1U400.46    
  if test $TYPE = 'CRUN' and $AUTO_RESTART = 'true'                        GLW3U404.15    
  then                                                                     GLW3U404.16    
    echo "Model failure:restart file moved to $OPSYSERR"                   GLW3U404.17    
     mv $OPSTARTDIR/"$RUNID"* $OPSYSERR                                    GLW3U404.18    
  fi                                                                       GLW3U404.19    
*ENDIF                                                                     GLW1U400.47    
  exit $CC                                                                 qsmain.763   
else                                                                       qsmain.764   
  if $AUTOMATIC_PP                                                         qsmain.765   
  then                                                                     qsmain.766   
    if test $RCSERVER = "T"                                                qsmain.767   
    then                                                                   qsmain.768   
      echo "========================================================="     qsmain.769   
      echo "$ARG1: $RMSERVER"                                              PXQSMAIN.13    
      echo "========================================================="     qsmain.771   
      rm $THIST 2>/dev/null                                                qsmain.772   
*IF DEF,METOCRAY                                                           GLW1U400.48    
                                                                           GSM0U403.129   
      # Determine the reason for failure of the run i.e. archive or        GSM0U403.130   
      # stoprun.  Set ERRTYPE to the appropriate message string.           GSM0U403.131   
      if [[ "$RMSERVER" = *"stoprun:"* ]]                                  GSM0U403.132   
      then                                                                 GSM0U403.133   
        if [[ "$RMSERVER" = *"User"* ]]                                    GSM0U403.134   
        then                                                               GSM0U403.135   
          ERRTYPE='Caused by a user stoprun.'                              GSM0U403.136   
        else                                                               GSM0U403.137   
          ERRTYPE='Caused by an operator stoprun'                          GSM0U403.138   
          OPSR=true                                                        GSM0U403.139   
        fi                                                                 GSM0U403.140   
      else                                                                 GSM0U403.141   
        ERRTYPE='Problem transferring data to the front end.'              GSM0U403.142   
        ARCHERR=true                                                       GSM0U403.143   
      fi                                                                   GSM0U403.144   
                                                                           GSM0U403.145   
      if $CRPRODRUN                                                        GLW1U400.49    
      then                                                                 GLW1U400.50    
        if [[ "$OPSR" = "true" ]] || [[ "$ARCHERR" = "true" ]]             GSM0U403.147   
        then                                                               GSM0U403.148   
          # send action message to the operator                            GSM0U403.149   
          msgr "Climate production run $RUN_DETS failed. $ERRTYPE" &       GLW3U404.44    
        fi                                                                 GSM0U403.153   
        echo "`date '+%a %d %h %T'`  Production run $RUN_DETS,"\           GLW3U404.45    
        " failed. $ERRTYPE " >> $CRMSGFILE                                 GLW3U404.46    
                                                                           GLW1U400.57    
      elif $CRDOERUN                                                       GLW1U400.58    
      then                                                                 GLW1U400.59    
        if [[ "$OPSR" = "true" ]] || [[ "$ARCHERR" = "true" ]]             GSM0U403.155   
        then                                                               GSM0U403.156   
          # send informative message to the operator                       GSM0U403.157   
          msgi "Climate night run $RUN_DETS failed.  $ERRTYPE"             GLW3U404.47    
        fi                                                                 GSM0U403.159   
                                                                           GSM0U403.160   
        echo "`date '+%a %d %h %T'`  Night run     $RUN_DETS,"\            GLW3U404.48    
         " failed. $ERRTYPE " >> $CRMSGFILE                                GLW3U404.49    
      fi                                                                   GLW3U404.20    
      if test $ARCHERR = 'true'                                            GLW3U404.21    
      then                                                                 GLW3U404.22    
        if test $TYPE = 'CRUN' and $AUTO_RESTART = 'true'                  GLW3U404.23    
        then                                                               GLW3U404.24    
          echo "Archiving failure:restart file moved to $OPARCHERR"        GLW3U404.25    
          mv $OPSTARTDIR/"$RUNID"* $OPARCHERR                              GLW3U404.26    
        fi                                                                 GLW3U404.27    
      fi                                                                   GLW1U400.63    
*ENDIF                                                                     GLW1U400.64    
    else                                                                   qsmain.773   
      rm $THIST 2>/dev/null                                                qsmain.774   
      echo "$ARG1: Run terminated normally"                                PXQSMAIN.14    
*IF DEF,METOCRAY                                                           GLW1U400.65    
      if $CRPRODRUN                                                        GLW1U400.66    
      then                                                                 GLW1U400.67    
        msgi "Climate production run $QSUB_REQNAME finished normally"      GLW1U400.68    
      fi                                                                   GLW1U400.69    
*ENDIF                                                                     GLW1U400.70    
    fi                                                                     qsmain.776   
  else                                                                     qsmain.777   
    rm $THIST 2>/dev/null                                                  qsmain.778   
    echo "$ARG1: Run terminated normally"                                  PXQSMAIN.15    
*IF DEF,METOCRAY                                                           GLW1U400.71    
    if $CRPRODRUN                                                          GLW1U400.72    
    then                                                                   GLW1U400.73    
      msgi "Climate production run $QSUB_REQNAME finished normally"        GLW1U400.74    
    fi                                                                     GLW1U400.75    
*ENDIF                                                                     GLW1U400.76    
  fi                                                                       qsmain.780   
fi                                                                         qsmain.781   
#L----------------------------------------------------------------------   qsmain.782   
