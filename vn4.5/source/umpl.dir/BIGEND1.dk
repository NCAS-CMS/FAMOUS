*IF DEF,BIGEND                                                             BIGEND1.2     
C ******************************COPYRIGHT******************************    GTS2F400.469   
C (c) CROWN COPYRIGHT 1995, METEOROLOGICAL OFFICE, All Rights Reserved.    GTS2F400.470   
C                                                                          GTS2F400.471   
C Use, duplication or disclosure of this code is subject to the            GTS2F400.472   
C restrictions as set forth in the contract.                               GTS2F400.473   
C                                                                          GTS2F400.474   
C                Meteorological Office                                     GTS2F400.475   
C                London Road                                               GTS2F400.476   
C                BRACKNELL                                                 GTS2F400.477   
C                Berkshire UK                                              GTS2F400.478   
C                RG12 2SZ                                                  GTS2F400.479   
C                                                                          GTS2F400.480   
C If no contract has been raised with this copy of the code, the use,      GTS2F400.481   
C duplication or disclosure of it is strictly prohibited.  Permission      GTS2F400.482   
C to do so must first be obtained in writing from the Head of Numerical    GTS2F400.483   
C Modelling at the above address.                                          GTS2F400.484   
C ******************************COPYRIGHT******************************    GTS2F400.485   
C                                                                          GTS2F400.486   
#include <stdio.h>                                                         BIGEND1.3     
                                                                           BIGEND1.4     
/* Program to reverse the order of bytes in each word of a file.       *   BIGEND1.5     
/* The program can be used to swap UM data files between Big-endian    *   BIGEND1.6     
/* and Little-endian IEEE data formats and vice versa.                 *   BIGEND1.7     
/* Both 32-bit and 64-bit word lengths recognised                      *   BIGEND1.8     
                                                                           BIGEND1.9     
                 /* Written by A. Dickinson 9/9/93 */                      BIGEND1.10    
                                                                           BIGEND1.11    
static int precision;                                                      BIGEND1.12    
                                                                           BIGEND1.13    
main(int argc, char *argv[])                                               BIGEND1.14    
{                                                                          BIGEND1.15    
    FILE *fp1,*fp2;                                                        BIGEND1.16    
    void filecopy(FILE *, FILE *);                                         BIGEND1.17    
    char *prog=argv[0];                                                    BIGEND1.18    
    char *prec=argv[1];                                                    BIGEND1.19    
                                                                           BIGEND1.20    
    if(argc!=4){                                                           BIGEND1.21    
        fprintf(stderr,"%s: usage: -32^-64 file1 file2\n",prog);           BIGEND1.22    
        exit(1);                                                           BIGEND1.23    
     }                                                                     BIGEND1.24    
                                                                           BIGEND1.25    
    if(strcmp(prec,  "-32") == 0){                                         BIGEND1.26    
       precision=32;                                                       BIGEND1.27    
    }                                                                      BIGEND1.28    
    else if(strcmp(prec, "-64") == 0){                                     BIGEND1.29    
       precision=64;                                                       BIGEND1.30    
    }                                                                      BIGEND1.31    
    else{                                                                  BIGEND1.32    
       fprintf(stderr,"%s: usage: -32^-64 file1 file2\n",prog);            BIGEND1.33    
       exit(2);                                                            BIGEND1.34    
    }                                                                      BIGEND1.35    
                                                                           BIGEND1.36    
    if((fp1 = fopen(argv[2],"r")) == NULL){                                BIGEND1.37    
        fprintf(stderr,"%s: can't open %s\n",prog,argv[1]);                BIGEND1.38    
        exit(3);                                                           BIGEND1.39    
    }                                                                      BIGEND1.40    
                                                                           BIGEND1.41    
    if((fp2 = fopen(argv[3],"w")) == NULL){                                BIGEND1.42    
        fprintf(stderr,"%s: can't open %s\n",prog,argv[2]);                BIGEND1.43    
        exit(4);                                                           BIGEND1.44    
    }                                                                      BIGEND1.45    
                                                                           BIGEND1.46    
    filecopy(fp1,fp2);                                                     BIGEND1.47    
    fclose(fp1);                                                           BIGEND1.48    
    fclose(fp2);                                                           BIGEND1.49    
                                                                           BIGEND1.50    
    if(ferror(fp2)){                                                       BIGEND1.51    
        fprintf(stderr,"%s: error writing %s\n",prog,argv[2]);             BIGEND1.52    
        exit(4);                                                           BIGEND1.53    
    }                                                                      BIGEND1.54    
                                                                           BIGEND1.55    
    exit(0);                                                               BIGEND1.56    
                                                                           BIGEND1.57    
}                                                                          BIGEND1.58    
                                                                           BIGEND1.59    
void filecopy(FILE*ifp, FILE *ofp)                                         BIGEND1.60    
                                                                           BIGEND1.61    
{                                                                          BIGEND1.62    
    int i,c,c1,c2,c3,c4;                                                   BIGEND1.63    
    int c5,c6,c7,c8;                                                       BIGEND1.64    
                                                                           BIGEND1.65    
    i=0;                                                                   BIGEND1.66    
    while((c1 = getc(ifp)) != EOF){                                        BIGEND1.67    
        c2=getc(ifp); c3=getc(ifp); c4=getc(ifp);                          BIGEND1.68    
        if(precision == 64){                                               BIGEND1.69    
           c5=getc(ifp); c6=getc(ifp); c7=getc(ifp); c8=getc(ifp);         BIGEND1.70    
           putc(c8,ofp);putc(c7,ofp);putc(c6,ofp);putc(c5,ofp);            BIGEND1.71    
        }                                                                  BIGEND1.72    
        putc(c4,ofp);                                                      BIGEND1.73    
        putc(c3,ofp);                                                      BIGEND1.74    
        putc(c2,ofp);                                                      BIGEND1.75    
        putc(c1,ofp);                                                      BIGEND1.76    
                                                                           BIGEND1.77    
                                                                           BIGEND1.78    
                                                                           BIGEND1.79    
    }                                                                      BIGEND1.80    
                                                                           BIGEND1.81    
}                                                                          BIGEND1.82    
*ENDIF                                                                     BIGEND1.83    
