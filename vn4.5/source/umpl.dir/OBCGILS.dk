*IF DEF,OCEAN                                                              @DYALLOC.4689  
C ******************************COPYRIGHT******************************    GTS2F400.6913  
C (c) CROWN COPYRIGHT 1995, METEOROLOGICAL OFFICE, All Rights Reserved.    GTS2F400.6914  
C                                                                          GTS2F400.6915  
C Use, duplication or disclosure of this code is subject to the            GTS2F400.6916  
C restrictions as set forth in the contract.                               GTS2F400.6917  
C                                                                          GTS2F400.6918  
C                Meteorological Office                                     GTS2F400.6919  
C                London Road                                               GTS2F400.6920  
C                BRACKNELL                                                 GTS2F400.6921  
C                Berkshire UK                                              GTS2F400.6922  
C                RG12 2SZ                                                  GTS2F400.6923  
C                                                                          GTS2F400.6924  
C If no contract has been raised with this copy of the code, the use,      GTS2F400.6925  
C duplication or disclosure of it is strictly prohibited.  Permission      GTS2F400.6926  
C to do so must first be obtained in writing from the Head of Numerical    GTS2F400.6927  
C Modelling at the above address.                                          GTS2F400.6928  
C ******************************COPYRIGHT******************************    GTS2F400.6929  
C                                                                          GTS2F400.6930  
C*LL  Subroutine OBCGILS                                                   OBCGILS.3     
CLL                                                                        OBCGILS.4     
CLL   Can run on any compiler accepting lower case variables.              OBCGILS.5     
CLL                                                                        OBCGILS.6     
CLL   The code must be precompiled by the UPDOC system.                    OBCGILS.7     
CLL   Option 1 selects the code for a Gill open southern boundary.         OBCGILS.8     
CLL                                                                        OBCGILS.9     
CLL   Author:  D.J.Carrington                                              OBCGILS.10    
CLL   Date:  9 October 1990                                                OBCGILS.11    
CLL   Reviewer:  C.Gordon                                                  OBCGILS.12    
CLL   Date:  16 October 1990                                               OBCGILS.13    
CLL   Version 1.0                                                          OBCGILS.14    
CLL                                                                        OBCGILS.15    
CLL   External documentation:                                              OBCGILS.16    
CLL     Unified Model Documentation Paper No. 48.                          OBCGILS.17    
CLL                                                                        OBCGILS.18    
CLL   Naming convention of variables: Cox naming convention is used,       OBCGILS.19    
CLL     with the addition that lower-case variables are                    OBCGILS.20    
CLL     local to the routine.                                              OBCGILS.21    
CLL                                                                        OBCGILS.22    
CLL   Purpose of Subroutine:                                               OBCGILS.23    
CLL     Creates an open southern boundary for tracers using the            OBCGILS.24    
CLL     "implicit" scheme of Gill.                                         OBCGILS.25    
CLL                                                                        OBCGILS.26    
CLLEND------------------------------------------------------------------   OBCGILS.27    
C*                                                                         OBCGILS.28    
C*L---- Arguments ------------------------------------------------------   OBCGILS.29    
C                                                                          OBCGILS.30    
      SUBROUTINE OBCGILS                                                   OBCGILS.31    
     &  (IMT,JMT,KM,NT,FM,FMM,DYT,T,TP,TM,TB,TBP,TBM,TBOUND_S)             OBCGILS.32    
C                                                                          OBCGILS.33    
      IMPLICIT NONE                                                        OBCGILS.34    
C                                                                          OBCGILS.35    
      INTEGER                                                              OBCGILS.36    
     &  I,K,M,IMT,JMT,KM,NT                                                OBCGILS.37    
C                                                                          OBCGILS.38    
      REAL                                                                 OBCGILS.39    
     &  T(IMT,KM,NT),TP(IMT,KM,NT),TM(IMT,KM,NT),                          OBCGILS.40    
     &  TB(IMT,KM,NT),TBP(IMT,KM,NT),TBM(IMT,KM,NT),                       OBCGILS.41    
     &  TBOUND_S(IMT,KM,NT),                                               OBCGILS.42    
     &  FM(IMT,KM),FMM(IMT,KM),DYT(JMT),                                   OBCGILS.43    
     &  lamda,     ! constant in Eq. (1.4)                                 OBCGILS.44    
     &  mu,        ! relative weighting give to Tj in Eq. (1.8)            OBCGILS.45    
     &  x,         ! }                                                     OBCGILS.46    
     &  y,         ! } local constants                                     OBCGILS.47    
     &  z          ! }                                                     OBCGILS.48    
C*                                                                         OBCGILS.49    
C                                                                          OBCGILS.50    
C                                                                          OBCGILS.51    
CL  Set effective mask for Row 1 to be equal to mask for Row 2.            OBCGILS.52    
C                                                                          OBCGILS.53    
      DO 10 K=1,KM                                                         OBCGILS.54    
      DO 10 I=1,IMT                                                        OBCGILS.55    
        FMM(I,K)=FM(I,K)                                                   OBCGILS.56    
 10   CONTINUE                                                             OBCGILS.57    
C                                                                          OBCGILS.58    
CL  Set coefficients                                                       OBCGILS.59    
C                                                                          OBCGILS.60    
      lamda=-1.E-5                                                         OBCGILS.61    
      mu=0.96                                                              OBCGILS.62    
C                                                                          OBCGILS.63    
      x=1.-(1.-mu)*lamda*DYT(1)                                            OBCGILS.64    
      y=1.+(1.-mu)*lamda*DYT(1)                                            OBCGILS.65    
      z=2.*lamda*DYT(1)                                                    OBCGILS.66    
C                                                                          OBCGILS.67    
CL  Calculate effective Row 1 Temperature (Eq. (1.8))                      OBCGILS.68    
C                                                                          OBCGILS.69    
      M=1                                                                  OBCGILS.70    
      DO 20 K=1,KM                                                         OBCGILS.71    
      DO 20 I=1,IMT                                                        OBCGILS.72    
        TM(I,K,M)=(1./x)*(TP(I,K,M)*y+z*(mu*T(I,K,M)-TBOUND_S(I,K,M)))     OBCGILS.73    
        TM(I,K,M)=FMM(I,K)*TM(I,K,M)                                       OBCGILS.74    
        TBM(I,K,M)=(1./x)*(TBP(I,K,M)*y+z*(mu*TB(I,K,M)-TBOUND_S(I,K,M))   OBCGILS.75    
     * )                                                                   OBCGILS.76    
        TBM(I,K,M)=FMM(I,K)*TBM(I,K,M)                                     OBCGILS.77    
 20   CONTINUE                                                             OBCGILS.78    
C                                                                          OBCGILS.79    
CL  Calculate effective Row 1 Salinity (Eq. (1.8))                         OBCGILS.80    
C                                                                          OBCGILS.81    
      M=2                                                                  OBCGILS.82    
      DO 30 K=1,KM                                                         OBCGILS.83    
      DO 30 I=1,IMT                                                        OBCGILS.84    
        TM(I,K,M)=(1./x)*(TP(I,K,M)*y+z*(mu*T(I,K,M)-                      OBCGILS.85    
     &   (TBOUND_S(I,K,M)/1000.-0.035)))                                   OBCGILS.86    
        TM(I,K,M)=FMM(I,K)*TM(I,K,M)                                       OBCGILS.87    
        TBM(I,K,M)=(1./x)*(TBP(I,K,M)*y+z*(mu*TB(I,K,M)-                   OBCGILS.88    
     &   (TBOUND_S(I,K,M)/1000.-0.035)))                                   OBCGILS.89    
      TBM(I,K,M)=FMM(I,K)*TBM(I,K,M)                                       OBCGILS.90    
 30   CONTINUE                                                             OBCGILS.91    
C                                                                          OBCGILS.92    
      RETURN                                                               OBCGILS.93    
      END                                                                  OBCGILS.94    
*ENDIF                                                                     @DYALLOC.4690  
