*IF DEF,MPP                                                                PARFFTS.2     
!LL 4.2      16/08/96 Removed filt_wave_no_common variable.                APB0F402.89    
!LL                                                        P.Burton        APB0F402.90    
!LL 4.4      08/08/97 Removed sarr_len and rarr_len arrays                 GPB2F404.267   
!LL                   Added filt_level variable                            GPB2F404.268   
!LL                   Increased parameters to maximum likely values        GPB2F404.269   
!LL                                               P.Burton                 GPB2F404.270   
                                                                           APB0F402.91    
! Called by SET_FIL and FILTER - used to communicate the decomposition     PARFFTS.3     
! of data in the ffts                                                      PARFFTS.4     
! NB : Comdeck PARVARS must be *CALLed before this comdeck.                PARFFTS.5     
                                                                           PARFFTS.6     
      INTEGER MAX_ROW_LEN,MAX_ROWS,MAX_LEVELS,MAX_ROWS_TO_FILTER           PARFFTS.7     
      PARAMETER(MAX_ROW_LEN=500,MAX_ROWS=500,MAX_LEVELS=60)                GPB2F404.271   
      PARAMETER(MAX_ROWS_TO_FILTER=0.5*MAX_ROWS*MAX_LEVELS)                PARFFTS.9     
                                                                           PARFFTS.10    
! Common block for communication between SETFILT and FILTER                PARFFTS.11    
! We set up these arrays:                                                  PARFFTS.12    
! filt_send_map(7,n_items_to_send,fld_type) - contains information about   GPB2F402.186   
! the rows of data that this processor has to send off to be filtered      PARFFTS.14    
!                                                                          PARFFTS.15    
! filt_recv_map(7,n_items_to_send,fld_type) - contains information about   GPB2F402.187   
! the rows of data that this processor receives to be filtered             PARFFTS.17    
!                                                                          PARFFTS.18    
! filt_info(row_number,fld_type) - contains information about the          PARFFTS.19    
! rows of data that this processor will be filtering                       PARFFTS.20    
!                                                                          PARFFTS.21    
                                                                           PARFFTS.22    
! Two sets of everything - one for P_FIELDs and one for U_FIELDs.          PARFFTS.23    
                                                                           PARFFTS.24    
      INTEGER                                                              PARFFTS.25    
     & south_filt_p_row  ! southern filtered p row                         PARFFTS.26    
                                                                           PARFFTS.27    
                                                                           PARFFTS.30    
      REAL                                                                 PARFFTS.31    
     & global_trigs(MAX_ROW_LEN) ! global version of TRIGS array           PARFFTS.32    
                                                                           PARFFTS.33    
      INTEGER                                                              PARFFTS.34    
     & fft_rows(2)   ! total number of rows I will fft                     PARFFTS.35    
                                                                           PARFFTS.36    
      LOGICAL                                                              PARFFTS.37    
     &  filter_off ! set to true if no filtering to be done (usually       PARFFTS.38    
!                    indicates an error has occurred                       PARFFTS.39    
                                                                           PARFFTS.40    
      INTEGER filt_smap_len, filt_rmap_len                                 PARFFTS.41    
      PARAMETER (filt_smap_len = MAX_ROWS_TO_FILTER,                       PARFFTS.42    
     &           filt_rmap_len = MAX_ROWS_TO_FILTER)                       PARFFTS.43    
      INTEGER filt_send_map(7,filt_smap_len,2),                            GPB2F402.188   
     &        filt_recv_map(7,filt_rmap_len,2),                            GPB2F402.189   
     &        n_items_to_send(2), n_items_to_recv(2),                      PARFFTS.46    
     &        filt_info(MAX_ROWS_TO_FILTER,2),                             PARFFTS.48    
     &        filt_level(MAX_ROWS_TO_FILTER,2),                            GPB2F404.272   
     &        filt_send_start(filt_smap_len,2),                            PARFFTS.49    
     &        filt_recv_start(filt_smap_len,2),                            PARFFTS.50    
     &        filt_send_max(filt_smap_len,2),                              PARFFTS.51    
     &        filt_recv_max(filt_smap_len,2)                               PARFFTS.52    
      COMMON /PAR_FFT/ south_filt_p_row,                                   APB0F402.92    
     &                 global_trigs,                                       PARFFTS.54    
     &                 filt_send_map, filt_recv_map,                       GPB2F404.273   
     &                 n_items_to_send, n_items_to_recv, filt_info,        PARFFTS.56    
     &                 filt_level,                                         GPB2F404.274   
     &                 fft_rows, filter_off,                               PARFFTS.57    
     &                 filt_send_start, filt_recv_start,                   PARFFTS.58    
     &                 filt_send_max, filt_recv_max                        PARFFTS.59    
                                                                           PARFFTS.60    
! End COMDECK PARFFTS                                                      PARFFTS.61    
                                                                           PARFFTS.62    
*ENDIF                                                                     PARFFTS.63    
