*IF DEF,OCEAN                                                              @DYALLOC.4691  
C ******************************COPYRIGHT******************************    GTS2F400.6895  
C (c) CROWN COPYRIGHT 1995, METEOROLOGICAL OFFICE, All Rights Reserved.    GTS2F400.6896  
C                                                                          GTS2F400.6897  
C Use, duplication or disclosure of this code is subject to the            GTS2F400.6898  
C restrictions as set forth in the contract.                               GTS2F400.6899  
C                                                                          GTS2F400.6900  
C                Meteorological Office                                     GTS2F400.6901  
C                London Road                                               GTS2F400.6902  
C                BRACKNELL                                                 GTS2F400.6903  
C                Berkshire UK                                              GTS2F400.6904  
C                RG12 2SZ                                                  GTS2F400.6905  
C                                                                          GTS2F400.6906  
C If no contract has been raised with this copy of the code, the use,      GTS2F400.6907  
C duplication or disclosure of it is strictly prohibited.  Permission      GTS2F400.6908  
C to do so must first be obtained in writing from the Head of Numerical    GTS2F400.6909  
C Modelling at the above address.                                          GTS2F400.6910  
C ******************************COPYRIGHT******************************    GTS2F400.6911  
C                                                                          GTS2F400.6912  
C*LL  Subroutine OBCGILN                                                   OBCGILN.3     
CLL                                                                        OBCGILN.4     
CLL   Can run on any compiler accepting lower case variables.              OBCGILN.5     
CLL                                                                        OBCGILN.6     
CLL   The code must be precompiled by the UPDOC system.                    OBCGILN.7     
CLL   Option 2 selects the code for a Gill open northern boundary.         OBCGILN.8     
CLL                                                                        OBCGILN.9     
CLL   Author:  D.J.Carrington                                              OBCGILN.10    
CLL   Date:  9 October 1990                                                OBCGILN.11    
CLL   Reviewer:  C.Gordon                                                  OBCGILN.12    
CLL   Date:  16 October 1990                                               OBCGILN.13    
CLL   Version 1.0                                                          OBCGILN.14    
CLL                                                                        OBCGILN.15    
CLL   External documentation:                                              OBCGILN.16    
CLL     Unified Model Documentation Paper No. 48.                          OBCGILN.17    
CLL                                                                        OBCGILN.18    
CLL   Naming convention of variables: Cox naming convention is used,       OBCGILN.19    
CLL     with the addition that lower-case variables are                    OBCGILN.20    
CLL     local to the routine.                                              OBCGILN.21    
CLL                                                                        OBCGILN.22    
CLL   Purpose of Subroutine:                                               OBCGILN.23    
CLL     Creates an open northern boundary for tracers using the            OBCGILN.24    
CLL     "implicit" scheme of Gill.                                         OBCGILN.25    
CLL                                                                        OBCGILN.26    
CLLEND------------------------------------------------------------------   OBCGILN.27    
C*                                                                         OBCGILN.28    
C*L---- Arguments ------------------------------------------------------   OBCGILN.29    
C                                                                          OBCGILN.30    
      SUBROUTINE OBCGILN                                                   OBCGILN.31    
     &  (IMT,JMT,KM,NT,FM,FMP,DYT,T,TP,TM,TB,TBP,TBM,TBOUND_N)             OBCGILN.32    
C                                                                          OBCGILN.33    
      IMPLICIT NONE                                                        OBCGILN.34    
C                                                                          OBCGILN.35    
      INTEGER                                                              OBCGILN.36    
     &  I,K,M,IMT,JMT,KM,NT                                                OBCGILN.37    
C                                                                          OBCGILN.38    
      REAL                                                                 OBCGILN.39    
     &  T(IMT,KM,NT),TP(IMT,KM,NT),TM(IMT,KM,NT),                          OBCGILN.40    
     &  TB(IMT,KM,NT),TBP(IMT,KM,NT),TBM(IMT,KM,NT),                       OBCGILN.41    
     &  TBOUND_N(IMT,KM,NT),                                               OBCGILN.42    
     &  FM(IMT,KM),FMP(IMT,KM),DYT(JMT),                                   OBCGILN.43    
     &  lamda,     ! constant in Eq. (1.4)                                 OBCGILN.44    
     &  mu,        ! relative weighting give to Tj in Eq. (1.8)            OBCGILN.45    
     &  x,         ! }                                                     OBCGILN.46    
     &  y,         ! } local constants                                     OBCGILN.47    
     &  z          ! }                                                     OBCGILN.48    
C*                                                                         OBCGILN.49    
C                                                                          OBCGILN.50    
C                                                                          OBCGILN.51    
CL  Set effective mask for Row JMT to be equal to mask for Row JMTM1.      OBCGILN.52    
C                                                                          OBCGILN.53    
      DO 10 K=1,KM                                                         OBCGILN.54    
      DO 10 I=1,IMT                                                        OBCGILN.55    
        FMP(I,K)=FM(I,K)                                                   OBCGILN.56    
 10   CONTINUE                                                             OBCGILN.57    
C                                                                          OBCGILN.58    
CL  Set coefficients                                                       OBCGILN.59    
C                                                                          OBCGILN.60    
      lamda=-1.E-5                                                         OBCGILN.61    
      mu=0.96                                                              OBCGILN.62    
C                                                                          OBCGILN.63    
      x=1.-(1.-mu)*lamda*DYT(JMT)                                          OBCGILN.64    
      y=1.+(1.-mu)*lamda*DYT(JMT)                                          OBCGILN.65    
      z=2.*lamda*DYT(JMT)                                                  OBCGILN.66    
C                                                                          OBCGILN.67    
CL  Calculate effective Row JMT Temperature (Eq. (1.8))                    OBCGILN.68    
C                                                                          OBCGILN.69    
      M=1                                                                  OBCGILN.70    
      DO 20 K=1,KM                                                         OBCGILN.71    
      DO 20 I=1,IMT                                                        OBCGILN.72    
        TP(I,K,M)=(1./x)*(TM(I,K,M)*y+z*(mu*T(I,K,M)-TBOUND_N(I,K,M)))     OBCGILN.73    
        TP(I,K,M)=FMP(I,K)*TP(I,K,M)                                       OBCGILN.74    
        TBP(I,K,M)=(1./x)*(TBM(I,K,M)*y+z*(mu*TB(I,K,M)-TBOUND_N(I,K,M))   OBCGILN.75    
     * )                                                                   OBCGILN.76    
        TBP(I,K,M)=FMP(I,K)*TBP(I,K,M)                                     OBCGILN.77    
 20   CONTINUE                                                             OBCGILN.78    
C                                                                          OBCGILN.79    
CL  Calculate effective Row JMT Salinity (Eq. (1.8))                       OBCGILN.80    
C                                                                          OBCGILN.81    
      M=2                                                                  OBCGILN.82    
      DO 30 K=1,KM                                                         OBCGILN.83    
      DO 30 I=1,IMT                                                        OBCGILN.84    
        TP(I,K,M)=(1./x)*(TM(I,K,M)*y+z*(mu*T(I,K,M)-                      OBCGILN.85    
     &   (TBOUND_N(I,K,M)/1000.-0.035)))                                   OBCGILN.86    
        TP(I,K,M)=FMP(I,K)*TP(I,K,M)                                       OBCGILN.87    
        TBP(I,K,M)=(1./x)*(TBM(I,K,M)*y+z*(mu*TB(I,K,M)-                   OBCGILN.88    
     &   (TBOUND_N(I,K,M)/1000.-0.035)))                                   OBCGILN.89    
        TBP(I,K,M)=FMP(I,K)*TBP(I,K,M)                                     OBCGILN.90    
 30   CONTINUE                                                             OBCGILN.91    
C                                                                          OBCGILN.92    
      RETURN                                                               OBCGILN.93    
      END                                                                  OBCGILN.94    
*ENDIF                                                                     @DYALLOC.4692  
