*IF DEF,SCMA                                                               S_PRNIDT.2     
C *****************************COPYRIGHT******************************     S_PRNIDT.3     
C (c) CROWN COPYRIGHT 1998, METEOROLOGICAL OFFICE, All Rights Reserved.    S_PRNIDT.4     
C                                                                          S_PRNIDT.5     
C Use, duplication or disclosure of this code is subject to the            S_PRNIDT.6     
C restrictions as set forth in the contract.                               S_PRNIDT.7     
C                                                                          S_PRNIDT.8     
C                Meteorological Office                                     S_PRNIDT.9     
C                London Road                                               S_PRNIDT.10    
C                BRACKNELL                                                 S_PRNIDT.11    
C                Berkshire UK                                              S_PRNIDT.12    
C                RG12 2SZ                                                  S_PRNIDT.13    
C                                                                          S_PRNIDT.14    
C If no contract has been raised with this copy of the code, the use,      S_PRNIDT.15    
C duplication or disclosure of it is strictly prohibited.  Permission      S_PRNIDT.16    
C to do so must first be obtained in writing from the Head of Numerical    S_PRNIDT.17    
C Modelling at the above address.                                          S_PRNIDT.18    
C ******************************COPYRIGHT******************************    S_PRNIDT.19    
C                                                                          S_PRNIDT.20    
C-----SUBROUTINE PRINT_INITDATA---------------------------------------     S_PRNIDT.21    
C                                                                          S_PRNIDT.22    
C Version 1 written by: J.LEAN, 10/6/91.                                   S_PRNIDT.23    
C                                                                          S_PRNIDT.24    
C Code reviewed by: ??                                                     S_PRNIDT.25    
C                                                                          S_PRNIDT.26    
C Modification History:                                                    S_PRNIDT.27    
C     Version   Date Change                                                S_PRNIDT.28    
C     4.5       06/98 (1)SCM integrated as a standard configuration        S_PRNIDT.29    
C                          of the UM.                                      S_PRNIDT.30    
C                        New arguments added, comdecks removed.            S_PRNIDT.31    
C                        Multiple columns introduced                       S_PRNIDT.32    
C                          JC Thil.                                        S_PRNIDT.33    
C                                                                          S_PRNIDT.34    
C*********************************************************************     S_PRNIDT.35    
C     *                                                            *       S_PRNIDT.36    
C     *  Single Column Unified Model version.                      *       S_PRNIDT.37    
C     *                                                            *       S_PRNIDT.38    
C     **************************************************************       S_PRNIDT.39    
C                                                                          S_PRNIDT.40    
C                                                                          S_PRNIDT.41    
C     Purpose: To print out initial run data for SCM integration           S_PRNIDT.42    
C                                                                          S_PRNIDT.43    
C     Documentation: ??                                                    S_PRNIDT.44    
C                                                                          S_PRNIDT.45    
C---------------------------------------------------------------------     S_PRNIDT.46    
      SUBROUTINE PRINT_INITDATA(                                           S_PRNIDT.47    
     &  points, nlevs, nwet, nozone,                                       S_PRNIDT.48    
     &  nfor, nbl_levs, nsoilt_levs, nsoilm_levs, ntrop,                   S_PRNIDT.49    
     &  year_init, dayno_init, ndayin, nminin, nsecin,                     S_PRNIDT.50    
     &  timestep, ntrad,                                                   S_PRNIDT.51    
     &  lat, long, ancyc, local_time, change_clim, exname_in,              S_PRNIDT.52    
     &  runno_in, exname_out, runno_out, veg_type, soil_type,              S_PRNIDT.53    
     &  altsoil, tconst, dtday, dtyear, land_mask, obs, geoforce,          S_PRNIDT.54    
     &  geoinit, stats, noforce, tapein, tapeout, init_m_smcl,             S_PRNIDT.55    
     &  init_m_fsmc, init_m_sth, smcli, fsmc, sth, ug,vg,                  S_PRNIDT.56    
     &  conv_mode, ppn_mode, lw_mode, sw_mode, bl_mode, hyd_mode,          S_PRNIDT.57    
     &  altdat, tls, qls, uls, vls, ichgf, ilscnt, flux_h, flux_e,         S_PRNIDT.58    
     &  ui, vi, ti, qi, ccai, iccbi, iccti, pstari, canopyi, smci,         S_PRNIDT.59    
     &  snodepi, t_deep_soili, tstari, z0mseai, ntrad1, start_diagday,     S_PRNIDT.60    
     &  radcloud_fixed, cca_rad, iccb_rad, icct_rad, ccwpin_rad,           S_PRNIDT.61    
     &  layer_cloud_rad, qcl_rad, time_init, o3, nout, numnout)            S_PRNIDT.62    
C                                                                          S_PRNIDT.63    
C---------------------------------------------------------------------     S_PRNIDT.64    
C     Arguments                                                            S_PRNIDT.65    
C---------------------------------------------------------------------     S_PRNIDT.66    
C                                                                          S_PRNIDT.67    
      Integer                                                              S_PRNIDT.68    
     &  points                  ! IN leading dimension of SCM arrays.      S_PRNIDT.69    
     &  ,nlevs                  ! IN no of levels.                         S_PRNIDT.70    
     &  ,nwet                   ! IN no of model levels in which Q         S_PRNIDT.71    
                                !   is set.                                S_PRNIDT.72    
     &  ,nfor                   ! IN Number terms for observational        S_PRNIDT.73    
                                !   forcing                                S_PRNIDT.74    
     &  ,nbl_levs               ! IN Number of Boundary layer levels       S_PRNIDT.75    
     &  ,nsoilt_levs            ! IN Number of soil temperature            S_PRNIDT.76    
                                !   levels                                 S_PRNIDT.77    
     &  ,nsoilm_levs            ! IN Number of soil moisture levels        S_PRNIDT.78    
     &  ,ntrop                  ! IN Max number of levels in the           S_PRNIDT.79    
                                !   troposphere                            S_PRNIDT.80    
     &  ,nozone                 ! IN no of model levels in which           S_PRNIDT.81    
                                !   ozone is set.                          S_PRNIDT.82    
                                                                           S_PRNIDT.83    
C                                                                          S_PRNIDT.84    
      Logical                                                              S_PRNIDT.85    
     &  altsoil                 ! T if initial soil temperature            S_PRNIDT.86    
                                !  profile is to be input rather           S_PRNIDT.87    
                                !  than calculated from INITSOIL           S_PRNIDT.88    
     &  ,altdat                 ! T if alternative initial profiles        S_PRNIDT.89    
                                !  are to be input for STATS forcing       S_PRNIDT.90    
     &  ,ancyc                  ! T if annual cycle req'd                  S_PRNIDT.91    
                                !  (ie. radiation input then               S_PRNIDT.92    
                                !  varies throughout year)                 S_PRNIDT.93    
     &  ,geoforce               ! T if geostrophic forcing.                S_PRNIDT.94    
     &  ,geoinit                ! T if initialising dump to                S_PRNIDT.95    
                                !  geostrophic.                            S_PRNIDT.96    
     &  ,init_m_smcl            ! MOSES initialisation by input of         S_PRNIDT.97    
                                !  actual soil moisture in layers          S_PRNIDT.98    
     &  ,init_m_fsmc            ! MOSES initialisation by input of         S_PRNIDT.99    
                                !  soil moisture stress factor.            S_PRNIDT.100   
     &  ,init_m_sth             ! MOSES initialisation by input of         S_PRNIDT.101   
                                !  soil moisture in layers as a            S_PRNIDT.102   
                                !  fraction of saturation.                 S_PRNIDT.103   
     &  ,land_mask(points)      ! T for a land point                       S_PRNIDT.104   
     &  ,local_time             ! T if diagnostics required                S_PRNIDT.105   
                                !  for local time rather than GMT          S_PRNIDT.106   
     &  ,noforce                ! T if no large-scale                      S_PRNIDT.107   
                                !  forcing used                            S_PRNIDT.108   
     &  ,obs                    ! T if observational                       S_PRNIDT.109   
                                !  large-scale forcing used                S_PRNIDT.110   
     &  ,radcloud_fixed         ! T if clouds to fixed to input values     S_PRNIDT.111   
                                !  for radiation                           S_PRNIDT.112   
     &  ,stats                  ! T if statistical                         S_PRNIDT.113   
                                !  large-scale forcing used                S_PRNIDT.114   
     &  ,tapein                 ! T if initial data is to be read          S_PRNIDT.115   
                                !  from previous run stored on             S_PRNIDT.116   
                                !  tape                                    S_PRNIDT.117   
     &  ,tapeout                ! T if restart information                 S_PRNIDT.118   
                                !  plus diagnostic output to be            S_PRNIDT.119   
                                !  stored on tape                          S_PRNIDT.120   
      Integer                                                              S_PRNIDT.121   
     &  change_clim             ! No. of days between                      S_PRNIDT.122   
                                !  changes of climatological data          S_PRNIDT.123   
                                !  (default=10)                            S_PRNIDT.124   
     &  ,dayno_init             ! Initial day (assume 360                  S_PRNIDT.125   
                                !  day year)                               S_PRNIDT.126   
     &  ,year_init              ! Initial year                             S_PRNIDT.127   
     &  ,iccbi(points)          ! Initial convective cloud base.           S_PRNIDT.128   
     &  ,iccb_rad(points)       ! Fixed convective cloud base.             S_PRNIDT.129   
     &  ,iccti(points)          ! Initial convective cloud top.            S_PRNIDT.130   
     &  ,icct_rad(points)       ! Fixed convective cloud base.             S_PRNIDT.131   
     &  ,ichgf                  ! No. of timesteps between change in       S_PRNIDT.132   
                                !  observational forcing                   S_PRNIDT.133   
     &  ,ilscnt                 ! Counts for change in                     S_PRNIDT.134   
                                !  observational forcing                   S_PRNIDT.135   
     &  ,runno_in               ! Number of run to be read                 S_PRNIDT.136   
                                !  from previous run stored on tape        S_PRNIDT.137   
     &  ,runno_out              ! Number of run to be written              S_PRNIDT.138   
                                !  to tape                                 S_PRNIDT.139   
     &  ,soil_type(points)      ! Soil type code                           S_PRNIDT.140   
                                !  1 Ice                                   S_PRNIDT.141   
                                !  2 Fine                                  S_PRNIDT.142   
                                !  3 Medium                                S_PRNIDT.143   
                                !  4 Coarse                                S_PRNIDT.144   
     &  ,start_diagday          ! Day to start diagnostics( not OBS)       S_PRNIDT.145   
     &  ,veg_type(points)       ! Vegetation type                          S_PRNIDT.146   
                                !  1 Equitorial rainforest                 S_PRNIDT.147   
                                !  2 Pasture and trees                     S_PRNIDT.148   
                                !  3 Coniferous forest                     S_PRNIDT.149   
                                !  4 Tropical savannah                     S_PRNIDT.150   
                                !  5 Pasture                               S_PRNIDT.151   
                                !  6 Arable                                S_PRNIDT.152   
                                !  7 Tundra                                S_PRNIDT.153   
                                !  8 Semi-desert and trees                 S_PRNIDT.154   
                                !  9 Desert                                S_PRNIDT.155   
     &  ,ndayin                 ! No. of days in run                       S_PRNIDT.156   
     &  ,nminin                 ! No. minutes in run                       S_PRNIDT.157   
     &  ,nsecin                 ! No. seconds in run                       S_PRNIDT.158   
     &  ,ntrad                  ! No. of timestep                          S_PRNIDT.159   
                                !  between calls to radiation              S_PRNIDT.160   
     &  ,ntrad1                 ! st timestep radiation called.            S_PRNIDT.161   
     &  ,numnout                ! No. units for output                     S_PRNIDT.162   
     &  ,nout(numnout)          ! Units for output                         S_PRNIDT.163   
                                                                           S_PRNIDT.164   
C     Physics switches                                                     S_PRNIDT.165   
                                                                           S_PRNIDT.166   
      Integer                                                              S_PRNIDT.167   
     &  conv_mode               ! Mode to run convection                   S_PRNIDT.168   
     &  ,ppn_mode               ! Mode to run precipitation                S_PRNIDT.169   
     &  ,lw_mode                ! Mode to run longwave                     S_PRNIDT.170   
     &  ,sw_mode                ! Mode to run shortwave                    S_PRNIDT.171   
     &  ,bl_mode                ! Mode to run boundary layer               S_PRNIDT.172   
     &  ,hyd_mode               ! Mode to run hydrology                    S_PRNIDT.173   
                                                                           S_PRNIDT.174   
      Real                                                                 S_PRNIDT.175   
     &  canopyi(points)         ! Initial canopy water content             S_PRNIDT.176   
     &  ,ccai(points)           ! Initial convective cloud amount          S_PRNIDT.177   
     &  ,cca_rad(points)        ! Fixed convective cloud amount            S_PRNIDT.178   
     &  ,ccwpin_rad(points)     ! Fixed convective cloud water path        S_PRNIDT.179   
     &  ,dtday(points)          ! Amplitudes of daily soil temp.           S_PRNIDT.180   
                                !  cycle used to calculate initial         S_PRNIDT.181   
                                !  soil temperature profile                S_PRNIDT.182   
     &  ,dtyear(points)         ! Amplitudes of annual soil temp.          S_PRNIDT.183   
                                !  cycle used to calculate initial         S_PRNIDT.184   
                                !  soil temperature profile                S_PRNIDT.185   
     &  ,flux_h(points,nfor)    ! OBS calculation used for sensible        S_PRNIDT.186   
                                !  heat flux calculation                   S_PRNIDT.187   
     &  ,flux_e(points,nfor)    ! OBS calculation used for                 S_PRNIDT.188   
                                !  evaporative flux calculation            S_PRNIDT.189   
     &  ,fsmc(points)           ! MOSES soil moisture stress factor        S_PRNIDT.190   
     &  ,lat(points)            ! Lat. of gridpoiny chosen; read           S_PRNIDT.191   
                                !  automatically from climate              S_PRNIDT.192   
                                !  dataset if STATS forcing chosen         S_PRNIDT.193   
     &  ,layer_cloud_rad(points,nwet) ! Layer cloud amount (fraction)      S_PRNIDT.194   
     &  ,long(points)           ! Long. of gridpoint chosen;               S_PRNIDT.195   
                                !  read automatically from climate         S_PRNIDT.196   
                                !  dataset if STATS forcing chosen         S_PRNIDT.197   
     &  ,o3(points,nozone)      ! Ozone values                             S_PRNIDT.198   
     &  ,pstari(points)         ! Inital surface pressure.                 S_PRNIDT.199   
     &  ,qcl_rad(points,nwet)   ! Total cloud water and ice content in     S_PRNIDT.200   
                                !  cloud                                   S_PRNIDT.201   
     &  ,snodepi(points)        ! Initial snow depth.                      S_PRNIDT.202   
     &  ,smci(points)           ! Initial soil moisture content.           S_PRNIDT.203   
     &  ,smcli(points,nsoilm_levs) ! MOSES soil moisture in layers         S_PRNIDT.204   
                                !  initial value                           S_PRNIDT.205   
     &  ,sth(points,nsoilm_levs) ! MOSES soil moisture in layers as        S_PRNIDT.206   
                                !  a fraction of saturation.               S_PRNIDT.207   
     &  ,tconst(points)         ! Annual mean surface temp.                S_PRNIDT.208   
     &  ,timestep               ! Model timestep for all physics           S_PRNIDT.209   
                                !  subroutines except radiation            S_PRNIDT.210   
     &  ,ti(points,nlevs)       ! Initial temperature profile              S_PRNIDT.211   
     &  ,time_init              ! Start time of run(secs)                  S_PRNIDT.212   
     &  ,tstari(points)         ! Initial surface temperature              S_PRNIDT.213   
     &  ,t_deep_soili(points,nsoilt_levs)                                  S_PRNIDT.214   
                                ! Inital deep soil temperature             S_PRNIDT.215   
     &  ,qi(points,nwet)        ! Initial specific humidity profile        S_PRNIDT.216   
     &  ,ug(points)             ! Geostrophic U velocity (m/s)             S_PRNIDT.217   
     &  ,vg(points)             ! Geostrophic V velocity (m/s)             S_PRNIDT.218   
     &  ,ui(points,nlevs)       ! Initial zonal wind profile               S_PRNIDT.219   
     &  ,vi(points,nlevs)       ! Initial meridional wind profile          S_PRNIDT.220   
     &  ,tls(points,nfor,nlevs) ! Temperature increment for OBS            S_PRNIDT.221   
                                !  forcing                                 S_PRNIDT.222   
     &  ,qls(points,nfor,nwet)  ! Specific humidity increment for          S_PRNIDT.223   
                                !  OBS forcing                             S_PRNIDT.224   
     &  ,uls(points,nfor,nlevs) ! Zonal wind increment for OBS forcing     S_PRNIDT.225   
     &  ,vls(points,nfor,nlevs) ! Meridional wind increment for OBS        S_PRNIDT.226   
                                ! forcing.                                 S_PRNIDT.227   
     &  ,z0mseai(points)        ! Initial sea surface roughness            S_PRNIDT.228   
                                !  length.                                 S_PRNIDT.229   
      Character*8 exname_in,exname_out                                     S_PRNIDT.230   
C---------------------------------------------------------------------     S_PRNIDT.231   
C     Local                                                                S_PRNIDT.232   
C---------------------------------------------------------------------     S_PRNIDT.233   
      Integer                                                              S_PRNIDT.234   
     &  i, j, l, m              ! Counters                                 S_PRNIDT.235   
     &  ,multnl,resnl           ! Counters for printing nlevs              S_PRNIDT.236   
                                !  variables                               S_PRNIDT.237   
     &  ,multnf,resnf           ! Counter for printing nfor variables      S_PRNIDT.238   
     &  ,multsl,ressl           ! Counter for printing nsoil variables     S_PRNIDT.239   
     &  ,multoz,resoz           ! Counter for printing nozone              S_PRNIDT.240   
                                !  variables                               S_PRNIDT.241   
     &  ,multcl,rescl                                                      S_PRNIDT.242   
C                                                                          S_PRNIDT.243   
C                                                                          S_PRNIDT.244   
C---------------------------------------------------------------------     S_PRNIDT.245   
C     Output the initial data to all the unit nos. where diagnostics       S_PRNIDT.246   
C     are required                                                         S_PRNIDT.247   
C---------------------------------------------------------------------     S_PRNIDT.248   
C                                                                          S_PRNIDT.249   
      Do l = 1, points          ! loop on points                           S_PRNIDT.250   
        If (points .gt.1 )                                                 S_PRNIDT.251   
     &    Write (nout(numnout),*) " COLUMN NUMBER : ", l                   S_PRNIDT.252   
        If (nout(numnout) .ne. 0) then                                     S_PRNIDT.253   
C                                                                          S_PRNIDT.254   
          Write (nout(numnout),190)                                        S_PRNIDT.255   
          Write (nout(numnout),191)                                        S_PRNIDT.256   
          If  (land_mask(l)) then                                          S_PRNIDT.257   
            Write (nout(numnout),200)                                      S_PRNIDT.258   
          else                                                             S_PRNIDT.259   
            Write (nout(numnout),201)                                      S_PRNIDT.260   
          endif                                                            S_PRNIDT.261   
          Write (nout(numnout),199) year_init                              S_PRNIDT.262   
          Write (nout(numnout),202) dayno_init                             S_PRNIDT.263   
          Write (nout(numnout),276) time_init                              S_PRNIDT.264   
          Write (nout(numnout),203) ndayin, nminin, nsecin                 S_PRNIDT.265   
          If (.not. obs) Write (nout(numnout),269) start_diagday           S_PRNIDT.266   
          Write (nout(numnout),204) timestep                               S_PRNIDT.267   
          Write (nout(numnout),205) timestep*ntrad                         S_PRNIDT.268   
          Write (nout(numnout),267) timestep*ntrad1                        S_PRNIDT.269   
          Write (nout(numnout),206) lat(l)                                 S_PRNIDT.270   
          Write (nout(numnout),207) long(l)                                S_PRNIDT.271   
          Write (nout(numnout),208) nlevs                                  S_PRNIDT.272   
          Write (nout(numnout),209) nwet                                   S_PRNIDT.273   
          Write (nout(numnout),210) nbl_levs                               S_PRNIDT.274   
          If (land_mask(l)) write (nout(numnout),211) nsoilt_levs          S_PRNIDT.275   
C         If any physics routines are switched off or switched to          S_PRNIDT.276   
C         diagnostics only print out here                                  S_PRNIDT.277   
          If (conv_mode .eq. 2) then                                       S_PRNIDT.278   
            Write (nout(numnout),286)                                      S_PRNIDT.279   
          elseif (conv_mode .eq. 1) then                                   S_PRNIDT.280   
            Write (nout(numnout),292)                                      S_PRNIDT.281   
          endif                                                            S_PRNIDT.282   
          If (ppn_mode .eq. 2) then                                        S_PRNIDT.283   
            Write (nout(numnout),287)                                      S_PRNIDT.284   
          elseif (ppn_mode .eq. 1) then                                    S_PRNIDT.285   
            Write (nout(numnout),293)                                      S_PRNIDT.286   
          endif                                                            S_PRNIDT.287   
          If (sw_mode .eq. 2) then                                         S_PRNIDT.288   
            Write (nout(numnout),288)                                      S_PRNIDT.289   
          elseif (sw_mode .eq. 1) then                                     S_PRNIDT.290   
            Write (nout(numnout),294)                                      S_PRNIDT.291   
          endif                                                            S_PRNIDT.292   
          If (lw_mode .eq. 2) then                                         S_PRNIDT.293   
            Write (nout(numnout),289)                                      S_PRNIDT.294   
          elseif (lw_mode .eq. 1) then                                     S_PRNIDT.295   
            Write (nout(numnout),295)                                      S_PRNIDT.296   
          endif                                                            S_PRNIDT.297   
          If (bl_mode .eq. 2) then                                         S_PRNIDT.298   
            Write (nout(numnout),290)                                      S_PRNIDT.299   
          elseif (bl_mode .eq. 1) then                                     S_PRNIDT.300   
            Write (nout(numnout),296)                                      S_PRNIDT.301   
          endif                                                            S_PRNIDT.302   
          If (hyd_mode .eq. 2) then                                        S_PRNIDT.303   
            Write (nout(numnout),291)                                      S_PRNIDT.304   
          elseif (hyd_mode .eq. 1) then                                    S_PRNIDT.305   
            Write (nout(numnout),297)                                      S_PRNIDT.306   
          endif                                                            S_PRNIDT.307   
                                                                           S_PRNIDT.308   
C         ancyc                                                            S_PRNIDT.309   
          If (ancyc) then                                                  S_PRNIDT.310   
            Write (nout(numnout),212)                                      S_PRNIDT.311   
          else                                                             S_PRNIDT.312   
            Write (nout(numnout),213)                                      S_PRNIDT.313   
          endif                                                            S_PRNIDT.314   
C         local time                                                       S_PRNIDT.315   
          If (local_time) then                                             S_PRNIDT.316   
            Write (nout(numnout),214)                                      S_PRNIDT.317   
          else                                                             S_PRNIDT.318   
            Write (nout(numnout),215)                                      S_PRNIDT.319   
          endif                                                            S_PRNIDT.320   
C         obs                                                              S_PRNIDT.321   
          If (obs) then                                                    S_PRNIDT.322   
            Write (nout(numnout),216)                                      S_PRNIDT.323   
            Write (nout(numnout),217) ichgf                                S_PRNIDT.324   
            Write (nout(numnout),218) ilscnt                               S_PRNIDT.325   
            Write (nout(numnout),219) nfor                                 S_PRNIDT.326   
c                                                                          S_PRNIDT.327   
            multnf = int(nfor/10)                                          S_PRNIDT.328   
            resnf = mod(nfor,10)                                           S_PRNIDT.329   
c           tls                                                            S_PRNIDT.330   
            Write (nout(numnout),247)                                      S_PRNIDT.331   
            If (multnf .ne. 0) then                                        S_PRNIDT.332   
              Do j = 1, nlevs                                              S_PRNIDT.333   
                Do m = 1, multnf                                           S_PRNIDT.334   
                  Write (nout(numnout),'(10f7.2)')                         S_PRNIDT.335   
     &              (tls(l,i,j), i = (m-1)*10+1, 10*m)                     S_PRNIDT.336   
                enddo                                                      S_PRNIDT.337   
                Write (nout(numnout),'(10f7.2)')                           S_PRNIDT.338   
     &            (tls(l,i,j), i = (m-1)*10+1, (m-1)*10+resnf)             S_PRNIDT.339   
              enddo                                                        S_PRNIDT.340   
            else                                                           S_PRNIDT.341   
              Do j = 1, nlevs                                              S_PRNIDT.342   
                Write (nout(numnout),'(10f7.2)')                           S_PRNIDT.343   
     &            (tls(l,i,j), i = 1, resnf)                               S_PRNIDT.344   
              enddo                                                        S_PRNIDT.345   
            endif               ! multnf                                   S_PRNIDT.346   
c           uls                                                            S_PRNIDT.347   
            Write (nout(numnout),249)                                      S_PRNIDT.348   
            If (multnf .ne. 0) then                                        S_PRNIDT.349   
              Do j = 1, nlevs                                              S_PRNIDT.350   
                Do m = 1, multnf                                           S_PRNIDT.351   
                  Write (nout(numnout),'(10f7.2)')                         S_PRNIDT.352   
     &              (uls(l,i,j), i = (m-1)*10+1, 10*m)                     S_PRNIDT.353   
                enddo                                                      S_PRNIDT.354   
                Write (nout(numnout),'(10f7.2)')                           S_PRNIDT.355   
     &            (uls(l,i,j), i = (m-1)*10+1, (m-1)*10+resnf)             S_PRNIDT.356   
              enddo                                                        S_PRNIDT.357   
            else                                                           S_PRNIDT.358   
              Do j = 1, nlevs                                              S_PRNIDT.359   
                Write (nout(numnout),'(10f7.2)')                           S_PRNIDT.360   
     &            (uls(l,i,j), i = 1, resnf)                               S_PRNIDT.361   
              enddo                                                        S_PRNIDT.362   
            endif               ! multnf                                   S_PRNIDT.363   
c           vls                                                            S_PRNIDT.364   
            Write (nout(numnout),250)                                      S_PRNIDT.365   
            If (multnf .ne. 0) then                                        S_PRNIDT.366   
              Do j = 1, nlevs                                              S_PRNIDT.367   
                Do m = 1, multnf                                           S_PRNIDT.368   
                  Write (nout(numnout),'(10f7.2)')                         S_PRNIDT.369   
     &              (vls(l,i,j),i=(m-1)*10+1,10*m)                         S_PRNIDT.370   
                enddo                                                      S_PRNIDT.371   
                Write (nout(numnout),'(10f7.2)')                           S_PRNIDT.372   
     &            (vls(l,i,j), i = (m-1)*10+1, (m-1)*10+resnf)             S_PRNIDT.373   
              enddo                                                        S_PRNIDT.374   
            else                                                           S_PRNIDT.375   
              Do j = 1, nlevs                                              S_PRNIDT.376   
                Write (nout(numnout),'(10f7.2)')                           S_PRNIDT.377   
     &            (vls(l,i,j),i=1,resnf)                                   S_PRNIDT.378   
              enddo                                                        S_PRNIDT.379   
            endif               !multnf                                    S_PRNIDT.380   
c           qls                                                            S_PRNIDT.381   
            Write (nout(numnout),248)                                      S_PRNIDT.382   
            multnf = int(nfor/5)                                           S_PRNIDT.383   
            resnf = mod(nfor,5)                                            S_PRNIDT.384   
            If (multnf .ne. 0) then                                        S_PRNIDT.385   
              Do j = 1, nwet                                               S_PRNIDT.386   
                Do m = 1, multnf                                           S_PRNIDT.387   
                  Write (nout(numnout),'(5e10.2)')                         S_PRNIDT.388   
     &              (qls(l,i,j),i=(m-1)*5+1,5*m)                           S_PRNIDT.389   
                enddo                                                      S_PRNIDT.390   
                Write (nout(numnout),'(5e10.2)')                           S_PRNIDT.391   
     &            (qls(l,i,j), i = (m-1)*5+1, (m-1)*5+resnf)               S_PRNIDT.392   
              enddo                                                        S_PRNIDT.393   
            else                                                           S_PRNIDT.394   
              Do j = 1, nlevs                                              S_PRNIDT.395   
                Write (nout(numnout),'(5e10.2)')                           S_PRNIDT.396   
     &            (qls(l,i,j),i=1,resnf)                                   S_PRNIDT.397   
              enddo                                                        S_PRNIDT.398   
            endif               ! multnf                                   S_PRNIDT.399   
c           flux_h                                                         S_PRNIDT.400   
            Write (nout(numnout),251)                                      S_PRNIDT.401   
            multnf = int(nfor/5)                                           S_PRNIDT.402   
            resnf = mod(nfor,5)                                            S_PRNIDT.403   
            If (multnf .ne. 0) then                                        S_PRNIDT.404   
              Do m = 1, multnf                                             S_PRNIDT.405   
                Write (nout(numnout),'(5f10.5)')                           S_PRNIDT.406   
     &            (flux_h(l,i),i=(m-1)*5+1,5*m)                            S_PRNIDT.407   
              enddo                                                        S_PRNIDT.408   
              Write (nout(numnout),'(5f10.5)')                             S_PRNIDT.409   
     &          (flux_h(l,i), i=(m-1)*5+1,(m-1)*5+resnf)                   S_PRNIDT.410   
            else                                                           S_PRNIDT.411   
              Write (nout(numnout),'(5f10.5)')                             S_PRNIDT.412   
     &          (flux_h(l,i),i=1,resnf)                                    S_PRNIDT.413   
            endif               !multnf                                    S_PRNIDT.414   
c           flux_e                                                         S_PRNIDT.415   
            Write (nout(numnout),252)                                      S_PRNIDT.416   
            If (multnf .ne. 0) then                                        S_PRNIDT.417   
              Do m = 1, multnf                                             S_PRNIDT.418   
                Write (nout(numnout),'(5f10.5)')                           S_PRNIDT.419   
     &            (flux_e(l,i),i=(m-1)*5+1,5*m)                            S_PRNIDT.420   
              enddo                                                        S_PRNIDT.421   
              Write (nout(numnout),'(5f10.5)')                             S_PRNIDT.422   
     &          (flux_e(l,i), i = (m-1)*5+1, (m-1)*5+resnf)                S_PRNIDT.423   
            else                                                           S_PRNIDT.424   
              Write (nout(numnout),'(5f10.5)')                             S_PRNIDT.425   
     &          (flux_e(l,i),i=1,resnf)                                    S_PRNIDT.426   
            endif               ! multnf                                   S_PRNIDT.427   
          endif                 ! obs                                      S_PRNIDT.428   
C         STATS                                                            S_PRNIDT.429   
          If (stats) then                                                  S_PRNIDT.430   
            Write (nout(numnout),220)                                      S_PRNIDT.431   
            Write (nout(numnout),221) change_clim                          S_PRNIDT.432   
                                                                           S_PRNIDT.433   
          endif                 ! stats                                    S_PRNIDT.434   
c                                                                          S_PRNIDT.435   
c         noforce                                                          S_PRNIDT.436   
c                                                                          S_PRNIDT.437   
          If (noforce) then                                                S_PRNIDT.438   
            Write (nout(numnout),500)                                      S_PRNIDT.439   
          endif                 ! noforce                                  S_PRNIDT.440   
                                                                           S_PRNIDT.441   
c                                                                          S_PRNIDT.442   
c         geoforce                                                         S_PRNIDT.443   
c                                                                          S_PRNIDT.444   
          If (geoforce) then                                               S_PRNIDT.445   
            Write (nout(numnout),501)                                      S_PRNIDT.446   
            If (geoinit) then                                              S_PRNIDT.447   
              Write (nout(numnout),502)                                    S_PRNIDT.448   
            endif                                                          S_PRNIDT.449   
          endif                 ! goforce                                  S_PRNIDT.450   
c                                                                          S_PRNIDT.451   
c         obs, noforce, altdat                                             S_PRNIDT.452   
                                                                           S_PRNIDT.453   
          If (noforce .or.  obs .or. altdat .or. geoforce) then            S_PRNIDT.454   
            multnl = int(nlevs/10)                                         S_PRNIDT.455   
            resnl = mod(nlevs,10)                                          S_PRNIDT.456   
                                                                           S_PRNIDT.457   
            If (noforce .or. obs                                           S_PRNIDT.458   
     &        .or. (geoforce .and. .not. geoinit)) then                    S_PRNIDT.459   
c             ui                                                           S_PRNIDT.460   
              Write (nout(numnout),253)                                    S_PRNIDT.461   
              If (multnl.ne.0) then                                        S_PRNIDT.462   
                Do j=1,multnl                                              S_PRNIDT.463   
                  Write (nout(numnout),'("  ",10f7.2)')                    S_PRNIDT.464   
     &              (ui(l,i), i = 10*(j-1)+1, 10*j)                        S_PRNIDT.465   
                enddo                                                      S_PRNIDT.466   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.467   
     &            (ui(l,i), i = 10*(j-1)+1, 10*(j-1)+resnl)                S_PRNIDT.468   
              else                                                         S_PRNIDT.469   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.470   
     &            (ui(l,i),i=1,resnl)                                      S_PRNIDT.471   
              endif             ! multnl                                   S_PRNIDT.472   
c             vi                                                           S_PRNIDT.473   
              Write (nout(numnout),254)                                    S_PRNIDT.474   
              If (multnl .ne. 0) then                                      S_PRNIDT.475   
                Do j = 1, multnl                                           S_PRNIDT.476   
                  Write (nout(numnout),'("  ",10f7.2)')                    S_PRNIDT.477   
     &              (vi(l,i), i = 10*(j-1)+1, 10*j)                        S_PRNIDT.478   
                enddo                                                      S_PRNIDT.479   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.480   
     &            (vi(l,i), i = 10*(j-1)+1, 10*(j-1)+resnl)                S_PRNIDT.481   
              else                                                         S_PRNIDT.482   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.483   
     &            (vi(l,i), i = 1, resnl)                                  S_PRNIDT.484   
              endif             ! multnl                                   S_PRNIDT.485   
                                                                           S_PRNIDT.486   
            elseif (geoforce .and. geoinit) then                           S_PRNIDT.487   
c             ug,vg                                                        S_PRNIDT.488   
              Write (nout(numnout),284) ug(l)                              S_PRNIDT.489   
              Write (nout(numnout),285) vg(l)                              S_PRNIDT.490   
                                                                           S_PRNIDT.491   
            endif               ! obs or noforce or geoforce               S_PRNIDT.492   
                                                                           S_PRNIDT.493   
c           ti                                                             S_PRNIDT.494   
                                                                           S_PRNIDT.495   
            Write (nout(numnout),255)                                      S_PRNIDT.496   
            If (multnl .ne. 0) then                                        S_PRNIDT.497   
              Do j=1,multnl                                                S_PRNIDT.498   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.499   
     &            (ti(l,i),i=10*(j-1)+1,10*j)                              S_PRNIDT.500   
              enddo                                                        S_PRNIDT.501   
              Write (nout(numnout),'("  ",10f7.2)')                        S_PRNIDT.502   
     &          (ti(l,i),i=10*(j-1)+1,10*(j-1)+resnl)                      S_PRNIDT.503   
            else                                                           S_PRNIDT.504   
              Write (nout(numnout),'("  ",10f7.2)')                        S_PRNIDT.505   
     &          (ti(l,i),i=1,resnl)                                        S_PRNIDT.506   
            endif               !multnl                                    S_PRNIDT.507   
c           qi                                                             S_PRNIDT.508   
            Write (nout(numnout),256)                                      S_PRNIDT.509   
            multnl = int(nwet/5)                                           S_PRNIDT.510   
            resnl = mod(nwet,5)                                            S_PRNIDT.511   
            If (multnl .ne. 0) then                                        S_PRNIDT.512   
              Do j = 1, multnl                                             S_PRNIDT.513   
                Write (nout(numnout),'("  ",5e11.5)')                      S_PRNIDT.514   
     &            (qi(l,i),i=5*(j-1)+1,5*j)                                S_PRNIDT.515   
              enddo                                                        S_PRNIDT.516   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.517   
     &          (qi(l,i),i=5*(j-1)+1,5*(j-1)+resnl)                        S_PRNIDT.518   
            else                                                           S_PRNIDT.519   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.520   
     &          (qi(l,i),i=1,resnl)                                        S_PRNIDT.521   
            endif               ! multnl                                   S_PRNIDT.522   
          endif                 ! end if altdat,obs,noforce                S_PRNIDT.523   
                                                                           S_PRNIDT.524   
c                                                                          S_PRNIDT.525   
c         Ozone                                                            S_PRNIDT.526   
          Write (nout(numnout),277)                                        S_PRNIDT.527   
          multoz = int(nozone/5)                                           S_PRNIDT.528   
          resoz = mod(nozone,5)                                            S_PRNIDT.529   
          If (multoz .ne. 0) then                                          S_PRNIDT.530   
            Do j = 1, multoz                                               S_PRNIDT.531   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.532   
     &          (o3(l,i),i=5*(j-1)+1,5*j)                                  S_PRNIDT.533   
            enddo                                                          S_PRNIDT.534   
            Write (nout(numnout),'("  ",5e11.5)')                          S_PRNIDT.535   
     &        (o3(l,i),i=5*(j-1)+1,5*(j-1)+resoz)                          S_PRNIDT.536   
          else                                                             S_PRNIDT.537   
            Write (nout(numnout),'("  ",5e11.5)') (o3(l,i),i=1,resoz)      S_PRNIDT.538   
          endif                 ! multoz                                   S_PRNIDT.539   
          Write (nout(numnout),257) ccai(l)                                S_PRNIDT.540   
          Write (nout(numnout),258) iccbi(l)                               S_PRNIDT.541   
          Write (nout(numnout),259) iccti(l)                               S_PRNIDT.542   
          Write (nout(numnout),260) pstari(l)                              S_PRNIDT.543   
c         radcloud_fixed                                                   S_PRNIDT.544   
          If (radcloud_fixed) then                                         S_PRNIDT.545   
            Write (nout(numnout),270) cca_rad(l)                           S_PRNIDT.546   
            Write (nout(numnout),271) iccb_rad(l)                          S_PRNIDT.547   
            Write (nout(numnout),272) icct_rad(l)                          S_PRNIDT.548   
            Write (nout(numnout),273) ccwpin_rad(l)                        S_PRNIDT.549   
c                                                                          S_PRNIDT.550   
            multcl = int(nwet/5)                                           S_PRNIDT.551   
            rescl = mod(nwet,5)                                            S_PRNIDT.552   
c           layer_cloud_rad                                                S_PRNIDT.553   
            Write (nout(numnout),274)                                      S_PRNIDT.554   
            If (multcl .ne. 0) then                                        S_PRNIDT.555   
              Do j = 1, multcl                                             S_PRNIDT.556   
                Write (nout(numnout),'("  ",5e11.5)')                      S_PRNIDT.557   
     &            (layer_cloud_rad(l,i), i=5*(j-1)+1, 5*j)                 S_PRNIDT.558   
              enddo                                                        S_PRNIDT.559   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.560   
     &          (layer_cloud_rad(l,i), i = 5*(j-1)+1, 5*(j-1)+rescl)       S_PRNIDT.561   
            else                                                           S_PRNIDT.562   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.563   
     &          (layer_cloud_rad(l,i), i = 1, rescl)                       S_PRNIDT.564   
            endif                                                          S_PRNIDT.565   
c           qcl_rad                                                        S_PRNIDT.566   
            Write (nout(numnout),275)                                      S_PRNIDT.567   
            If (multcl .ne. 0) then                                        S_PRNIDT.568   
              Do j = 1, multcl                                             S_PRNIDT.569   
                Write (nout(numnout),'("  ",5e11.5)')                      S_PRNIDT.570   
     &            (qcl_rad(l,i), i = 5*(j-1)+1, 5*j)                       S_PRNIDT.571   
              enddo                                                        S_PRNIDT.572   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.573   
     &          (qcl_rad(l,i),i=5*(j-1)+1,5*(j-1)+rescl)                   S_PRNIDT.574   
            else                                                           S_PRNIDT.575   
              Write (nout(numnout),'("  ",5e11.5)')                        S_PRNIDT.576   
     &          (qcl_rad(l,i), i = 1, rescl)                               S_PRNIDT.577   
            endif                                                          S_PRNIDT.578   
          endif                 ! radcloud fixed                           S_PRNIDT.579   
c         landmask                                                         S_PRNIDT.580   
          If (land_mask(l)) then                                           S_PRNIDT.581   
            Write (nout(numnout),261) canopyi(l)                           S_PRNIDT.582   
            Write (nout(numnout),262) smci(l)                              S_PRNIDT.583   
            Write (nout(numnout),263) snodepi(l)                           S_PRNIDT.584   
c           altsoil                                                        S_PRNIDT.585   
            If (altsoil) then                                              S_PRNIDT.586   
              multsl = int((nsoilt_levs)/10)                               S_PRNIDT.587   
              ressl = mod((nsoilt_levs),10)                                S_PRNIDT.588   
c             t_deep_soil                                                  S_PRNIDT.589   
              Write (nout(numnout),264)                                    S_PRNIDT.590   
              If (multsl .ne. 0) then                                      S_PRNIDT.591   
                Do j = 1, multsl                                           S_PRNIDT.592   
                  Write (nout(numnout),'("  ",10f7.2)')                    S_PRNIDT.593   
     &              (t_deep_soili(l,i),i = 10*(j-1)+1, 10*j)               S_PRNIDT.594   
                enddo                                                      S_PRNIDT.595   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.596   
     &            (t_deep_soili(l,i), i = 10*(j-1)+1,10*(j-1)+ressl)       S_PRNIDT.597   
              else                                                         S_PRNIDT.598   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.599   
     &            (t_deep_soili(l,i), i = 1, ressl)                        S_PRNIDT.600   
              endif                                                        S_PRNIDT.601   
              Write (nout(numnout),265) tstari(l)                          S_PRNIDT.602   
            endif               ! altsoil                                  S_PRNIDT.603   
C                                                                          S_PRNIDT.604   
*IF DEF,A08_5A                                                             S_PRNIDT.605   
            multsl=int((nsoilm_levs)/10)                                   S_PRNIDT.606   
            ressl=mod((nsoilm_levs),10)                                    S_PRNIDT.607   
                                                                           S_PRNIDT.608   
            If (init_m_smcl) then                                          S_PRNIDT.609   
              Write (nout(numnout),278)                                    S_PRNIDT.610   
              Write (nout(numnout),281)                                    S_PRNIDT.611   
              If (multsl.ne.0) then                                        S_PRNIDT.612   
                Do j = 1, multsl                                           S_PRNIDT.613   
                  Write (nout(numnout),'("  ",10f7.2)')                    S_PRNIDT.614   
     &              (smcli(l,i), i=10*(j-1)+1, 10*j)                       S_PRNIDT.615   
                enddo                                                      S_PRNIDT.616   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.617   
     &            (smcli(l,i), i = 10*(j-1)+1, 10*(j-1)+ressl)             S_PRNIDT.618   
              else                                                         S_PRNIDT.619   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.620   
     &            (smcli(l,i), i = 1, ressl)                               S_PRNIDT.621   
              endif                                                        S_PRNIDT.622   
            elseif (init_m_fsmc) then                                      S_PRNIDT.623   
              Write (nout(numnout),279)                                    S_PRNIDT.624   
              Write (nout(numnout),282) fsmc(l)                            S_PRNIDT.625   
            elseif (init_m_sth) then                                       S_PRNIDT.626   
              Write (nout(numnout),280)                                    S_PRNIDT.627   
              Write (nout(numnout),283)                                    S_PRNIDT.628   
              If (multsl .ne. 0) then                                      S_PRNIDT.629   
                Do j = 1, multsl                                           S_PRNIDT.630   
                  Write (nout(numnout),'("  ",10f7.2)')                    S_PRNIDT.631   
     &              (sth(l,i),i=10*(j-1)+1,10*j)                           S_PRNIDT.632   
                enddo                                                      S_PRNIDT.633   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.634   
     &            (sth(l,i), i = 10*(j-1)+1, 10*(j-1)+ressl)               S_PRNIDT.635   
              else                                                         S_PRNIDT.636   
                Write (nout(numnout),'("  ",10f7.2)')                      S_PRNIDT.637   
     &            (sth(l,i), i = 1, ressl)                                 S_PRNIDT.638   
              endif                                                        S_PRNIDT.639   
            endif               ! init_moses                               S_PRNIDT.640   
*ENDIF                                                                     S_PRNIDT.641   
          else                                                             S_PRNIDT.642   
            Write (nout(numnout),266) z0mseai                              S_PRNIDT.643   
          endif                 ! land point                               S_PRNIDT.644   
C                                                                          S_PRNIDT.645   
          If (tapein) then                                                 S_PRNIDT.646   
            Write (nout(numnout),222)                                      S_PRNIDT.647   
            Write (nout(numnout),223) exname_in                            S_PRNIDT.648   
            Write (nout(numnout),224) runno_in                             S_PRNIDT.649   
          else                                                             S_PRNIDT.650   
            Write (nout(numnout),225)                                      S_PRNIDT.651   
          endif                                                            S_PRNIDT.652   
          If (tapeout) then                                                S_PRNIDT.653   
            Write (nout(numnout),226)                                      S_PRNIDT.654   
            Write (nout(numnout),227) exname_out                           S_PRNIDT.655   
            Write (nout(numnout),228) runno_out                            S_PRNIDT.656   
          else                                                             S_PRNIDT.657   
            Write (nout(numnout),229)                                      S_PRNIDT.658   
          endif                                                            S_PRNIDT.659   
          If (land_mask(l)) then                                           S_PRNIDT.660   
            If (veg_type(l) .eq. 1) then                                   S_PRNIDT.661   
              Write (nout(numnout),230)                                    S_PRNIDT.662   
            elseif (veg_type(l) .eq. 2) then                               S_PRNIDT.663   
              Write (nout(numnout),231)                                    S_PRNIDT.664   
            elseif (veg_type(l) .eq. 3) then                               S_PRNIDT.665   
              Write (nout(numnout),232)                                    S_PRNIDT.666   
            elseif (veg_type(l) .eq. 4) then                               S_PRNIDT.667   
              Write (nout(numnout),233)                                    S_PRNIDT.668   
            elseif (veg_type(l) .eq. 5) then                               S_PRNIDT.669   
              Write (nout(numnout),234)                                    S_PRNIDT.670   
            elseif (veg_type(l) .eq. 6) then                               S_PRNIDT.671   
              Write (nout(numnout),235)                                    S_PRNIDT.672   
            elseif (veg_type(l) .eq. 7) then                               S_PRNIDT.673   
              Write (nout(numnout),236)                                    S_PRNIDT.674   
            elseif (veg_type(l) .eq. 8) then                               S_PRNIDT.675   
              Write (nout(numnout),237)                                    S_PRNIDT.676   
            elseif (veg_type(l) .eq. 9) then                               S_PRNIDT.677   
              Write (nout(numnout),238)                                    S_PRNIDT.678   
            endif                                                          S_PRNIDT.679   
            If (soil_type(l) .eq. 1) then                                  S_PRNIDT.680   
              Write (nout(numnout),239)                                    S_PRNIDT.681   
            elseif (soil_type(l) .eq. 2) then                              S_PRNIDT.682   
              Write (nout(numnout),240)                                    S_PRNIDT.683   
            elseif (soil_type(l) .eq. 3) then                              S_PRNIDT.684   
              Write (nout(numnout),241)                                    S_PRNIDT.685   
            elseif (soil_type(l) .eq. 4) then                              S_PRNIDT.686   
              Write (nout(numnout),242)                                    S_PRNIDT.687   
            endif                                                          S_PRNIDT.688   
            If (.not. altsoil) then                                        S_PRNIDT.689   
              Write (nout(numnout),243)                                    S_PRNIDT.690   
              Write (nout(numnout),244) tconst(l)                          S_PRNIDT.691   
              Write (nout(numnout),245) dtday(l)                           S_PRNIDT.692   
              Write (nout(numnout),246) dtyear(l)                          S_PRNIDT.693   
            endif                                                          S_PRNIDT.694   
          endif                                                            S_PRNIDT.695   
          Write (nout(numnout),191)                                        S_PRNIDT.696   
        endif                   ! nout                                     S_PRNIDT.697   
      enddo                     ! l                                        S_PRNIDT.698   
 190  Format(                                                              S_PRNIDT.699   
     &  ' * Initial data used for scm integration      ',27x,'*'/)         S_PRNIDT.700   
 191  Format(                                                              S_PRNIDT.701   
     &  ' ******************************************************'          S_PRNIDT.702   
     &  '*******************')                                             S_PRNIDT.703   
 200  Format(                                                              S_PRNIDT.704   
     &  ' * Model run is for a land point              ',26x,' *')         S_PRNIDT.705   
 201  Format(                                                              S_PRNIDT.706   
     &  ' * Model run is for a sea point               ',26x,' *')         S_PRNIDT.707   
 202  Format(                                                              S_PRNIDT.708   
     &  ' * Run started on day                         ',i26,' *')         S_PRNIDT.709   
 199  Format(                                                              S_PRNIDT.710   
     &  ' * Run started on year                        ',i26,' *')         S_PRNIDT.711   
 203  Format(                                                              S_PRNIDT.712   
     &  ' * length of run (days:mins:secs)',13x,i8,':',i8,':',i8, ' *'     S_PRNIDT.713   
     &  )                                                                  S_PRNIDT.714   
 204  Format(                                                              S_PRNIDT.715   
     &  ' * Timestep (seconds)                       ',f28.1,' *')         S_PRNIDT.716   
 205  Format(                                                              S_PRNIDT.717   
     &  ' * Timestep for radiation (seconds)         ',f28.1,' *')         S_PRNIDT.718   
 206  Format(                                                              S_PRNIDT.719   
     &  ' * Latitude of gridpoint                    ',f28.1,' *')         S_PRNIDT.720   
 207  Format(                                                              S_PRNIDT.721   
     &  ' * Longitude of gridpoint                   ',f28.1,' *')         S_PRNIDT.722   
 208  Format(                                                              S_PRNIDT.723   
     &  ' * Number of model levels                     ',i26,' *')         S_PRNIDT.724   
 209  Format(                                                              S_PRNIDT.725   
     &  ' * Number of atmospheric moist levels         ',i26,' *')         S_PRNIDT.726   
 210  Format(                                                              S_PRNIDT.727   
     &  ' * Number of levels in boundary layer         ',i26,' *')         S_PRNIDT.728   
 211  Format(                                                              S_PRNIDT.729   
     &  ' * Number of deep soil temperatures           ',i26,' *')         S_PRNIDT.730   
 212  Format(                                                              S_PRNIDT.731   
     &  ' * Annual cycle included                      ',26x,' *')         S_PRNIDT.732   
 213  Format(                                                              S_PRNIDT.733   
     &  ' * Annual cycle not included                  ',26x,' *')         S_PRNIDT.734   
 214  Format(                                                              S_PRNIDT.735   
     &  ' * All diagnostics refer to local time        ',26x,' *')         S_PRNIDT.736   
 215  Format(                                                              S_PRNIDT.737   
     &  ' * All diagnostics refer to gmt               ',26x,' *')         S_PRNIDT.738   
 216  Format(                                                              S_PRNIDT.739   
     &  ' * Large-scale observational forcing selected ',26x,' *')         S_PRNIDT.740   
 217  Format(                                                              S_PRNIDT.741   
     &  ' * Number of timesteps between change in forcing',i25,'*')        S_PRNIDT.742   
 218  Format(                                                              S_PRNIDT.743   
     &  ' * Counter for forcing                        ',i26,' *')         S_PRNIDT.744   
 219  Format(                                                              S_PRNIDT.745   
     &  ' * Number of terms for observational forcing  ',i26,' *')         S_PRNIDT.746   
 220  Format(                                                              S_PRNIDT.747   
     &  ' * Large-scale statistical forcing selected   ',26x,' *')         S_PRNIDT.748   
 500  Format(                                                              S_PRNIDT.749   
     &  ' * No large-scale forcing selected            ',26x,' *')         S_PRNIDT.750   
 501  Format(                                                              S_PRNIDT.751   
     &  ' * Geostrophic forcing selected               ',26x,' *')         S_PRNIDT.752   
 502  Format(                                                              S_PRNIDT.753   
     &  ' * Geostrophic initialisation selected        ',26x,' *')         S_PRNIDT.754   
 221  Format(                                                              S_PRNIDT.755   
     &  ' * Number of days between change in forcing   ',i26,' *')         S_PRNIDT.756   
 222  Format(                                                              S_PRNIDT.757   
     &  ' * Initial data read from tape                ',26x,' *')         S_PRNIDT.758   
 223  Format(                                                              S_PRNIDT.759   
     &  ' * With experment name                        ',a26,' *')         S_PRNIDT.760   
 224  Format(                                                              S_PRNIDT.761   
     &  ' * With run number                            ',i26,' *')         S_PRNIDT.762   
 225  Format(                                                              S_PRNIDT.763   
     &  ' * No data read from tape                     ',26x,' *')         S_PRNIDT.764   
 226  Format(                                                              S_PRNIDT.765   
     &  ' * Data written to tape                       ',26x,' *')         S_PRNIDT.766   
 227  Format(                                                              S_PRNIDT.767   
     &  ' * With experment name                        ',a26,' *')         S_PRNIDT.768   
 228  Format(                                                              S_PRNIDT.769   
     &  ' * With run number                            ',i26,' *')         S_PRNIDT.770   
 229  Format(                                                              S_PRNIDT.771   
     &  ' * No data written to tape                    ',26x,' *')         S_PRNIDT.772   
 230  Format(                                                              S_PRNIDT.773   
     &  ' * Vegetation type equitorial rainforest      ',26x,' *')         S_PRNIDT.774   
 231  Format(                                                              S_PRNIDT.775   
     &  ' * Vegetation type pasture and trees          ',26x,' *')         S_PRNIDT.776   
 232  Format(                                                              S_PRNIDT.777   
     &  ' * Vegetation type coniferous forest          ',26x,' *')         S_PRNIDT.778   
 233  Format(                                                              S_PRNIDT.779   
     &  ' * Vegetation type tropical savannah          ',26x,' *')         S_PRNIDT.780   
 234  Format(                                                              S_PRNIDT.781   
     &  ' * Vegetation type pasture                    ',26x,' *')         S_PRNIDT.782   
 235  Format(                                                              S_PRNIDT.783   
     &  ' * Vegetation type arable                     ',26x,' *')         S_PRNIDT.784   
 236  Format(                                                              S_PRNIDT.785   
     &  ' * Vegetation type tundra                     ',26x,' *')         S_PRNIDT.786   
 237  Format(                                                              S_PRNIDT.787   
     &  ' * Vegetation type semi-desert and trees      ',26x,' *')         S_PRNIDT.788   
 238  Format(                                                              S_PRNIDT.789   
     &  ' * Vegetation type desert                     ',26x,' *')         S_PRNIDT.790   
 239  Format(                                                              S_PRNIDT.791   
     &  ' * Soil type ice                              ',26x,' *')         S_PRNIDT.792   
 240  Format(                                                              S_PRNIDT.793   
     &  ' * Soil type fine                             ',26x,' *')         S_PRNIDT.794   
 241  Format(                                                              S_PRNIDT.795   
     &  ' * Soil type medium                           ',26x,' *')         S_PRNIDT.796   
 242  Format(                                                              S_PRNIDT.797   
     &  ' * Soil type coarse                           ',26x,' *')         S_PRNIDT.798   
 243  Format(                                                              S_PRNIDT.799   
     &  ' * Initial soil temperature profile derived   ',26x,' *')         S_PRNIDT.800   
 244  Format(                                                              S_PRNIDT.801   
     &  ' * From soil temp. cycle with mean annual   ',f28.1,' *')         S_PRNIDT.802   
 245  Format(                                                              S_PRNIDT.803   
     &  ' * Daily amplitude of soil temperature cycle',f28.1,' *')         S_PRNIDT.804   
 246  Format(                                                              S_PRNIDT.805   
     &  ' * Annual amplitude of soil temperature cycle',f27.1,' *')        S_PRNIDT.806   
 247  Format(                                                              S_PRNIDT.807   
     &  ' * Temperature increment tls (k)              ',26x,' *')         S_PRNIDT.808   
 248  Format(                                                              S_PRNIDT.809   
     &  ' * Specific humidity increment qls (kg/kg)    ',26x,' *')         S_PRNIDT.810   
 249  Format(                                                              S_PRNIDT.811   
     &  ' * Zonal wind increment uls     (m/s)         ',26x,' *')         S_PRNIDT.812   
 250  Format(                                                              S_PRNIDT.813   
     &  ' * Meridional wind increment vls  (m/s)       ',26x,' *')         S_PRNIDT.814   
 251  Format(                                                              S_PRNIDT.815   
     &  ' * Flux_h - observational forcing             ',26x,' *')         S_PRNIDT.816   
 252  Format(                                                              S_PRNIDT.817   
     &  ' * Flux_e - observational forcing             ',26x,' *')         S_PRNIDT.818   
 253  Format(                                                              S_PRNIDT.819   
     &  ' * Initial zonal wind profile ui  (m/s)       ',26x,' *')         S_PRNIDT.820   
 254  Format(                                                              S_PRNIDT.821   
     &  ' * Initial meridional wind profile vi  (m/s)  ',26x,' *')         S_PRNIDT.822   
 255  Format(                                                              S_PRNIDT.823   
     &  ' * Initial temperature profile ti  (k)        ',26x,' *')         S_PRNIDT.824   
 256  Format(                                                              S_PRNIDT.825   
     &  ' * Initial specific humidity profile qi (kg/kg)',26x,'*')         S_PRNIDT.826   
 257  Format(                                                              S_PRNIDT.827   
     &  ' * Initial convective cloud amount ccai     ',f28.4,' *')         S_PRNIDT.828   
 258  Format(                                                              S_PRNIDT.829   
     &  ' * Initial convective cloud base iccbi        ',i26,' *')         S_PRNIDT.830   
 259  Format(                                                              S_PRNIDT.831   
     &  ' * Initial convective cloud top iccti         ',i26,' *')         S_PRNIDT.832   
 260  Format(                                                              S_PRNIDT.833   
     &  ' * Initial surface pressure pstari (pa)     ',f28.1,' *')         S_PRNIDT.834   
 261  Format(                                                              S_PRNIDT.835   
     &  ' * Initial canopy water content kg m-2      ',f28.3,' *')         S_PRNIDT.836   
 262  Format(                                                              S_PRNIDT.837   
     &  ' * Initial soil moisture content kg m-2     ',f28.3,' *')         S_PRNIDT.838   
 263  Format(                                                              S_PRNIDT.839   
     &  ' * Initial snow depth kg m-2                ',f28.3,' *')         S_PRNIDT.840   
 264  Format(                                                              S_PRNIDT.841   
     &  ' * Initial deep soil temperatures (k)',6x,'*')                    S_PRNIDT.842   
 265  Format(                                                              S_PRNIDT.843   
     &  ' * Initial surface temperature (K)          ',f28.3,' *')         S_PRNIDT.844   
 266  Format(                                                              S_PRNIDT.845   
     &  ' * Initial sea surface roughness length     ',f28.3,' *')         S_PRNIDT.846   
 267  Format(                                                              S_PRNIDT.847   
     &  ' * 1st timestep for radiation (seconds)     ',f28.1,' *')         S_PRNIDT.848   
 269  Format(                                                              S_PRNIDT.849   
     &  ' * Day in run to start diagnostics (stats,graf)',i25,' *')        S_PRNIDT.850   
 270  Format(                                                              S_PRNIDT.851   
     &  ' * Fixed radiation conv. cloud amount cca_rad',f27.4,' *')        S_PRNIDT.852   
 271  Format(                                                              S_PRNIDT.853   
     &  ' * Fixed radiation conv. cloud base iccb_rad  ',i26,' *')         S_PRNIDT.854   
 272  Format(                                                              S_PRNIDT.855   
     &  ' * Fixed radiation conv. cloud top icct_rad   ',i26,' *')         S_PRNIDT.856   
 273  Format(                                                              S_PRNIDT.857   
     &  ' * Fixed radiation conv. cloud ccwpin_rad    ',f27.4,' *')        S_PRNIDT.858   
 274  Format(                                                              S_PRNIDT.859   
     &  ' * Fixed radiation layer cloud amount          ',25x,' *')        S_PRNIDT.860   
 275  Format(                                                              S_PRNIDT.861   
     &  ' * Fixed radiation total water and ice in cloud',25x,' *')        S_PRNIDT.862   
 276  Format(                                                              S_PRNIDT.863   
     &  ' * Run started at time (secs)               ',f28.2,' *')         S_PRNIDT.864   
 277  Format(                                                              S_PRNIDT.865   
     &  ' * Ozone                                      ',26x,' *')         S_PRNIDT.866   
 278  Format(                                                              S_PRNIDT.867   
     &  ' * Moses initialised by input of actual soil moisture in ',       S_PRNIDT.868   
     &  'layers        *')                                                 S_PRNIDT.869   
 279  Format(                                                              S_PRNIDT.870   
     &  ' * Moses initialisation by input of soil moisture ',              S_PRNIDT.871   
     &  'stress factor    *')                                              S_PRNIDT.872   
 280  Format(                                                              S_PRNIDT.873   
     &  ' * Moses initialised by input of smcl as a fraction of ',         S_PRNIDT.874   
     &  'saturation        *')                                             S_PRNIDT.875   
 281  Format(                                                              S_PRNIDT.876   
     &  ' * Initial smcl  (Kg m-2)                      ',26X,'*')         S_PRNIDT.877   
 282  Format(                                                              S_PRNIDT.878   
     &  ' * Initial soil moisture stress factor      ',f28.3,' *')         S_PRNIDT.879   
 283  Format(                                                              S_PRNIDT.880   
     &  ' * Initial sth                                 ',26x,'*')         S_PRNIDT.881   
 284  Format(                                                              S_PRNIDT.882   
     &  ' * Initial geostrophic zonal wind ug (m/s)',20x,f10.3,' *')       S_PRNIDT.883   
 285  Format(                                                              S_PRNIDT.884   
     &  ' * Initial geostrophic meridional wind vg (m/s)',15x,             S_PRNIDT.885   
     &  f10.3,' *')                                                        S_PRNIDT.886   
 286  Format(                                                              S_PRNIDT.887   
     &  ' * Convection switched off                    ',26x,' *')         S_PRNIDT.888   
 287  Format(                                                              S_PRNIDT.889   
     &  ' * Precipitation switched off                 ',26x,' *')         S_PRNIDT.890   
 288  Format(                                                              S_PRNIDT.891   
     &  ' * Sw radiation switched off                  ',26x,' *')         S_PRNIDT.892   
 289  Format(                                                              S_PRNIDT.893   
     &  ' * Lw radiation switched off                  ',26x,' *')         S_PRNIDT.894   
 290  Format(                                                              S_PRNIDT.895   
     &  ' * Boundary layer switched off                ',26x,' *')         S_PRNIDT.896   
 291  Format(                                                              S_PRNIDT.897   
     &  ' * Hydrology switched off                     ',26x,' *')         S_PRNIDT.898   
 292  Format(                                                              S_PRNIDT.899   
     &  ' * Convection switched on for diagnostics only',26x,' *')         S_PRNIDT.900   
 293  Format(                                                              S_PRNIDT.901   
     &  ' * Precipitation switched on for diagnostics only',24x,' *')      S_PRNIDT.902   
 294  Format(                                                              S_PRNIDT.903   
     &  ' * Sw radiation switched on for diagnostics only',25x,' *')       S_PRNIDT.904   
 295  Format(                                                              S_PRNIDT.905   
     &  ' * Lw radiation switched on for diagnostics only',25x,' *')       S_PRNIDT.906   
 296  Format(                                                              S_PRNIDT.907   
     &  ' * Boundary layer switched on for diagnostics only',23x,' *')     S_PRNIDT.908   
 297  Format(                                                              S_PRNIDT.909   
     &  ' * Hydrology switched on for diagnostics only ',26x,' *')         S_PRNIDT.910   
      Return                                                               S_PRNIDT.911   
      End                                                                  S_PRNIDT.912   
*ENDIF                                                                     S_PRNIDT.913   
