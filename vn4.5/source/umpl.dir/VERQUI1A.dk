*IF DEF,C92_1A                                                             VERQUI1A.2     
C (c) CROWN COPYRIGHT 1995, METEOROLOGICAL OFFICE, All Rights Reserved.    GTS2F400.15507 
C                                                                          GTS2F400.15508 
C Use, duplication or disclosure of this code is subject to the            GTS2F400.15509 
C restrictions as set forth in the contract.                               GTS2F400.15510 
C                                                                          GTS2F400.15511 
C                Meteorological Office                                     GTS2F400.15512 
C                London Road                                               GTS2F400.15513 
C                BRACKNELL                                                 GTS2F400.15514 
C                Berkshire UK                                              GTS2F400.15515 
C                RG12 2SZ                                                  GTS2F400.15516 
C                                                                          GTS2F400.15517 
C If no contract has been raised with this copy of the code, the use,      GTS2F400.15518 
C duplication or disclosure of it is strictly prohibited.  Permission      GTS2F400.15519 
C to do so must first be obtained in writing from the Head of Numerical    GTS2F400.15520 
C Modelling at the above address.                                          GTS2F400.15521 
C ******************************COPYRIGHT******************************    GTS2F400.15522 
C                                                                          GTS2F400.15523 
        Subroutine VerticalInterpQuintic                                   VERQUI1A.3     
     &      ( len1In,                                                      VERQUI1A.4     
     &          len2In,                                                    VERQUI1A.5     
     &          len3In,                                                    VERQUI1A.6     
     &          len3Out,                                                   VERQUI1A.7     
     &          KOut,                                                      VERQUI1A.8     
     &          RIn,                                                       VERQUI1A.9     
     &          ROut,                                                      VERQUI1A.10    
     &          DataIn,                                                    VERQUI1A.11    
     &          DataOut )                                                  VERQUI1A.12    
                                                                           VERQUI1A.13    
!   Description                                                            VERQUI1A.14    
!   Quintic Lagrange interpolation of DataIn at RIn                        VERQUI1A.15    
!   to DataOut at ROut in the vertical                                     VERQUI1A.16    
!   i.e. 3rd dimension of the arrays.                                      VERQUI1A.17    
!                                                                          VERQUI1A.18    
! Method:                                                                  VERQUI1A.19    
!   Simplified version of Mark Mawson's general interpolation routine      VERQUI1A.20    
!   Quintic Lagrange                                                       VERQUI1A.21    
!                The proposed semi-Lagrangian advection scheme for the     VERQUI1A.22    
!                   semi-Implicit Unified Model integration scheme.        VERQUI1A.23    
!                         F.R. Division working paper No 162.              VERQUI1A.24    
!                                                                          VERQUI1A.25    
! Current Code Owner: Stuart Bell                                          VERQUI1A.26    
!                                                                          VERQUI1A.27    
! History:                                                                 VERQUI1A.28    
! Version   Date     Comment                                               VERQUI1A.29    
! -------   ----     -------                                               VERQUI1A.30    
! 4.0      11/7/95   Equiv. to VAR code as at time of build:Stuart Bell    VERQUI1A.31    
!                                                                          VERQUI1A.32    
! Code Description:                                                        VERQUI1A.33    
!   Language:           Fortran 77 plus                                    VERQUI1A.34    
!   Software Standards: "UM and Met O standards".                          VERQUI1A.35    
!                                                                          VERQUI1A.36    
! Declarations:                                                            VERQUI1A.37    
                                                                           VERQUI1A.38    
        Implicit none                                                      VERQUI1A.39    
                                                                           VERQUI1A.40    
! Subroutine arguments                                                     VERQUI1A.41    
! Scalar arguments with :intent(in)                                        VERQUI1A.42    
        Integer   len1In    ! Extent of DataIn in i direction.             VERQUI1A.43    
        Integer   len2In    ! Extent of DataIn in j direction.             VERQUI1A.44    
        Integer   len3In    ! Extent of DataIn in k direction.             VERQUI1A.45    
        Integer   len3Out   ! Extent of DataOut in k direction.            VERQUI1A.46    
                                                                           VERQUI1A.47    
! Array  arguments with :intent(in)                                        VERQUI1A.48    
        Integer   KOut (len1In,len2In,len3Out) ! level in RIn below ROut   VERQUI1A.49    
                                                                           VERQUI1A.50    
        Real  RIn  (len1In,len2In,len3In)  ! Vertical coordinate input     VERQUI1A.51    
                                                                           VERQUI1A.52    
        Real  ROut (len1In,len2In,len3Out)  ! Vertical coordinate output   VERQUI1A.53    
                                                                           VERQUI1A.54    
        Real  DataIn (len1In,len2In,len3In) ! Data on the original         VERQUI1A.55    
!                                           ! vertical levels.             VERQUI1A.56    
                                                                           VERQUI1A.57    
! Array  arguments with :intent(out)                                       VERQUI1A.58    
        Real     DataOut (len1In,len2In,len3Out) ! Data interpolated to    VERQUI1A.59    
!                                                ! new vertical levels.    VERQUI1A.60    
                                                                           VERQUI1A.61    
! Local scalars:                                                           VERQUI1A.62    
        Integer  i, j, k                       ! Loop indices              VERQUI1A.63    
                                                                           VERQUI1A.64    
        Real     rhereminus2                 ! } Temporary data stores     VERQUI1A.65    
        Real     rhereminus                  ! } elements of the RIn       VERQUI1A.66    
        Real     rhere                       ! } array                     VERQUI1A.67    
        Real     rhereplus                   ! }                           VERQUI1A.68    
        Real     rhereplus2                  ! }                           VERQUI1A.69    
        Real     rhereplus3                  ! }                           VERQUI1A.70    
        Real     Z1, Z2, Z3, Z4                ! } Stores for Partial      VERQUI1A.71    
        Real     Z1A, Z2A, Z3A, Z4A, Z5A, Z6A  ! } sums                    VERQUI1A.72    
        Real     Z1B, Z2B, Z3B, Z4B, Z5B, Z6B  ! }                         VERQUI1A.73    
                                                                           VERQUI1A.74    
!- End of header                                                           VERQUI1A.75    
                                                                           VERQUI1A.76    
        Do k = 1, len3Out                                                  VERQUI1A.77    
         Do j = 1, len2In                                                  VERQUI1A.78    
          Do i = 1, len1In                                                 VERQUI1A.79    
           If (KOut(i,j,k) .eq. 1 .or.                                     VERQUI1A.80    
     &       KOut(i,j,k) .eq. len3In-1) then                               VERQUI1A.81    
! use the linear method to interpolate between bottom most levels          VERQUI1A.82    
! or top most levels.                                                      VERQUI1A.83    
           rhere           = RIn (i,j,KOut(i,j,k))                         VERQUI1A.84    
           rhereplus      = RIn (i,j,KOut(i,j,k) + 1)                      VERQUI1A.85    
                                                                           VERQUI1A.86    
             DataOut(i,j,k) = ( ( (ROut(i,j,k) - rhere)                    VERQUI1A.87    
     &                         * DataIn (i,j,KOut(i,j,k) + 1) )            VERQUI1A.88    
     &                      - ( (ROut(i,j,k) - rhereplus)                  VERQUI1A.89    
     &                         * DataIn (i,j,KOut(i,j,k))     )            VERQUI1A.90    
     &                      )  / ( rhereplus - rhere )                     VERQUI1A.91    
                                                                           VERQUI1A.92    
         Else  if ( KOut(i,j,k) .eq. 2 .or.                                VERQUI1A.93    
     &              KOut(i,j,k) .eq. len3In-2) then                        VERQUI1A.94    
! use cubic interpolation.                                                 VERQUI1A.95    
          rhereminus     = RIn (i,j,KOut(i,j,k) - 1)                       VERQUI1A.96    
          rhere           = RIn (i,j,KOut(i,j,k))                          VERQUI1A.97    
          rhereplus      = RIn (i,j,KOut(i,j,k) + 1)                       VERQUI1A.98    
          rhereplus2     = RIn (i,j,KOut(i,j,k) + 2)                       VERQUI1A.99    
                                                                           VERQUI1A.100   
           Z1 =  ( (ROut(i,j,k) - rhere)                                   VERQUI1A.101   
     &           * (ROut(i,j,k) - rhereplus)                               VERQUI1A.102   
     &           * (ROut(i,j,k) - rhereplus2)                              VERQUI1A.103   
     &           *  DataIn (i,j,KOut(i,j,k)-1)  )                          VERQUI1A.104   
     &           /                                                         VERQUI1A.105   
     &           ( (rhereminus - rhere)                                    VERQUI1A.106   
     &           * (rhereminus - rhereplus)                                VERQUI1A.107   
     &           * (rhereminus - rhereplus2)  )                            VERQUI1A.108   
                                                                           VERQUI1A.109   
           Z2 =  ( (ROut(i,j,k) - rhereminus)                              VERQUI1A.110   
     &           * (ROut(i,j,k) - rhereplus)                               VERQUI1A.111   
     &           * (ROut(i,j,k) - rhereplus2)                              VERQUI1A.112   
     &           * DataIn (i,j,KOut(i,j,k))     )                          VERQUI1A.113   
     &           /                                                         VERQUI1A.114   
     &           ( (rhere - rhereminus)                                    VERQUI1A.115   
     &           * (rhere - rhereplus)                                     VERQUI1A.116   
     &           * (rhere - rhereplus2)        )                           VERQUI1A.117   
                                                                           VERQUI1A.118   
           Z3 =  ( (ROut(i,j,k) - rhereminus)                              VERQUI1A.119   
     &           * (ROut(i,j,k) - rhere)                                   VERQUI1A.120   
     &           * (ROut(i,j,k) - rhereplus2)                              VERQUI1A.121   
     &           * DataIn (i,j,KOut(i,j,k)+1)   )                          VERQUI1A.122   
     &            /                                                        VERQUI1A.123   
     &            ( (rhereplus - rhereminus)                               VERQUI1A.124   
     &           * (rhereplus - rhere)                                     VERQUI1A.125   
     &           * (rhereplus - rhereplus2)   )                            VERQUI1A.126   
                                                                           VERQUI1A.127   
           Z4 =  ( (ROut(i,j,k) - rhereminus)                              VERQUI1A.128   
     &           * (ROut(i,j,k) - rhere)                                   VERQUI1A.129   
     &           * (ROut(i,j,k) - rhereplus)                               VERQUI1A.130   
     &           * DataIn (i,j,KOut(i,j,k)+2)   )                          VERQUI1A.131   
     &           /                                                         VERQUI1A.132   
     &           ( (rhereplus2 - rhereminus)                               VERQUI1A.133   
     &           * (rhereplus2 - rhere)                                    VERQUI1A.134   
     &           * (rhereplus2 - rhereplus)   )                            VERQUI1A.135   
                                                                           VERQUI1A.136   
           DataOut (i,j,k) = Z1+Z2+Z3+Z4                                   VERQUI1A.137   
                                                                           VERQUI1A.138   
         Else ! use quintic interpolation                                  VERQUI1A.139   
          rhereminus2    = RIn (i,j,KOut(i,j,k) - 2)                       VERQUI1A.140   
          rhereminus     = RIn (i,j,KOut(i,j,k) - 1)                       VERQUI1A.141   
          rhere           = RIn (i,j,KOut(i,j,k))                          VERQUI1A.142   
          rhereplus      = RIn (i,j,KOut(i,j,k) + 1)                       VERQUI1A.143   
          rhereplus2     = RIn (i,j,KOut(i,j,k) + 2)                       VERQUI1A.144   
          rhereplus3     = RIn (i,j,KOut(i,j,k) + 3)                       VERQUI1A.145   
                                                                           VERQUI1A.146   
          Z1A =     (ROut(i,j,k) - rhereminus)                             VERQUI1A.147   
     &            * (ROut(i,j,k) - rhere)                                  VERQUI1A.148   
     &            * (ROut(i,j,k) - rhereplus)                              VERQUI1A.149   
     &            * (ROut(i,j,k) - rhereplus2)                             VERQUI1A.150   
     &            * (ROut(i,j,k) - rhereplus3)                             VERQUI1A.151   
     &            * DataIn (i,j,KOut(i,j,k)-2)                             VERQUI1A.152   
                                                                           VERQUI1A.153   
          Z1B =     (rhereminus2 - rhereminus)                             VERQUI1A.154   
     &            * (rhereminus2 - rhere)                                  VERQUI1A.155   
     &            * (rhereminus2 - rhereplus)                              VERQUI1A.156   
     &            * (rhereminus2 - rhereplus2)                             VERQUI1A.157   
     &            * (rhereminus2 - rhereplus3)                             VERQUI1A.158   
                                                                           VERQUI1A.159   
          Z2A =     (ROut(i,j,k) - rhereminus2)                            VERQUI1A.160   
     &            * (ROut(i,j,k) - rhere)                                  VERQUI1A.161   
     &            * (ROut(i,j,k) - rhereplus)                              VERQUI1A.162   
     &            * (ROut(i,j,k) - rhereplus2)                             VERQUI1A.163   
     &            * (ROut(i,j,k) - rhereplus3)                             VERQUI1A.164   
     &            * DataIn (i,j,KOut(i,j,k)-1)                             VERQUI1A.165   
                                                                           VERQUI1A.166   
          Z2B =     (rhereminus - rhereminus2)                             VERQUI1A.167   
     &            * (rhereminus - rhere)                                   VERQUI1A.168   
     &            * (rhereminus - rhereplus)                               VERQUI1A.169   
     &            * (rhereminus - rhereplus2)                              VERQUI1A.170   
     &            * (rhereminus - rhereplus3)                              VERQUI1A.171   
                                                                           VERQUI1A.172   
          Z3A =     (ROut(i,j,k) - rhereminus2)                            VERQUI1A.173   
     &            * (ROut(i,j,k) - rhereminus)                             VERQUI1A.174   
     &            * (ROut(i,j,k) - rhereplus)                              VERQUI1A.175   
     &            * (ROut(i,j,k) - rhereplus2)                             VERQUI1A.176   
     &            * (ROut(i,j,k) - rhereplus3)                             VERQUI1A.177   
     &            *  DataIn (i,j,KOut(i,j,k))                              VERQUI1A.178   
                                                                           VERQUI1A.179   
          Z3B =     (rhere - rhereminus2)                                  VERQUI1A.180   
     &            * (rhere - rhereminus)                                   VERQUI1A.181   
     &            * (rhere - rhereplus)                                    VERQUI1A.182   
     &            * (rhere - rhereplus2)                                   VERQUI1A.183   
     &            * (rhere - rhereplus3)                                   VERQUI1A.184   
                                                                           VERQUI1A.185   
          Z4A =     (ROut(i,j,k) - rhereminus2)                            VERQUI1A.186   
     &            * (ROut(i,j,k) - rhereminus)                             VERQUI1A.187   
     &            * (ROut(i,j,k) - rhere)                                  VERQUI1A.188   
     &            * (ROut(i,j,k) - rhereplus2)                             VERQUI1A.189   
     &            * (ROut(i,j,k) - rhereplus3)                             VERQUI1A.190   
     &            * DataIn (i,j,KOut(i,j,k)+1)                             VERQUI1A.191   
                                                                           VERQUI1A.192   
          Z4B =     (rhereplus - rhereminus2)                              VERQUI1A.193   
     &            * (rhereplus - rhereminus)                               VERQUI1A.194   
     &            * (rhereplus - rhere)                                    VERQUI1A.195   
     &            * (rhereplus - rhereplus2)                               VERQUI1A.196   
     &            * (rhereplus - rhereplus3)                               VERQUI1A.197   
                                                                           VERQUI1A.198   
          Z5A =     (ROut(i,j,k) - rhereminus2)                            VERQUI1A.199   
     &            * (ROut(i,j,k) - rhereminus)                             VERQUI1A.200   
     &            * (ROut(i,j,k) - rhere)                                  VERQUI1A.201   
     &            * (ROut(i,j,k) - rhereplus)                              VERQUI1A.202   
     &            * (ROut(i,j,k) - rhereplus3)                             VERQUI1A.203   
     &            * DataIn (i,j,KOut(i,j,k)+2)                             VERQUI1A.204   
                                                                           VERQUI1A.205   
          Z5B =     (rhereplus2 - rhereminus2)                             VERQUI1A.206   
     &            * (rhereplus2 - rhereminus)                              VERQUI1A.207   
     &            * (rhereplus2 - rhere)                                   VERQUI1A.208   
     &        * (rhereplus2 - rhereplus)                                   VERQUI1A.209   
     &            * (rhereplus2 - rhereplus3)                              VERQUI1A.210   
                                                                           VERQUI1A.211   
          Z6A =     (ROut(i,j,k) - rhereminus2)                            VERQUI1A.212   
     &            * (ROut(i,j,k) - rhereminus)                             VERQUI1A.213   
     &            * (ROut(i,j,k) - rhere)                                  VERQUI1A.214   
     &            * (ROut(i,j,k) - rhereplus)                              VERQUI1A.215   
     &            * (ROut(i,j,k) - rhereplus2)                             VERQUI1A.216   
     &            * DataIn (i,j,KOut(i,j,k)+3)                             VERQUI1A.217   
                                                                           VERQUI1A.218   
          Z6B =     (rhereplus3 - rhereminus2)                             VERQUI1A.219   
     &            * (rhereplus3 - rhereminus)                              VERQUI1A.220   
     &            * (rhereplus3 - rhere)                                   VERQUI1A.221   
     &            * (rhereplus3 - rhereplus)                               VERQUI1A.222   
     &            * (rhereplus3 - rhereplus2)                              VERQUI1A.223   
                                                                           VERQUI1A.224   
          DataOut (i,j,k) = Z1A/Z1B+Z2A/Z2B+Z3A/Z3B                        VERQUI1A.225   
     &                     +Z4A/Z4B+Z5A/Z5B+Z6A/Z6B                        VERQUI1A.226   
                                                                           VERQUI1A.227   
           End If                                                          VERQUI1A.228   
          End Do                                                           VERQUI1A.229   
         End Do                                                            VERQUI1A.230   
        End Do                                                             VERQUI1A.231   
                                                                           VERQUI1A.232   
        Return                                                             VERQUI1A.233   
        End                                                                VERQUI1A.234   
*ENDIF                                                                     VERQUI1A.235   
